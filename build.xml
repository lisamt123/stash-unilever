<!--    *******************************************************************************************************************-->
<!--    Build Script in Ant for Unilever Salesforce Projects - BEGIN                                               -->
<!--    Author : Steve & Velumani Angappan - Salesforce & Cognizant    Last Modified Date : 14/11/2015                     -->
<!--    ******************************************************************************************************************* -->
<project name="salesforce" default="validate" basedir="." xmlns:sf="antlib:com.salesforce">

  <!-- *************************************************************** -->
  <!--   Properties for Salesforce ANT targets                         -->
  <!-- *************************************************************** -->
  <property file="${basedir}/build.properties"/>
  <property environment="env"/>
  <!-- Properties for salesforce dataloader CLI for IPM NG-->
  <property name="dataLoaderAPIVersion" value="35.0.0-uber" />
  <!-- *************************************************************** -->
  <!--   Set-Up of Salesforce Ant / CLI Jar Classpath for IPM NG       -->
  <!-- *************************************************************** -->
  <!-- Define required jars for salesforce dataloder CLI-->
  <path id="taskDependencies">
    <pathelement location="${basedir}/lib/ant.jar"/>
    <pathelement location="${basedir}/lib/antutils.jar"/>
    <pathelement location="${basedir}/lib/commons-io-2.4.jar"/>
    <pathelement location="${basedir}/lib/commons-lang-2.6.jar"/>
    <pathelement location="${basedir}/lib/commons-logging-1.1.3.jar"/>
    <pathelement location="${basedir}/lib/gson-2.2.4.jar"/>
    <pathelement location="${basedir}/lib/httpclient-4.3.5.jar"/>
    <pathelement location="${basedir}/lib/httpcore-4.3.2.jar"/>
    <pathelement location="${basedir}/lib/json-20080701.jar"/>
  </path>
  <!-- Define salesforce Ant Jar-->
  <taskdef resource="com/salesforce/antlib.xml" uri="antlib:com.salesforce">
    <classpath>
      <pathelement location="${basedir}/lib/ant-salesforce.jar" />
    </classpath>
  </taskdef>
  <!-- ***************************************************************************** -->
  <!-- ANT Import Files for invoking APEX inside ANT Scripts                         -->
  <!-- ***************************************************************************** -->
  <import file="${basedir}/lib/exec_anon.xml"/>
  <import file="${basedir}/lib/deploy.xml"/>
  <import file="${basedir}/lib/undeploy.xml"/>
  <import file="${basedir}/lib/run_tests.xml"/>
  <import file="${basedir}/lib/package_generator.xml"/>
  <!-- ***************************************************************************** -->
  <!-- Recreate the deployment directory and retrieve  meta-data from your org     -->
  <!-- ***************************************************************************** -->
  <target name="retrieve" description="Recreate the deployment directory and retrieve all metadata from your org">
    <echo level="info">Performing a retrieve</echo>
    <mkdir dir="${basedir}/${sfdc.retrieveTarget}"/>
    <sf:retrieve username="${sf.username}"
     password="${sf.password}"
     serverurl="${sf.serverurl}"
     retrieveTarget="${basedir}/${sfdc.retrieveTarget}"
     unpackaged="src/package.xml"
     pollWaitMillis="${sfdc.pollWaitMillis}"
     maxPoll="${sfdc.maxPoll}"/>
     <delete includeemptydirs="true">
      <fileset dir="src" includes="**/*"/>
    </delete>
    <move file="${basedir}/${sfdc.retrieveTarget}" tofile="src"/>
  </target>
  <!-- ***************************************************************************** -->
  <!-- Deploy the meta-data from code Repository to salesforce your org     -->
  <!-- ***************************************************************************** -->
  <target name="deploy">
    <echo level="info">Performing the deploy</echo>
    <sf:deploy username="${sf.username}"
      password="${sf.password}"
      serverurl="${sf.serverurl}"
      runAllTests="false"
      testLevel="NoTestRun"
      logType="Detail"
      allowMissingFiles="true"
      autoUpdatePackage="true"
      ignoreWarnings="true"
      deployRoot="${basedir}/src"
      pollWaitMillis="${sfdc.pollWaitMillis}"
      maxPoll="${sfdc.maxPoll}"/>
  </target>

  <target name="deployIPM" depends="deploy"/>
  
  <!-- ***************************************************************************** -->
  <!-- Deploy Delta the meta-data from code Repository to salesforce your org      -->
  <!-- ***************************************************************************** -->
  <target name="deployDeltaIPM">
    <echo level="info">Performing the delta deploy</echo>
    <sf:deploy username="${sf.username}"
      password="${sf.password}"
      serverurl="${sf.serverurl}"
      runAllTests="false"
      testLevel="NoTestRun"
      logType="Detail"
      allowMissingFiles="true"
      autoUpdatePackage="true"
      ignoreWarnings="true"
      deployRoot="${basedir}/deploy/src"
      pollWaitMillis="${sfdc.pollWaitMillis}"
      maxPoll="${sfdc.maxPoll}"/>
  </target> 

  <!-- ***************************************************************************** -->
  <!-- Validate the  set of meta-data before deployment with Test run                -->
  <!-- ***************************************************************************** -->
  <target name="validate">
    <echo level="info">Testing the deployment</echo>
    <sf:deploy username="${sf.username}"
      password="${sf.password}"
      serverurl="${sf.serverurl}"
      checkOnly="true"
      runAllTests="true"
      logType="Debugonly"
      testLevel="RunLocalTests"
      allowMissingFiles="true"
      autoUpdatePackage="true"
      ignoreWarnings="true"
      deployRoot="src"
      pollWaitMillis="${sfdc.pollWaitMillis}"
      maxPoll="${sfdc.maxPoll}"/>
  </target>
  <!-- ***************************************************************************** -->
  <!-- Validate the  set of IPM NG meta-data before deployment without Test Classes  -->
  <!-- ***************************************************************************** -->
  <target name="validateNoTests">
    <echo level="info">Validate the deployment without running unit tests</echo>
    <sf:deploy username="${sf.username}"
      password="${sf.password}"
      serverurl="${sf.serverurl}"
      checkOnly="true"
      logType="Debugonly"
      allowMissingFiles="true"
      autoUpdatePackage="true"
      ignoreWarnings="true"
      deployRoot="src"
      pollWaitMillis="${sfdc.pollWaitMillis}"
      maxPoll="${sfdc.maxPoll}">
    </sf:deploy>
  </target>
  <target name="validateIPM" depends="validateNoTests"/>
  <!-- ***************************************************************************** -->
  <!-- Validate the  set of IPM NG meta-data before deployment with few Test Classes      -->
  <!-- ***************************************************************************** -->
  <target name="validateIPMTest1">
    <echo level="info">Testing the deployment of IPM NG</echo>
		<sf:deploy username="${sf.username}"
		  password="${sf.password}"
		  serverurl="${sf.serverurl}"
		  checkOnly="true"
		  logType="Debugonly"
		  testLevel="RunSpecifiedTests"
		  allowMissingFiles="true"
		  autoUpdatePackage="true"
		  ignoreWarnings="true"
		  deployRoot="src"
		  pollWaitMillis="${sfdc.pollWaitMillis}"
		  maxPoll="${sfdc.maxPoll}">
          <runTest>IPM_List_Milestones_Test</runTest>
		</sf:deploy>
  </target>  
  <!-- ************************************************************************************************ -->
  <!-- Validate the  set of IPM NG meta-data before deployment with Test Classes for Delta Deploy       -->
  <!-- ************************************************************************************************ -->
  <target name="validateDeltaIPM">
    <echo level="info">Testing the deployment of IPM NG with Delta</echo>
    <sf:deploy username="${sf.username}"
      password="${sf.password}"
      serverurl="${sf.serverurl}"
      checkOnly="true"
      logType="Debugonly"
      allowMissingFiles="true"
      autoUpdatePackage="true"
      ignoreWarnings="true"
      deployRoot="${basedir}/deploy/src"
      pollWaitMillis="${sfdc.pollWaitMillis}"
      maxPoll="${sfdc.maxPoll}">      
    </sf:deploy>
  </target>
  
  <!-- ***************************************************************************** -->
  <!-- Validate the  set of IPM NG meta-data before deployment with Test Classes      -->
  <!-- ***************************************************************************** -->
  <target name="validateIPMTest">
    <echo level="info">Testing the deployment of IPM NG</echo>
    <sf:deploy username="${sf.username}"
      password="${sf.password}"
      serverurl="${sf.serverurl}"
      checkOnly="true"
      logType="Debugonly"
      testLevel="RunSpecifiedTests"
      allowMissingFiles="true"
      autoUpdatePackage="true"
      ignoreWarnings="true"
      deployRoot="src"
      pollWaitMillis="${sfdc.pollWaitMillis}"
      maxPoll="${sfdc.maxPoll}">
	<runTest>IPM_AddManageSection_Test</runTest>
	<runTest>IPM_Approverlist_Test</runTest>
	<runTest>IPM_AssesmentHandler_Helper_Test</runTest>
	<runTest>IPM_AssortmentStrategy_Test</runTest>
	<runTest>IPM_Assumptions_Controller_Test</runTest>
	<runTest>IPM_BBCountryList_Test</runTest>
	<runTest>IPM_BBSectionData_Test</runTest>
	<runTest>IPM_BCC_Consolidate_Controller_Test</runTest>
	<runTest>IPM_BCCController_Test</runTest>
	<runTest>IPM_BD_BB_Report_BatchSchedule_Test</runTest>
	<runTest>IPM_BD_BB_Report_Batch_Test</runTest>
	<runTest>IPM_BETDueDateNotificationBatch_Test</runTest>
	<runTest>IPM_BETHelper_Test</runTest>
	<runTest>IPM_BETNotificationBatchSchedule_Test</runTest>
	<runTest>IPM_BETSuggestedMembersController_Test</runTest>
	<runTest>IPM_BETUpdateService_Test</runTest>
	<runTest>IPM_BosscardController_Test</runTest>
	<runTest>IPM_BosscardStatusController_Test</runTest>
	<runTest>IPM_ChangProjectDocStatusController_Test</runTest>
	<runTest>IPM_ChannelImageController_Test</runTest>
	<runTest>IPM_ChatterFeedHelper_Test</runTest>
	<runTest>IPM_ChatterUtilsHelper_Test</runTest>
	<runTest>IPM_ChatterUtils_Test</runTest>
	<runTest>IPM_CMIGateSectionController_Test</runTest>
	<runTest>IPM_CommentsListController_Test</runTest>
	<runTest>IPM_CompanyCard_Test</runTest>
	<runTest>IPM_Consumer_Evidence_Controller_Test</runTest>
	<runTest>IPM_ConsumerImageUploadController_Test</runTest>
	<runTest>IPM_CoreParameters_Test</runTest>
	<runTest>IPM_CountryHandler_Test</runTest>
	<runTest>IPM_CreateProject_Test</runTest>
	<runTest>IPM_CU_Complexity_Consolidated_Test</runTest>
	<runTest>IPM_CU_Complexity_Controller_Test</runTest>
	<runTest>IPM_CustomerChannelController_Test</runTest>
	<runTest>IPM_DueDateNotificationBatch_Test</runTest>
	<runTest>IPM_DueDateNotificationScheduler_Test</runTest>
	<runTest>IPM_EcoDesignSection_Test</runTest>
	<runTest>IPM_FileUploadController_Test</runTest>
	<runTest>IPM_FinancialActionStandards_Test</runTest>
	<runTest>IPM_FinancialController_Currency_Test</runTest>
	<runTest>IPM_FinancialController_Test</runTest>
	<runTest>IPM_FinancialCopyPasteGrid_Test</runTest>
	<runTest>IPM_FinancialTriggerHandler_Test</runTest>
	<runTest>IPM_FinancialValueWrapper_Test</runTest>
	<runTest>IPM_FinancialWrapper_Test</runTest>
	<runTest>IPM_FinancialYearTriggerHandler_Test</runTest>
	<runTest>IPM_FinGateController_Test</runTest>
	<runTest>IPM_FunnelController_Test</runTest>
	<runTest>IPM_GateCMI_Consolidated_Test</runTest>
	<runTest>IPM_GateCMIController_Test</runTest>
	<runTest>IPM_GateDocumentController_Test</runTest>
	<runTest>IPM_GateDocumentRiskManagement_Test</runTest>
	<runTest>IPM_GatekeeperChecklist_Test</runTest>
	<runTest>IPM_Gate_Milestones_Test</runTest>
	<runTest>IPM_GateRiskSection_Test</runTest>
	<runTest>IPM_Gate_RollOuts_Controller_Test</runTest>
	<runTest>IPM_GetHelpDoc_Test</runTest>
	<runTest>IPM_Global_Consolidated_Controller_Test</runTest>
	<runTest>IPM_GroupManagement_Test</runTest>
	<runTest>IPM_HomePageController_Test</runTest>
	<runTest>IPM_ImageUploadController_Test</runTest>
	<runTest>IPM_List_Milestones_Test</runTest>
	<runTest>IPM_MilestoneHandler_Test</runTest>
	<runTest>IPM_Milestone_Test</runTest>
	<runTest>IPM_MyList_Test</runTest>
	<runTest>IPM_MyProjects_Test</runTest>
	<runTest>IPM_MyTaskList_Test</runTest>
	<runTest>IPM_NewTask_Test</runTest>
	<runTest>IPM_NotifyUsersRoleChanged_Test</runTest>
	<runTest>IPM_ObjHistoryComponentController_Test</runTest>
	<runTest>IPM_OTIFstatusController_Test</runTest>
	<runTest>IPM_PjtDocSectionHstryController_Test</runTest>
	<runTest>IPM_ProjDocSectionController_Test</runTest>
	<runTest>IPM_ProjectCountryDetails_Test</runTest>
	<runTest>IPM_ProjectHandler_Test</runTest>
	<runTest>IPM_ProjectHelper_Test</runTest>
	<runTest>IPM_ProjectOverviewCtrl_Test</runTest>
	<runTest>IPM_ProjectOverviewCtrol_Test</runTest>
	<runTest>IPM_ProjectResourceHandler_Test</runTest>
	<runTest>IPM_ProjectResourceTriggerHandlerTest</runTest>
	<runTest>IPM_ProjectRolloutHandler_Test</runTest>
	<runTest>IPM_ProjectSearchCtrl_Test</runTest>
	<runTest>IPM_ProjectSectionContentHelper_Test</runTest>
	<runTest>IPM_ProjectSetUpController_Test</runTest>
	<runTest>IPM_ProjectTriggerHandler_Test</runTest>
	<runTest>IPM_Resource_Allocation_Test</runTest>
	<runTest>IPM_RolloutPlansAddController_Test</runTest>
	<runTest>IPM_RolloutPlansTableController_Test</runTest>
	<runTest>IPM_RolloutTriggerHandler_Test</runTest>
	<runTest>IPM_SampleTestProjShare</runTest>
	<runTest>IPM_SyncFinanceTableTLD_Test</runTest>
	<runTest>IPM_TaskCompCtrl_Test</runTest>
	<runTest>IPM_TaskHelper_Test</runTest>
	<runTest>IPM_Taskview_Test</runTest>
	<runTest>IPM_Team_Assignment_Controller_Test</runTest>
	<runTest>IPM_TestCovHelper</runTest>
	<runTest>IPM_TestFactory_Helper</runTest>
	<runTest>IPM_Test_ProjectUtility</runTest>
	<runTest>IPM_UpdateGlobalProjectName_Test</runTest>
	<runTest>IPM_UploadBusinessCase_Test</runTest>
    </sf:deploy>
  </target>
  <!-- ***************************************************************************** -->
  <!-- Running the IPM NG Test Classes with Dummy package                            -->
  <!-- ***************************************************************************** -->
  <target name="validateIPMTestOnly">
    <echo level="info">Running IPM NG Test Classes</echo>
    <sf:deploy username="${sf.username}"
      password="${sf.password}"
      serverurl="${sf.serverurl}"
      logType="Debugonly"
      testLevel="RunSpecifiedTests"
      ignoreWarnings="true"
      deployRoot="${basedir}/test"
      pollWaitMillis="${sfdc.pollWaitMillis}"
      maxPoll="${sfdc.maxPoll}">
  <runTest>IPM_AddManageSection_Test</runTest>
	<runTest>IPM_Approverlist_Test</runTest>
	<runTest>IPM_AssesmentHandler_Helper_Test</runTest>
	<runTest>IPM_AssortmentStrategy_Test</runTest>
	<runTest>IPM_Assumptions_Controller_Test</runTest>
	<runTest>IPM_BBCountryList_Test</runTest>
	<runTest>IPM_BBSectionData_Test</runTest>
	<runTest>IPM_BCC_Consolidate_Controller_Test</runTest>
	<runTest>IPM_BCCController_Test</runTest>
	<runTest>IPM_BD_BB_Report_BatchSchedule_Test</runTest>
	<runTest>IPM_BD_BB_Report_Batch_Test</runTest>
	<runTest>IPM_BETDueDateNotificationBatch_Test</runTest>
	<runTest>IPM_BETHelper_Test</runTest>
	<runTest>IPM_BETNotificationBatchSchedule_Test</runTest>
	<runTest>IPM_BETSuggestedMembersController_Test</runTest>
	<runTest>IPM_BETUpdateService_Test</runTest>
	<runTest>IPM_BosscardController_Test</runTest>
	<runTest>IPM_BosscardStatusController_Test</runTest>
	<runTest>IPM_ChangProjectDocStatusController_Test</runTest>
	<runTest>IPM_ChannelImageController_Test</runTest>
	<runTest>IPM_ChatterFeedHelper_Test</runTest>
	<runTest>IPM_ChatterUtilsHelper_Test</runTest>
	<runTest>IPM_ChatterUtils_Test</runTest>
	<runTest>IPM_CMIGateSectionController_Test</runTest>
	<runTest>IPM_CommentsListController_Test</runTest>
	<runTest>IPM_CompanyCard_Test</runTest>
	<runTest>IPM_Consumer_Evidence_Controller_Test</runTest>
	<runTest>IPM_ConsumerImageUploadController_Test</runTest>
	<runTest>IPM_CoreParameters_Test</runTest>
	<runTest>IPM_CountryHandler_Test</runTest>
	<runTest>IPM_CreateProject_Test</runTest>
	<runTest>IPM_CU_Complexity_Consolidated_Test</runTest>
	<runTest>IPM_CU_Complexity_Controller_Test</runTest>
	<runTest>IPM_CustomerChannelController_Test</runTest>
	<runTest>IPM_DueDateNotificationBatch_Test</runTest>
	<runTest>IPM_DueDateNotificationScheduler_Test</runTest>
	<runTest>IPM_EcoDesignSection_Test</runTest>
	<runTest>IPM_FileUploadController_Test</runTest>
	<runTest>IPM_FinancialActionStandards_Test</runTest>
	<runTest>IPM_FinancialController_Test</runTest>
	<runTest>IPM_FinancialCopyPasteGrid_Test</runTest>
	<runTest>IPM_FinancialTriggerHandler_Test</runTest>
	<runTest>IPM_FinancialValueWrapper_Test</runTest>
	<runTest>IPM_FinancialWrapper_Test</runTest>
	<runTest>IPM_FinancialYearTriggerHandler_Test</runTest>
	<runTest>IPM_FinGateController_Test</runTest>
	<runTest>IPM_FunnelController_Test</runTest>
	<runTest>IPM_GateCMI_Consolidated_Test</runTest>
	<runTest>IPM_GateCMIController_Test</runTest>
	<runTest>IPM_GateDocumentController_Test</runTest>
	<runTest>IPM_GateDocumentRiskManagement_Test</runTest>
	<runTest>IPM_GatekeeperChecklist_Test</runTest>
	<runTest>IPM_Gate_Milestones_Test</runTest>
	<runTest>IPM_GateRiskSection_Test</runTest>
	<runTest>IPM_Gate_RollOuts_Controller_Test</runTest>
	<runTest>IPM_GetHelpDoc_Test</runTest>
	<runTest>IPM_Global_Consolidated_Controller_Test</runTest>
	<runTest>IPM_GroupManagement_Test</runTest>
	<runTest>IPM_HomePageController_Test</runTest>
	<runTest>IPM_ImageUploadController_Test</runTest>
	<runTest>IPM_List_Milestones_Test</runTest>
	<runTest>IPM_MilestoneHandler_Test</runTest>
	<runTest>IPM_Milestone_Test</runTest>
	<runTest>IPM_MyList_Test</runTest>
	<runTest>IPM_MyProjects_Test</runTest>
	<runTest>IPM_NewTask_Test</runTest>
	<runTest>IPM_NotifyUsersRoleChanged_Test</runTest>
	<runTest>IPM_ObjHistoryComponentController_Test</runTest>
	<runTest>IPM_OTIFstatusController_Test</runTest>
	<runTest>IPM_PjtDocSectionHstryController_Test</runTest>
	<runTest>IPM_ProjDocSectionController_Test</runTest>
	<runTest>IPM_ProjectCountryDetails_Test</runTest>
	<runTest>IPM_ProjectHandler_Test</runTest>
	<runTest>IPM_ProjectHelper_Test</runTest>
	<runTest>IPM_ProjectOverviewCtrl_Test</runTest>
	<runTest>IPM_ProjectOverviewCtrol_Test</runTest>
	<runTest>IPM_ProjectResourceHandler_Test</runTest>
	<runTest>IPM_ProjectResourceTriggerHandlerTest</runTest>
	<runTest>IPM_ProjectRolloutHandler_Test</runTest>
	<runTest>IPM_ProjectSearchCtrl_Test</runTest>
	<runTest>IPM_ProjectSectionContentHelper_Test</runTest>
	<runTest>IPM_ProjectSetUpController_Test</runTest>
	<runTest>IPM_ProjectTriggerHandler_Test</runTest>
	<runTest>IPM_Resource_Allocation_Test</runTest>
	<runTest>IPM_RolloutPlansAddController_Test</runTest>
	<runTest>IPM_RolloutPlansTableController_Test</runTest>
	<runTest>IPM_RolloutTriggerHandler_Test</runTest>
	<runTest>IPM_SampleTestProjShare</runTest>
	<runTest>IPM_SyncFinanceTableTLD_Test</runTest>
	<runTest>IPM_TaskCompCtrl_Test</runTest>
	<runTest>IPM_TaskHelper_Test</runTest>
	<runTest>IPM_Taskview_Test</runTest>
	<runTest>IPM_Team_Assignment_Controller_Test</runTest>
	<runTest>IPM_TestCovHelper</runTest>
	<runTest>IPM_TestFactory_Helper</runTest>
	<runTest>IPM_Test_ProjectUtility</runTest>
	<runTest>IPM_UpdateGlobalProjectName_Test</runTest>
	<runTest>IPM_UploadBusinessCase_Test</runTest>
    </sf:deploy>
  </target>  
  <!-- ***************************************************************************** -->
  <!-- Data export / import Targets For IPM NG For Post Deployment Activities        -->
  <!-- ***************************************************************************** -->
  <target name="initDataDirectory" description="Removes and re-creates a blank data directory in orgs/${orgname}">
    <delete dir="${basedir}/orgs/${orgname}/data"/>
    <mkdir dir="${basedir}/orgs/${orgname}/data"/>
  </target>
  <!-- Export Data from given Salesforce Org -->
  <target name="exportData" description="Export Salesforce objects">
    <sfExport object="${object}" orgserver="${sf.orgserver}" basedir="${basedir}" orgname="${orgname}" username="${sf.username}" password="${sf.passwordencrypted}" soql="${soql}" />
  </target>

  <macrodef name="sfExport">
    <attribute name="object"/>
    <attribute name="basedir"/>
    <attribute name="orgname"/>
    <attribute name="username"/>
    <attribute name="password"/>
    <attribute name="orgserver"/>
    <attribute name="soql"/>
    <sequential>
      <echo message="Exporting @{object}"/>
      <mkdir dir="@{basedir}/orgs/@{orgname}/data"/>
      <copy file="@{basedir}/datascripts/template-export-process-conf.xml" tofile="@{basedir}/orgs/@{orgname}/data/process-conf.xml" overwrite="true" failonerror="true"/>
      <replace file="@{basedir}/orgs/@{orgname}/data/process-conf.xml">
        <replacefilter token="_ORGSERVER_" value="@{orgserver}"/>
        <replacefilter token="_USERNAME_" value="@{username}"/>
        <replacefilter token="_ENCRYPTED_PASSWORD_" value="@{password}"/>
        <replacefilter token="_ENCRYPTION_KEY_FILE_" value="@{basedir}/datascripts/dataloader_encryption_key.txt"/>
        <replacefilter token="_DEBUG_MSG_FILE_" value="@{basedir}/orgs/@{orgname}/data/debug.log"/>
        <replacefilter token="_OBJECT_" value="@{object}"/>
        <replacefilter token="_DATA_FILENAME_" value="@{basedir}/orgs/@{orgname}/data/@{object}Export.csv"/>
        <replacefilter token="_MAPPING_FILE_" value="@{basedir}/datascripts/mappingfiles/@{object}ExportMap.sdl"/>
        <replacefilter token="_OUTPUT_SUCCESS_FILE_" value="@{basedir}/orgs/@{orgname}/data/@{object}Export_success.csv"/>
        <replacefilter token="_OUTPUT_ERROR_FILE_" value="@{basedir}/orgs/@{orgname}/data/@{object}Export_error.csv"/>
        <replacefilter token="_EXTRACTION_SOQL_" value="@{soql}"/>
      </replace>
      <java classname="com.salesforce.dataloader.process.ProcessRunner" classpath="@{basedir}/lib/dataloader-${dataLoaderAPIVersion}.jar" failonerror="true">
        <sysproperty key="salesforce.config.dir" value="@{basedir}/orgs/@{orgname}/data"/>
        <arg line="process.name=exportObject"/>
      </java>
    </sequential>
  </macrodef>
  <!-- ***************************************************************************** -->
  <!-- Validate the  set of BET meta-data before deployment                          -->
  <!-- ***************************************************************************** -->
  <target name="validateBET">
    <echo level="info">Testing the deployment of BET</echo>
    <sf:deploy username="${sf.username}"
      password="${sf.password}"
      serverurl="${sf.serverurl}"
      checkOnly="true"
      logType="Debugonly"
      testLevel="RunSpecifiedTests"
      allowMissingFiles="true"
      autoUpdatePackage="true"
      ignoreWarnings="true"
      deployRoot="src"
      pollWaitMillis="${sfdc.pollWaitMillis}"
      maxPoll="${sfdc.maxPoll}">
      <runTest>BET_AccessService</runTest>
      <runTest>BET_AccessServiceTest</runTest>
      <runTest>BET_ApproveProjectsComponentContrTest</runTest>
      <runTest>BET_ApproveProjectsComponentController</runTest>
      <runTest>BET_AssetHandler</runTest>
      <runTest>BET_AssetHandlerCls</runTest>
      <runTest>BET_AssetHandlerClsTest</runTest>
      <runTest>BET_AssetService</runTest>
      <runTest>BET_AssetServiceTest</runTest>
      <runTest>BET_BETChangesLogger</runTest>
      <runTest>BET_BETHandler</runTest>
      <runTest>BET_BETHandlerCls</runTest>
      <runTest>BET_BETHandlerClsHelper</runTest>
      <runTest>BET_BETService</runTest>
      <runTest>BET_BETServiceTest</runTest>
      <runTest>BET_BETWrapper</runTest>
      <runTest>BET_BatchAssetStatusMapping</runTest>
      <runTest>BET_BatchAssetStatusMapping_Test</runTest>
      <runTest>BET_BatchBETStatusMapping</runTest>
      <runTest>BET_BatchBETStatusMapping_Test</runTest>
      <runTest>BET_BatchBrandDelete</runTest>
      <runTest>BET_BatchBrandDelete_Test</runTest>
      <runTest>BET_BatchBrandMapping</runTest>
      <runTest>BET_BatchBrandMapping_Test</runTest>
      <runTest>BET_BatchCategoryMapping</runTest>
      <runTest>BET_BatchCategoryMapping_Test</runTest>
      <runTest>BET_BatchCopyBrandValues</runTest>
      <runTest>BET_BatchCopyBrandValues_Test</runTest>
      <runTest>BET_BatchDeniedMemberRequestDelete</runTest>
      <runTest>BET_BatchDeniedMemberRequestDelete_Test</runTest>
      <runTest>BET_BatchMediaChannel1Mapping</runTest>
      <runTest>BET_BatchMediaChannel1Mapping_Test</runTest>
      <runTest>BET_BatchOldAssetStatusMapping</runTest>
      <runTest>BET_BatchOldAssetStatusMapping_Test</runTest>
      <runTest>BET_BatchScheduler</runTest>
      <runTest>BET_BatchScheduler_Test</runTest>
      <runTest>BET_BatchUpdateChatterGroupInfo</runTest>
      <runTest>BET_BatchUpdateChatterGroupInfo_Test</runTest>
      <runTest>BET_CategoryBrandSelectionController</runTest>
      <runTest>BET_CategoryBrandSelectionControllerTest</runTest>
      <runTest>BET_CategoryComponentData</runTest>
      <runTest>BET_ChatterController</runTest>
      <runTest>BET_ChatterController_Test</runTest>
      <runTest>BET_ChatterGroupAutoArchDis_BatchTest</runTest>
      <runTest>BET_ChatterGroupAutoArchiveDisable_Batch</runTest>
      <runTest>BET_CommonService</runTest>
      <runTest>BET_CommonServiceTest</runTest>
      <runTest>BET_CustomBETException</runTest>
      <runTest>BET_DataFixReleaseDate_Batch</runTest>
      <runTest>BET_DataFixReleaseDate_BatchTest</runTest>
      <runTest>BET_EditAssetController</runTest>
      <runTest>BET_EditAssetController_Test</runTest>
      <runTest>BET_EmailNotificationService</runTest>
      <runTest>BET_EmailNotificationServiceTest</runTest>
      <runTest>BET_ExpectedAssetsController</runTest>
      <runTest>BET_ExpectedAssetsControllerTest</runTest>
      <runTest>BET_FollowRequestTriggerHandler</runTest>
      <runTest>BET_FollowRequestTriggerHandlerCls</runTest>
      <runTest>BET_FollowRequestTriggerHandlerClsHelper</runTest>
      <runTest>BET_FollowRequestTriggerHandlerClsTest</runTest>
      <runTest>BET_InoplanToIPMMigration_Batch</runTest>
      <runTest>BET_InoplanToIPMMigration_Batch_Test</runTest>
      <runTest>BET_LinkedProjectsComponentContrTest</runTest>
      <runTest>BET_LinkedProjectsComponentController</runTest>
      <runTest>BET_LinkingService</runTest>
      <runTest>BET_LinkingServiceHelper</runTest>
      <runTest>BET_LinkingServiceHelperTest</runTest>
      <runTest>BET_LinkingServiceTest</runTest>
      <runTest>BET_MDODataMigrationAndTransform_Batch</runTest>
      <runTest>BET_ManagerunTestController</runTest>
      <runTest>BET_ManagerunTestController_Test</runTest>
      <runTest>BET_ManagerunTestController_Test2</runTest>
      <runTest>BET_ManagerunTestController_Test3</runTest>
      <runTest>BET_MasterDataService</runTest>
      <runTest>BET_MasterDataServiceTest</runTest>
      <runTest>BET_MemberBucketWrapper</runTest>
      <runTest>BET_MemberRequestHandlerCls</runTest>
      <runTest>BET_MemberRequestHandlerClsTest</runTest>
      <runTest>BET_Member_RequestHandler</runTest>
      <runTest>BET_NewBetComponentController</runTest>
      <runTest>BET_NewBetComponentControllerTest</runTest>
      <runTest>BET_NewBetController</runTest>
      <runTest>BET_NewBetControllerTest</runTest>
      <runTest>BET_PresentationBatch</runTest>
      <runTest>BET_PresentationBatch_Test</runTest>
      <runTest>BET_ReleaseDateEmails</runTest>
      <runTest>BET_ReleaseDateEmails_Test</runTest>
      <runTest>BET_SCH_BatchDeniedMemberRequestDel_Test</runTest>
      <runTest>BET_SCH_BatchDeniedMemberRequestDelete</runTest>
      <runTest>BET_SoslFieldsBatch</runTest>
      <runTest>BET_SoslFieldsBatch_Test</runTest>
      <runTest>BET_SuggestrunTestController</runTest>
      <runTest>BET_SuggestrunTestControllerTest</runTest>
      <runTest>BET_SuggestedrunTestervice</runTest>
      <runTest>BET_SuggestedrunTesterviceTest</runTest>
      <runTest>BET_Team_MemberHandler</runTest>
      <runTest>BET_Team_MemberHandlerCls</runTest>
      <runTest>BET_Team_MemberHandlerClsHelper</runTest>
      <runTest>BET_Team_MemberHandlerClsHelperTest</runTest>
      <runTest>BET_Team_MemberHandlerClsTest</runTest>
      <runTest>BET_TestUtils</runTest>
      <runTest>BET_TestingHelper</runTest>
      <runTest>BET_TriggerFactory</runTest>
      <runTest>BET_TriggerFactory</runTest>
      <runTest>BET_Triggers_Test</runTest>
      <runTest>BET_UpdateBETSearchHandler</runTest>
      <runTest>BET_UpsertBETController</runTest>
      <runTest>BET_UpsertBETControllerTest</runTest>
      <runTest>BET_AccessService</runTest>
      <runTest>BET_AccessServiceTest</runTest>
      <runTest>BET_ApproveProjectsComponentContrTest</runTest>
      <runTest>BET_ApproveProjectsComponentController</runTest>
      <runTest>BET_AssetHandler</runTest>
      <runTest>BET_AssetHandlerCls</runTest>
      <runTest>BET_AssetHandlerClsTest</runTest>
      <runTest>BET_AssetService</runTest>
      <runTest>BET_AssetServiceTest</runTest>
      <runTest>BET_BETChangesLogger</runTest>
      <runTest>BET_BETHandler</runTest>
      <runTest>BET_BETHandlerCls</runTest>
      <runTest>BET_BETHandlerClsHelper</runTest>
      <runTest>BET_BETService</runTest>
      <runTest>BET_BETServiceTest</runTest>
      <runTest>BET_BETWrapper</runTest>
      <runTest>BET_BatchAssetStatusMapping</runTest>
      <runTest>BET_BatchAssetStatusMapping_Test</runTest>
      <runTest>BET_BatchBETStatusMapping</runTest>
      <runTest>BET_BatchBETStatusMapping_Test</runTest>
      <runTest>BET_BatchBrandDelete</runTest>
      <runTest>BET_BatchBrandDelete_Test</runTest>
      <runTest>BET_BatchBrandMapping</runTest>
      <runTest>BET_BatchBrandMapping_Test</runTest>
      <runTest>BET_BatchCategoryMapping</runTest>
      <runTest>BET_BatchCategoryMapping_Test</runTest>
      <runTest>BET_BatchCopyBrandValues</runTest>
      <runTest>BET_BatchCopyBrandValues_Test</runTest>
      <runTest>BET_BatchDeniedMemberRequestDelete</runTest>
      <runTest>BET_BatchDeniedMemberRequestDelete_Test</runTest>
      <runTest>BET_BatchMediaChannel1Mapping</runTest>
      <runTest>BET_BatchMediaChannel1Mapping_Test</runTest>
      <runTest>BET_BatchOldAssetStatusMapping</runTest>
      <runTest>BET_BatchOldAssetStatusMapping_Test</runTest>
      <runTest>BET_BatchScheduler</runTest>
      <runTest>BET_BatchScheduler_Test</runTest>
      <runTest>BET_BatchUpdateChatterGroupInfo</runTest>
      <runTest>BET_BatchUpdateChatterGroupInfo_Test</runTest>
      <runTest>BET_CategoryBrandSelectionController</runTest>
      <runTest>BET_CategoryBrandSelectionControllerTest</runTest>
      <runTest>BET_CategoryComponentData</runTest>
      <runTest>BET_ChatterController</runTest>
      <runTest>BET_ChatterController_Test</runTest>
      <runTest>BET_ChatterGroupAutoArchDis_BatchTest</runTest>
      <runTest>BET_ChatterGroupAutoArchiveDisable_Batch</runTest>
      <runTest>BET_CommonService</runTest>
      <runTest>BET_CommonServiceTest</runTest>
      <runTest>BET_CustomBETException</runTest>
      <runTest>BET_DataFixReleaseDate_Batch</runTest>
      <runTest>BET_DataFixReleaseDate_BatchTest</runTest>
      <runTest>BET_EditAssetController</runTest>
      <runTest>BET_EditAssetController_Test</runTest>
      <runTest>BET_EmailNotificationService</runTest>
      <runTest>BET_EmailNotificationServiceTest</runTest>
      <runTest>BET_ExpectedAssetsController</runTest>
      <runTest>BET_ExpectedAssetsControllerTest</runTest>
      <runTest>BET_FollowRequestTriggerHandler</runTest>
      <runTest>BET_FollowRequestTriggerHandlerCls</runTest>
      <runTest>BET_FollowRequestTriggerHandlerClsHelper</runTest>
      <runTest>BET_FollowRequestTriggerHandlerClsTest</runTest>
      <runTest>BET_InoplanToIPMMigration_Batch</runTest>
      <runTest>BET_InoplanToIPMMigration_Batch_Test</runTest>
      <runTest>BET_LinkedProjectsComponentContrTest</runTest>
      <runTest>BET_LinkedProjectsComponentController</runTest>
      <runTest>BET_LinkingService</runTest>
      <runTest>BET_LinkingServiceHelper</runTest>
      <runTest>BET_LinkingServiceHelperTest</runTest>
      <runTest>BET_LinkingServiceTest</runTest>
      <runTest>BET_MDODataMigrationAndTransform_Batch</runTest>
      <runTest>BET_ManagerunTestController</runTest>
      <runTest>BET_ManagerunTestController_Test</runTest>
      <runTest>BET_ManagerunTestController_Test2</runTest>
      <runTest>BET_ManagerunTestController_Test3</runTest>
      <runTest>BET_MasterDataService</runTest>
      <runTest>BET_MasterDataServiceTest</runTest>
      <runTest>BET_MemberBucketWrapper</runTest>
      <runTest>BET_MemberRequestHandlerCls</runTest>
      <runTest>BET_MemberRequestHandlerClsTest</runTest>
      <runTest>BET_Member_RequestHandler</runTest>
      <runTest>BET_NewBetComponentController</runTest>
      <runTest>BET_NewBetComponentControllerTest</runTest>
      <runTest>BET_NewBetController</runTest>
      <runTest>BET_NewBetControllerTest</runTest>
      <runTest>BET_PresentationBatch</runTest>
      <runTest>BET_PresentationBatch_Test</runTest>
      <runTest>BET_ReleaseDateEmails</runTest>
      <runTest>BET_ReleaseDateEmails_Test</runTest>
      <runTest>BET_SCH_BatchDeniedMemberRequestDel_Test</runTest>
      <runTest>BET_SCH_BatchDeniedMemberRequestDelete</runTest>
      <runTest>BET_SoslFieldsBatch</runTest>
      <runTest>BET_SoslFieldsBatch_Test</runTest>
      <runTest>BET_SuggestrunTestController</runTest>
      <runTest>BET_SuggestrunTestControllerTest</runTest>
      <runTest>BET_SuggestedrunTestervice</runTest>
      <runTest>BET_SuggestedrunTesterviceTest</runTest>
      <runTest>BET_Team_MemberHandler</runTest>
      <runTest>BET_Team_MemberHandlerCls</runTest>
      <runTest>BET_Team_MemberHandlerClsHelper</runTest>
      <runTest>BET_Team_MemberHandlerClsHelperTest</runTest>
      <runTest>BET_Team_MemberHandlerClsTest</runTest>
      <runTest>BET_TestUtils</runTest>
      <runTest>BET_TestingHelper</runTest>
      <runTest>BET_TriggerFactory</runTest>
      <runTest>BET_TriggerFactory</runTest>
      <runTest>BET_Triggers_Test</runTest>
      <runTest>BET_UpdateBETSearchHandler</runTest>
      <runTest>BET_UpsertBETController</runTest>
      <runTest>BET_UpsertBETControllerTest</runTest>
    </sf:deploy>
  </target>
  <!-- ***************************************************************************** -->
  <!-- Performing the tests and deploy of Meta-data                                  -->
  <!-- ***************************************************************************** -->
  <target name="deployRunAllTests">
    <echo level="info">Performing the tests and deploy</echo>
    <sf:deploy username="${sf.username}"
      password="${sf.password}"
      serverurl="${sf.serverurl}"
      checkOnly="false"
      runAllTests="true"
      testLevel="RunLocalTests"
      logType="Detail"
      allowMissingFiles="true"
      autoUpdatePackage="true"
      ignoreWarnings="true"
      deployRoot="${basedir}/src"
      pollWaitMillis="${sfdc.pollWaitMillis}"
      maxPoll="${sfdc.maxPoll}"/>
    </target>
  <!-- *************************************************************************************** -->
  <!-- Performing undeploy Salesforce components from Salesforce Org- DESTRUCTIVE CHANGE       -->
  <!-- *************************************************************************************** -->
    <target name="undeploy">
    <echo level="info">Performing undeployCode - DESTRUCTIVE CHANGE</echo>
    <sf:deploy username="${sf.username}"
      password="${sf.password}"
      serverurl="${sf.serverurl}"
      ignoreWarnings="true"
	  checkOnly="false"
      deployRoot="${basedir}/undeploy"
      pollWaitMillis="${sfdc.pollWaitMillis}"
      maxPoll="${sfdc.maxPoll}"/>
  </target>
  <!-- *************************************************************************************** -->
  <!-- CI Sandbox setup scripts to allow data dependent tests to pass                          -->
  <!-- *************************************************************************************** -->
  <target name="sandbox-setup" depends="enable-deploy-user">
    <echo level="info">CI Sandbox setup scripts to allow data dependent tests to pass</echo>
    <antcall target="ExecAnonScript">
      <param name="what" value="${basedir}/scripts/sandbox-setup.apex" />
      <param name="username" value="${sf.username}" />
      <param name="password" value="${sf.password}" />
      <param name="serverurl" value="${sf.serverurl}"/>
    </antcall>
  </target>
  <!-- *************************************************************************************** -->
  <!-- Enable CI deploy user which is used to run unit tests                                   -->
  <!-- *************************************************************************************** -->
  <target name="enable-deploy-user">
    <echo level="info">Enable CI deploy user which is used to run unit tests</echo>
    <antcall target="ExecAnonScript">
      <param name="what" value="${basedir}/scripts/enable-deploy-user.apex" />
      <param name="username" value="${sf.username}" />
      <param name="password" value="${sf.password}" />
      <param name="host" value="${sf.serverurl}"/>
    </antcall>
  </target>
  <!-- **************************************************************************************** -->
  <!-- IPM NG Application Data Set-up Using APEX Anonymous Code For Post Deployment Activities  -->
  <!-- **************************************************************************************** -->
  <!-- Script to Insert Account For Testing Purpose -->
  <target name="LoadTest">
    <antcall target="ExecAnonScript">
      <param name="what" value="scripts/IPM_CustomSettings.apex" />
    </antcall>
  </target>
  <!-- Script For Mapping Section to Task -->
  <target name="MapSectionToTask">
    <antcall target="ExecAnonScript">
      <param name="what" value="scripts/IPM_MapSectionToTask.apex" />
    </antcall>
  </target>
  <!-- Script For Update Parent SectionID For The Sections  -->
  <target name="UpateParentSectionID">
    <antcall target="ExecAnonScript">
      <param name="what" value="scripts/IPM_UpdateParentSectionID.apex" />
    </antcall>
  </target>
  <!-- Invoke All the IPM NG Apex Scripts  -->
  <target name="RunAllApexScripts">
   <echo level="info">Script For Mapping Section to Task</echo>
   <antcall target="MapSectionToTask"/>
   <echo level="info">Script For Update Parent SectionID For The Sections</echo>
   <antcall target="UpateParentSectionID"/>
  </target>
  <!-- *************************************************************************************** -->
  <!-- Recreate the deployment directory and retrieve all meta-data from your org              -->
  <!-- *************************************************************************************** -->
  <target name="retrieveAll" description="Recreate the deployment directory and retrieve all metadata from your org">
  <echo level="info">Performing a retrieve</echo>
  <mkdir dir="${basedir}/${sfdc.retrieveTarget}"/>
  <sf:retrieve username="${sf.username}"
   password="${sf.password}"
   serverurl="${sf.serverurl}"
   retrieveTarget="${basedir}/${sfdc.retrieveTarget}"
   unpackaged="packageAll.xml"
   pollWaitMillis="${sfdc.pollWaitMillis}"
   maxPoll="${sfdc.maxPoll}"/>
   <delete includeemptydirs="true">
    <fileset dir="src" includes="**/*"/>
  </delete>
  <move file="${basedir}/${sfdc.retrieveTarget}" tofile="src"/>
  </target>
  <!-- *************************************************************************************** -->
  <!-- Clean-up the unwanted salesforce components                           -->
  <!-- *************************************************************************************** -->
  <target name="cleanup">
    <replaceregexp byline="true" flags="g">
      <regexp pattern="&lt;icon&gt;.*&lt;/icon&gt;.*$"/>
      <substitution expression=""/>
      <fileset dir="${basedir}">
        <include name="**/*.tab"/>
      </fileset>
    </replaceregexp>
    <replaceregexp byline="false" flags="gm">
      <regexp pattern="[\s].*listViews(.*[\s]){2}.*ALL(.*\s){12}"/>
      <substitution expression=""/>
      <fileset dir="${basedir}">
        <include name="**/Asset__c.object"/>
      </fileset>
    </replaceregexp>
    <replaceregexp byline="false" flags="gm">
      <regexp pattern="[\s].*userPermissions.*[\s].*[\s].*(ViewAllData|EditBillingInfo|ManageSandboxes|ManageTranslation|CustomizeApplication|LightningExperienceUser|ManageContentProperties|ManageContentTypes|ContentAdministrator).*[\s].*"/>
      <substitution expression=""/>
      <fileset dir="${basedir}">
        <include name="**/*.profile"/>
        <include name="**/*.permissionset"/>
      </fileset>
    </replaceregexp>
    <replaceregexp byline="false" flags="gm">
      <regexp pattern="[\s].*layoutAssignments.*[\s].*[\s].*(SocialPost-Social|SocialPersona-Social).*[\s]"/>
      <substitution expression=""/>
      <fileset dir="${basedir}">
        <include name="**/*.profile"/>
        <include name="**/*.permissionset"/>
      </fileset>
    </replaceregexp>
    <replaceregexp byline="false" flags="gm">
      <regexp pattern="[\s].*layoutAssignments.*[\s].*[\s].*(ContentVersion-One).*[\s].*"/>
      <substitution expression=""/>
      <fileset dir="${basedir}">
        <include name="**/*.profile"/>
        <include name="**/*.permissionset"/>
      </fileset>
    </replaceregexp>    
    <delete><fileset dir="${basedir}" includes="**/agf__ADM_Work__c.object"/></delete>
    <delete><fileset dir="${basedir}" includes="**/KnowledgeArticleVersion.object"/></delete>
    <delete><fileset dir="${basedir}" includes="**/SocialPost.workflow"/></delete>
    <delete><fileset dir="${basedir}" includes="**/SocialPersona.workflow"/></delete>
    <delete>
      <fileset dir="${basedir}">
        <include name="**/SocialPersona-Social Persona Layout.layout"/>
        <include name="**/SocialPost-Social Post Layout.layout"/>
      </fileset>
    </delete>
    <delete><fileset dir="${basedir}" includes="**/Question.workflow"/></delete>
    <delete><fileset dir="${basedir}" includes="**/Reply.workflow"/></delete>
    <delete><fileset dir="${basedir}" includes="**/ExternalEventMapping.workflow"/></delete> 
    <delete><fileset dir="${basedir}" includes="**/*.connectedApp"/></delete>
    <delete><fileset dir="${basedir}" includes="**/*.dataSource"/></delete>
    <delete><fileset dir="${basedir}" includes="**/*.network"/></delete>
    <delete><fileset dir="${basedir}" includes="**/API_Only.permissionset"/></delete>
    <delete><fileset dir="${basedir}" includes="**/CEC_Delegated_Administrators.permissionset"/></delete>
    <delete><fileset dir="${basedir}" includes="**/CEC_Automated_User.permissionset"/></delete>
    <delete><fileset dir="${basedir}" includes="**/***HELP***.homePageComponent"/></delete>
    <delete><fileset dir="${basedir}" includes="src/package.xml"/></delete>
    <!--<antcall target="generatePackage"/>-->
  </target>
</project>