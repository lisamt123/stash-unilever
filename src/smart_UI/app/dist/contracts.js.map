{"version":3,"file":"contracts.js","sources":["webpack:///contracts/contracts.js","webpack:///contracts/BOPromotion.js","webpack:///contracts/LOFund.js","webpack:///contracts/LOFilteredFunds.js","webpack:///contracts/LOExtPrdFilters.js","webpack:///contracts/LOAccount.js","webpack:///contracts/LOFilteredProducts.js","webpack:///contracts/LOExtProduct.js","webpack:///contracts/LOExtProductFilter.js","webpack:///contracts/LOExtChartValues.js","webpack:///contracts/LOFilterValue.js","webpack:///contracts/LOPromotion_Template.js","webpack:///contracts/LOTactic.js","webpack:///contracts/LOTactic_Template.js","webpack:///contracts/LOTacticProductFilter.js","webpack:///contracts/LOExtPromotionGrid.js","webpack:///contracts/DSExtPrdFilters.js","webpack:///contracts/DSFund.js","webpack:///contracts/DSFilteredFunds.js","webpack:///contracts/DSAccount.js","webpack:///contracts/DSFilteredProducts.js","webpack:///contracts/DSExtProduct.js","webpack:///contracts/DSExtProductFilter.js","webpack:///contracts/DSExtChartValues.js","webpack:///contracts/DSExtPromotionGrid.js","webpack:///contracts/DSPromotion.js","webpack:///contracts/DSPromotion_Template.js","webpack:///contracts/DSTactic.js","webpack:///contracts/DSTactic_Template.js","webpack:///baseClasses/Promotion.js","webpack:///baseClasses/Tactic.js","webpack:///contracts/DSTacticProductFilter.js","webpack:///baseClasses/ExtProduct.js","webpack:///contracts/BOCalendarPromotion.js","webpack:///contracts/DSCalendarPromotion.js","webpack:///contracts/Localization.js","webpack:///baseClasses/ExtPromotionCalendar.js","webpack:///contracts/DSExtPromotionCalendar.js","webpack:///contracts/LOCalendarView.js","webpack:///contracts/DSCalendarView.js","webpack:///contracts/DSCalPromotions.js","webpack:///contracts/LOCalPromotions.js","webpack:///contracts/DSExtCalLegend.js","webpack:///contracts/LOExtCalLegend.js","webpack:///contracts/DSExtFiscalYear.js","webpack:///contracts/LOExtFiscalYear.js","webpack:///contracts/BOExtPromotionCalendar.js","webpack:///contracts/LOAccountSet.js","webpack:///contracts/DSAccountSet.js","webpack:///contracts/LOExtHoverContent.js","webpack:///contracts/DSExtHoverContent.js","webpack:///contracts/DSMetaData.js","webpack:///contracts/DSCustomLabels.js","webpack:///contracts/DSLocale.js","webpack:///contracts_cust/contracts_cust.js","webpack:///contracts_cust/Localization_cust.js","webpack:///contracts_cust/BOPromotion_cust.js","webpack:///contracts_cust/DSCustomLabels_cust.js","webpack:///contracts_cust/DSExtChildAccounts.js","webpack:///contracts_cust/DSPromotion_cust.js","webpack:///contracts_cust/DSTactic_cust.js","webpack:///contracts_cust/DSExtPromotionAttachment.js","webpack:///contracts_cust/LOExtPromotionAttachment.js","webpack:///contracts_cust/DSExtPromotionAttachment_cust.js","webpack:///contracts_cust/DSMetaData_cust.js","webpack:///contracts_cust/LOExtChildAccounts.js","webpack:///contracts_cust/LOExtTacticTiers.js","webpack:///contracts_cust/DSExtTacticTiers.js","webpack:///contracts_cust/LOFilteredFunds_cust.js","webpack:///contracts_cust/DSFilteredFunds_cust.js","webpack:///contracts_cust/LOFund_cust.js","webpack:///contracts_cust/DSFund_cust.js","webpack:///contracts_cust/BOExtPromotionCalendar_cust.js","webpack:///baseClasses/ExtPromotionCalendar_Cust.js","webpack:///baseClasses/Promotion_Cust.js"],"sourcesContent":["\"use strict\";\r\n\r\nglobal.bopromotion = require('./BOPromotion');\r\nglobal.lofund = require('./LOFund');\r\nglobal.lofilteredfunds = require('./LOFilteredFunds');\r\nglobal.loextprdfilters = require('./LOExtPrdFilters');\r\nglobal.loaccount = require('./LOAccount');\r\nglobal.lofilteredproducts = require('./LOFilteredProducts');\r\nglobal.loextproduct = require('./LOExtProduct');\r\nglobal.loextproductfilter = require('./LOExtProductFilter');\r\nglobal.loextchartvalues = require('./LOExtChartValues');\r\nglobal.lofiltervalue = require('./LOFilterValue');\r\nglobal.lopromotion_template = require('./LOPromotion_Template');\r\nglobal.lotactic = require('./LOTactic');\r\nglobal.lotactic_template = require('./LOTactic_Template');\r\nglobal.lotacticproductfilter = require('./LOTacticProductFilter');\r\nglobal.loextpromotiongrid = require('./LOExtPromotionGrid');\r\n\r\nglobal.dsextprdfilters = require('./DSExtPrdFilters');\r\nglobal.dsfund = require('./DSFund');\r\nglobal.dsfilteredfunds = require('./DSFilteredFunds');\r\nglobal.dsaccount = require('./DSAccount');\r\nglobal.dsfilteredproducts = require('./DSFilteredProducts');\r\nglobal.dsextproduct = require('./DSExtProduct');\r\nglobal.dsextproductfilter = require('./DSExtProductFilter');\r\nglobal.dsextchartvalues = require('./DSExtChartValues');\r\nglobal.dsextpromotiongrid = require('./DSExtPromotionGrid');\r\n\r\nglobal.dspromotion = require('./DSPromotion');\r\nglobal.dspromotion_template = require('./DSPromotion_Template');\r\nglobal.dstactic = require('./DSTactic');\r\nglobal.dstactic_template = require('./DSTactic_Template');\r\nglobal.promotion = require('../baseClasses/Promotion');\r\nglobal.tactic = require('../baseClasses/Tactic');\r\nglobal.dstacticproductfilter = require('./DSTacticProductFilter');\r\nglobal.extproduct = require('../baseClasses/ExtProduct');\r\n\r\n/**********************/\r\nglobal.bocalendarpromotion = require('./BOCalendarPromotion');\r\nglobal.dscalendarpromotion = require('./DSCalendarPromotion');\r\nglobal.Localization = require('./Localization');\r\n\r\nglobal.extpromotioncalendar = require('../baseClasses/ExtPromotionCalendar');\r\nglobal.dsextpromotioncalendar = require('./DSExtPromotionCalendar');\r\nglobal.localendarview = require('./LOCalendarView');\r\nglobal.dscalendarview = require('./DSCalendarView');\r\nglobal.dscalpromotions = require('./DSCalPromotions');\r\nglobal.localpromotions = require('./LOCalPromotions');\r\nglobal.dsextcallegend = require('./DSExtCalLegend');\r\nglobal.loextcallegend = require('./LOExtCalLegend');\r\nglobal.dsextfiscalyear = require('./DSExtFiscalYear');\r\nglobal.loextfiscalyear = require('./LOExtFiscalYear');\r\nglobal.boextpromotioncalendar = require('./BOExtPromotionCalendar');\r\nglobal.loaccountset = require('./LOAccountSet');\r\nglobal.dsaccountset = require('./DSAccountSet');\r\nglobal.loexthovercontent = require('./LOExtHoverContent');\r\nglobal.dsexthovercontent = require('./DSExtHoverContent');\r\n\r\nglobal.dsmetadata = require('./DSMetaData');\r\nglobal.dscustomlabels = require('./DSCustomLabels');\r\nglobal.dslocale = require('./DSLocale');\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/contracts.js","var BO_Promotion = {\r\n    'Type': 'BusinessObject',\r\n    'Name': 'BOPromotion',\r\n    'SFObject': 'Promotion__c',\r\n    'DataSource': 'DSPromotion',\r\n    'BaseClass': 'Promotion',\r\n    'IdAttribute': 'Id',\r\n    'Properties': [], // Properties are not explitely defined in release 3\r\n    'ListObjects': [\r\n        {'Name': 'LOTactic'},\r\n        {'Name': 'LOExtProduct'},\r\n        {'Name': 'LOFilteredProducts'},\r\n        {'Name': 'LOTactic_Template'},\r\n        {'Name': 'LOExtProductFilter'},\r\n        {'Name': 'LOPromotion_Template'},\r\n        { 'Name': 'LOAccount' },\r\n        {'Name': 'LOAccountSet'},\r\n        {'Name': 'LOExtChartValues'},\r\n        {'Name': 'LOFund'},\r\n        {'Name': 'LOFilteredFunds'},\r\n        {'Name': 'LOExtPrdFilters'},\r\n        {'Name': 'LOTacticProductFilter'},\r\n        {'Name': 'LOExtPromotionGrid'}\r\n    ],\r\n    'Methods': [\r\n        {'Name': 'onInstantiate'},\r\n        {'Name': 'afterInstantiate'},\r\n        {'Name': 'getDurationInWeeks'},\r\n        {'Name': 'save'},\r\n{ 'Name': 'onUIError' },\r\n        {'Name': 'onDispatcher'},\r\n        {'Name': 'serializeTree'},\r\n        {'Name': 'serializeProductFilters'},\r\n        {'Name': 'serializeSelectedTactic'},\r\n        {'Name': 'getProductsForTacticID'},\r\n        {'Name': 'applyProductFilter'},\r\n        {'Name': 'addProductsFilter'},\r\n        {'Name': 'searchForProducts'},\r\n       { 'Name': 'addTactic', 'Customize': ['beforeAPEX', 'afterAPEX','post'] },\r\n\r\n        {'Name': 'deleteTactic'},\r\n        {'Name': 'duplicateTactic'},\r\n        {'Name': 'resetAllFilters'},\r\n        {'Name': 'setFilter'},\r\n        {'Name': 'getProductGroupsForTacticID'},\r\n        {'Name': 'getFundsForTacticID'},\r\n        {'Name': 'addFunds'},\r\n        {'Name': 'deleteFunds'},\r\n        {'Name': 'getMergedProductFilters'},\r\n        {'Name': 'serializePromotion'},\r\n        {'Name': 'getMergedProductFilterForTactic'},\r\n        {'Name': 'toggleTacticProductFilter'},\r\n        {'Name': 'updateTacticProductFilter'},\r\n        {'Name': 'preLoad'},\r\n        {'Name': 'postLoad'},\r\n        {'Name': 'refreshPromotion'},\r\n        {'Name': 'saveAndRefresh'},\r\n        {'Name': 'loadGrid'},\r\n\t\t{ 'Name': 'serializeToAPEX' },\r\n        { 'Name': 'serializeToUI' },\r\n        {'Name': 'serializeSelectedTacticToUI'}\r\n    ]\r\n};\r\n\r\nmodule.exports = BO_Promotion;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/BOPromotion.js","var LOFund = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOFund',\r\n    'SFObject': 'Fund__c',\r\n    'DataSource': 'DSFund',\r\n    'Properties': [] // Properties are not explitly defined in release 3    \r\n};\r\n\r\nmodule.exports = LOFund;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/LOFund.js","var LOFilteredFunds = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOFilteredFunds',\r\n    'SFObject': 'Fund__c',\r\n    'DataSource': 'DSFilteredFunds',\r\n    'Properties': [] // Properties are not explitly defined in release 3    \r\n};\r\n\r\nmodule.exports = LOFilteredFunds;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/LOFilteredFunds.js","var LOExtPrdFilters = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOExtPrdFilters',\r\n    'SFObject': null,\r\n    'DataSource': 'DSExtPrdFilters',\r\n    'Properties': [] // Properties are not explitly defined in release 3    \r\n};\r\n\r\nmodule.exports = LOExtPrdFilters;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/LOExtPrdFilters.js","var LOAccount = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOAccount',\r\n    'SFObject': 'Account',\r\n    'DataSource': 'DSAccount',\r\n    'Properties': [] // Properties are not explitly defined in release 3   \r\n};\r\n\r\nmodule.exports = LOAccount;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/LOAccount.js","var LOFilteredProducts = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOFilteredProducts',\r\n    'SFObject': 'Product__c',\r\n    'DataSource': 'DSFilteredProducts',\r\n    'Properties': [] // Properties are not explitly defined in release 3\r\n};\r\n\r\nmodule.exports = LOFilteredProducts;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/LOFilteredProducts.js","var LOExtProduct = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOExtProduct',\r\n    'SFObject': 'Product__c',\r\n    'DataSource': 'DSExtProduct',\r\n    'BaseClass': 'ExtProduct',\r\n    'Properties': [], // Properties are not explitly defined in release 3\r\n    'Methods': [\r\n        {'Name': 'getLabel'},\r\n        {'Name': 'onLoad'},\r\n        {'Name': 'addLabels'}\r\n    ]\r\n};\r\n\r\nmodule.exports = LOExtProduct;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/LOExtProduct.js","var LOExtProductFilter = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOExtProductFilter',\r\n    'SFObject': null,\r\n    'DataSource': 'DSExtProductFilter',\r\n    'Properties': [] // Properties are not explitly defined in release 3    \r\n};\r\n\r\nmodule.exports = LOExtProductFilter;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/LOExtProductFilter.js","var LOExtChartValues = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOExtChartValues',\r\n    'SFObject': null,\r\n    'DataSource': 'DSExtChartValues',\r\n    'Properties': [] // Properties are not explitly defined in release 3\r\n};\r\n\r\nmodule.exports = LOExtChartValues;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/LOExtChartValues.js","var LOFilterValue = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOFilterValue',\r\n    'SFObject': null,\r\n    'DataSource': 'DSFilterValue',\r\n    'BaseClass': 'FilterValue.js',\r\n    'Properties': [], // Properties are not explitly defined in release 3\r\n    'Methods': []\r\n};\r\n\r\nmodule.exports = LOFilterValue;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/LOFilterValue.js","var LOPromotion_Template = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOPromotion_Template',\r\n    'SFObject': 'Promotion_Template__c',\r\n    'DataSource': 'DSPromotion_Template',\r\n    'Properties': [] // Properties are not explitly defined in release 3\r\n};\r\n\r\nmodule.exports = LOPromotion_Template;\n\n\n// WEBPACK FOOTER //\n// contracts/LOPromotion_Template.js","var LOTactic = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOTactic',\r\n    'SFObject': 'Tactic__c',\r\n    'DataSource': 'DSTactic',\r\n    'BaseClass': 'Tactic',\r\n    'Properties': [], // Properties are not explitly defined in release 3\r\n    'Methods': [\r\n        {'Name': 'getProducts'},\r\n        {'Name': 'getProductGroups'},\r\n        {'Name': 'onLoad'}\r\n    ]\r\n};\r\n\r\nmodule.exports = LOTactic;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/LOTactic.js","var LOTactic_Template = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOTactic_Template',\r\n    'SFObject': 'Promotion_Template_Tactic_Template__c',\r\n    'DataSource': 'DSTactic_Template',\r\n    'Properties': [] // Properties are not explitly defined in release 3\r\n};\r\n\r\nmodule.exports = LOTactic_Template;\n\n\n// WEBPACK FOOTER //\n// contracts/LOTactic_Template.js","var LOTacticProductFilter = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOTacticProductFilter',\r\n    'SFObject': null,\r\n    'DataSource': 'DSTacticProductFilter',\r\n    'Properties': [] // Properties are not explitly defined in release 3    \r\n};\r\n\r\nmodule.exports = LOTacticProductFilter;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/LOTacticProductFilter.js","var LOExtPromotionGrid = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOExtPromotionGrid',\r\n    'SFObject': null,\r\n    'DataSource': 'DSExtPromotionGrid',\r\n    'Properties': [] // Properties are not explitly defined in release 3    \r\n};\r\n\r\nmodule.exports = LOExtPromotionGrid;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/LOExtPromotionGrid.js","var DSExtPrdFilters = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSExtPrdFilters',\r\n    'IsExternal': true,\r\n    'SFObject': null,\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'write', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSExtPrdFilters;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSExtPrdFilters.js","var DSFund = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSFund',\r\n    'IsExternal': false,\r\n    'SFObject': 'Fund__c',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'write', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false},\r\n        {'Type': 'getEARights', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSFund;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSFund.js","var DSFilteredFunds = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSFilteredFunds',\r\n    'IsExternal': true,\r\n    'SFObject': 'Fund__c',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'write', 'Available': false},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false},\r\n        {'Type': 'getEARights', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSFilteredFunds;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSFilteredFunds.js","var DSAccount = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSAccount',\r\n    'IsExternal': false,\r\n    'IsManaged': true,\r\n    'SFObject': 'Account',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'AccountRemoteActionExtension', 'Buffer': false},\r\n        {'Type': 'write', 'Available': false},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false},\r\n        {'Type': 'getEARights', 'Available': false},\r\n        {'Type': 'copy', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSAccount;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSAccount.js","var DSFilteredProducts = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSFilteredProducts',\r\n    'IsExternal': false,\r\n    'SFObject': 'Product__c',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'write', 'Available': false},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSFilteredProducts;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSFilteredProducts.js","var DSExtProduct = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSExtProduct',\r\n    'IsExternal': true,\r\n    'SFObject': null,\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'write', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSExtProduct;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSExtProduct.js","var DSExtProductFilter = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSExtProductFilter',\r\n    'IsExternal': true,\r\n    'SFObject': null,\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'write', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSExtProductFilter;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSExtProductFilter.js","var DSExtChartValues = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSExtChartValues',\r\n    'IsExternal': true,\r\n    'SFObject': null,\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'write', 'Available': false},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSExtChartValues;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSExtChartValues.js","var DSExtPromotionGrid = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSExtPromotionGrid',\r\n    'IsExternal': true,\r\n    'SFObject': null,\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {\r\n            'Type': 'getMeta',\r\n            'Extension': 'PromotionPlanningController'\r\n        },\r\n        {\r\n            'Type': 'getData',\r\n            'Extension': 'PromotionPlanningController',\r\n            'Managed': true,\r\n            'Compressed': true,\r\n            'Buffer': false\r\n        }\r\n    ]\r\n};\r\n\r\nmodule.exports = DSExtPromotionGrid;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSExtPromotionGrid.js","var DSPromotion = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSPromotion',\r\n    'IsExternal': false,\r\n    'SFObject': 'Promotion__c',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Available': true, 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'write', 'Available': true, 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false},\r\n        {'Type': 'getEARights', 'Available': false, 'Extension': 'PromotionRemoteActionExtension'}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSPromotion;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSPromotion.js","var DSPromotion_Template = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSPromotion_Template',\r\n    'IsExternal': false,\r\n    'SFObject': 'Promotion_Template__c',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'PromotionTemplateRemoteActionExtension'},\r\n        {'Type': 'write', 'Available': false},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSPromotion_Template;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSPromotion_Template.js","var DSTactic = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSTactic',\r\n    'IsExternal': false,\r\n    'SFObject': 'Tactic__c',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'write', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'create', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'delete', 'Available': false},\r\n        {'Type': 'getEARights', 'Available': false, 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'copy', 'Extension': 'PromotionRemoteActionExtension'}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSTactic;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSTactic.js","var DSTactic_Template = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSTactic_Template',\r\n    'IsExternal': false,\r\n    'SFObject': 'Promotion_Template_Tactic_Template__c',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'TacticTemplateRemoteActionExtension'},\r\n        {'Type': 'write', 'Available': false},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSTactic_Template;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSTactic_Template.js","var Promotion = {\r\n    /**\r\n     * The onInstantiate function is call once when the BO is ready for user\r\n     * \r\n     * @param data - Empty in most circumstances\r\n     * @returns {Promise[]} Array of promises created by asynchronous load of data\r\n     */\r\n    // Core functionality - DO NOT CHANGE THE CONTENT OF THIS FUNCTION DURING CUSTOMIZING!\r\n    onInstantiate: function (data) {\r\n        var me = this;\r\n        var instantiatePromises = []; // when.defer();\r\n        this.fluxHandler=UI_EVENT_BUS.subscribe(EVENTS.FLUX, this.onDispatcher.bind(this));\r\n        UI_EVENT_BUS.subscribe(EVENTS.UI_ERROR, this.onUIError.bind(this));\r\n        this.Id = promotionId; \r\n\r\n        instantiatePromises = this.preLoad();     \r\n        this.isEditable = false;\r\n        this.editMode = false;\r\n\r\n        return instantiatePromises;\r\n    },\r\n/**\r\n     * Load all data which must be available before the UI is rendered. \r\n     * The promises as returned by this function are handled in a synchronous way. Only once all of them are resolved the system continues.\r\n     * @returns {Promise[]} Array of promises created by asynchronous load of data\r\n     */\r\n    preLoad: function () {\r\n        var me = this;\r\n        var instantiatePromises = []; \r\n\r\n        this.loadPhase = 'preload';\r\n        instantiatePromises.push(this.load(promotionId, false));\r\n        instantiatePromises.push(this.LOTactic.load(null));\r\n        instantiatePromises.push(this.LOTactic_Template.load());\r\n        instantiatePromises.push(this.LOPromotion_Template.load());\r\n        instantiatePromises.push(this.LOAccount.load());\r\n        //instantiatePromises.push(this.LOAccountSet.load());\r\n        instantiatePromises.push( this.LOTacticProductFilter.load());\r\n\r\n        // Reset the availability of the Chart controls after each load\r\n        this.isKPIInvalid = false;\r\n\r\n        return Utils.callCustomFunction(this, 'preLoad', null, instantiatePromises);\r\n    },\r\n /**\r\n     * Load all data which must be available before the UI is rendered. \r\n     * The promises as returned by this function are handled in a synchronous way. Only once all of them are resolved the system continues.\r\n     * @returns {Promise[]} Array of promises created by asynchronous load of data\r\n     */\r\n    postLoad: function () {\r\n       var me = this;\r\n\r\n        // Build JSON object of promotion content needed as parameter for APEX calls\r\n        var promoObject = this.serializePromotion();\r\n\r\n        // Remove all deleted tactics from the serialized LOTactic as they are not needed for these calls\r\n        var tacticIdMap = this.LOTactic._hidden.idMapping;\r\n        _.remove(promoObject.LOTactic, item => item.__ObjectStatus & STATE.DELETED);\r\n\r\n        var template = _.find(this.LOPromotion_Template.getAllItems(), {Id: this.Promotion_Template__c});\r\n        var chartPromise = (template && template.Calculation_Mode__c === 'Writeback') ? this.LOExtChartValues.load(null, promoObject) : true;\r\n\r\n        // Callback executed once all tasks are done\r\n        var onceDone = () => {\r\n            this.loadPhase = 'postload';\r\n            this.changeHandler();\r\n            Utils.callCustomFunction(this, 'postLoad', null);\r\n        };\r\n\r\n        when.all([\r\n\r\n            chartPromise,\r\n\r\n          \r\n            this.LOFund.load(null, promoObject),\r\n\r\n            when.all([\r\n\r\n                this.LOExtPrdFilters.load(function (data) {\r\n                    me.LOExtProductFilter.addItems(me.getMergedProductFilters(me.LOTacticProductFilter, data));\r\n                })\r\n\r\n            ]).then(() =>\r\n                this.LOExtProduct.apex_read(JSON.stringify(this.serializePromotion()))\r\n            ).then(prods => {\r\n\r\n                this.LOExtProduct.removeAllItems();\r\n\r\n                if (prods.data) {\r\n                    //temporary handling of 15 digit tactic id from product resolution\r\n                    _.each(prods.data, function (p) {\r\n                        if (p.Tactics != undefined) {\r\n                            _.each(p.Tactics, function (t) {\r\n                                t.tacticId = tacticIdMap[t.tacticId];\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    me.LOExtProduct.addItems(prods.data);\r\n                    me.LOExtProduct.onLoad();\r\n                }\r\n\r\n            })\r\n\r\n        ]).then(onceDone, onceDone);\r\n\r\n        // Define event handler \r\n        // TODO: This should be obsolete and be done through the event bus\r\n        this.setChangeHandler(function () {\r\n            UI_EVENT_BUS.put(EVENTS.UI_BINDING, {\r\n                promotion: this.serializeTree(),\r\n                productFilters: this.serializeProductFilters(),\r\n                selectedTactic: this.serializeSelectedTactic()\r\n            });\r\n        });      \r\n\r\n        setTimeout(() => this.changeHandler(), 0);\r\n    },\r\n\r\n   /**\r\n     * Anchor for the postLoad function\r\n     * Content is moved to postLoad since it may be called several times which would not match the purpose of this function\r\n     */\r\n\r\n    afterInstantiate: function () {\r\n        this.postLoad();\r\n    },\r\n\r\n    /**\r\n     * Serialize the content of the promotion to be sent as parameter to an APEX method\r\n     */\r\n    serializeToAPEX: function () {\r\n        return this.serializePromotion();\r\n    },\r\n\r\n    /**\r\n     * Serialize the content of the promotion to be sent as state to the React UI\r\n     */\r\n    serializeToUI: function () {\r\n        return this.serializeTree();\r\n    },\r\n    /**\r\n     * Serialize the content of the selected tactic to be sent as state to the React UI\r\n     */\r\n    serializeSelectedTacticToUI: function () {\r\n        return this.serializeSelectedTactic();\r\n    },\r\n    updateTacticProductFilter: function (tacticID, extProductFilter) {\r\n        var productfilter = {};\r\n\r\n        var productFilter = this.LOTacticProductFilter.getAllItems().filter(item => item.tacticId == tacticID);\r\n        if (productFilter.length > 0) {\r\n                   productfilter = productFilter[0].productfilter;\r\n                }\r\n\r\n        var criteria = {};\r\n        productfilter.criteria = criteria;\r\n        _.each(extProductFilter, function (filter) {\r\n            if (filter.selected) {\r\n                if (criteria[filter.filterId] === undefined) criteria[filter.filterId] = [];\r\n                criteria[filter.filterId].push(filter.filterValueId);\r\n            }\r\n        });\r\n\r\n        _.find(this.LOTacticProductFilter.getAllItems(), {tacticId: tacticID}).productfilter = productfilter;\r\n        _.find(this.LOTactic.getItems(), {Id: tacticID}).objectStatus |= STATE.DIRTY;\r\n        return productfilter;\r\n    },\r\n\r\n    getDurationInWeeks: function () {\r\n        var duration = Utils.Converters.Date2TS(this.Date_Thru__c) - Utils.Converters.Date2TS(this.Date_From__c);\r\n        var weekDuration = 7 * 24 * 60 * 60000;\r\n        return Math.floor(duration / weekDuration) + ' weeks';\r\n    },\r\n  /**\r\n     * Internal implementation of the serialization to APEX. Is called and customized through serializeToAPEX\r\n     * @returns {JSON} Serialized version for the BO as required by the APEX layer\r\n     */\r\n\r\n    \r\n    serializePromotion: function () {\r\n        var me = this;\r\n        var saveObject = this.serialize();\r\n        saveObject.Slogan_Language_1__c = saveObject.Slogan__c;\r\n        saveObject.LOTactic = this.LOTactic.serialize();\r\n        if (saveObject.LOTactic)\r\n            saveObject.LOTactic.forEach(tactic => {\r\n                var productFilter = me.LOTacticProductFilter.getAllItems().filter(item => item.tacticId == tactic.Id);\r\n                if (productFilter.length > 0) {\r\n\r\n                    tactic.productfilter = productFilter[0].productfilter;\r\n                    if (productFilter[0].productfilter != undefined && productFilter[0].productfilter.manualproducts != undefined)\r\n                        tactic.productfilter.manualproducts = productFilter[0].productfilter.manualproducts;\r\n                }\r\n                //added to handle the case when filter is undefined return empty filter.\r\n                if (tactic.productfilter === undefined) {\r\n                    tactic.productfilter = {};\r\n                    tactic.productfilter.criteria = {};\r\n                    tactic.productfilter.manualproducts = null;\r\n                }\r\n                tactic.Pct_of_Stores__c = parseFloat(tactic.Pct_of_Stores__c);\r\n                tactic.Amount__c = parseFloat(tactic.Amount__c);\r\n                tactic.Lift__c = parseFloat(tactic.Lift__c);\r\n               // tactic.__ObjectStatus = me.LOTactic.getAllItems().find(item => item.Id == tactic.Id).getObjectStatus();\r\n                tactic.__ObjectStatus = _.find(me.LOTactic.getAllItems(), {Id: tactic.Id}).getObjectStatus();\r\n            });\r\n saveObject.LOExtPromotionAttachment = SerializationHelper.serializeWithStatus(this.LOExtPromotionAttachment);\r\n        // We do not get a state for the tactic relation of a fund. This is because of the LO structure (tactic\r\n        // is array in LI). The APEX controller needs to take care of that.\r\n        saveObject.LOFund = this.LOFund.serialize() || {};\r\n        if (saveObject.LOFund)\r\n            saveObject.LOFund.forEach(fund=> {\r\n                var tactics;\r\n                me.LOFund.getAllItems().forEach(function (f) {\r\n                    if (f.Id === fund.Id)\r\n                        tactics = f.Tactics;\r\n\r\n                });\r\n                if (tactics != undefined) {\r\n                    fund.tactics = tactics;\r\n                }\r\n                if (fund.tactics === undefined) {\r\n                    fund.tactics = [];\r\n                }\r\n            });\r\n  return {\"BOPromotion\": Utils.callCustomFunction(this, 'serializeToAPEX', null, saveObject)};\r\n    },\r\n/**\r\n     * getMergedProductFilters\r\n     * @param {model} loTactic - Representation of the tactic LO\r\n     * @param {JSON} extPrdFilters - Product filters\r\n     */\r\n    getMergedProductFilters: function (loTactic, extPrdFilters) {\r\n        var extProductFilters = [];\r\n        var me = this;\r\n        if (loTactic) {\r\n            var dictIncludedTactics = {};\r\n            _.each(loTactic.getAllItems(), function (tactic) {\r\n                extProductFilters = me.getMergedProductFilterForTactic(tactic, extPrdFilters, extProductFilters);\r\n                dictIncludedTactics[tactic.tacticId] = \"\";\r\n\r\n            });\r\n\r\n            //below code won't be necessary if all tactics get atleast null productfilter defined.\r\n            _.each(this.LOTactic.getAllItems(), function (tactic) {\r\n                if (dictIncludedTactics[tactic.Id] == undefined)\r\n                    extProductFilters = me.getMergedProductFilterForTactic(tactic, extPrdFilters, extProductFilters);\r\n            });\r\n        }\r\n        return extProductFilters;\r\n    },\r\n\r\n    getMergedProductFilterForTactic: function (tactic, extPrdFilters, currentFilters) {\r\n        var map = {};\r\n        if (tactic.productfilter) {\r\n            var criteria = tactic.productfilter.criteria;\r\n            for (var key in criteria) {\r\n                map[key] = {};\r\n                _.each(criteria[key], function (selected) {\r\n                    map[key][selected] = \"True\"\r\n                });\r\n            }\r\n        }\r\n        _.each(extPrdFilters.getAllItems(), function (f) {\r\n            var extPrdFilter = _.clone(f);\r\n            extPrdFilter[\"tacticId\"] = (tactic.Id != undefined) ? tactic.Id : tactic.tacticId;\r\n            if (map[extPrdFilter.filterId] && map[extPrdFilter.filterId][extPrdFilter.filterValueId])\r\n                extPrdFilter[\"selected\"] = true;\r\n            else\r\n                extPrdFilter[\"selected\"] = false;\r\n            currentFilters.push(extPrdFilter);\r\n        });\r\n        return currentFilters;\r\n    },\r\n/**\r\n     * Saves the BO to the SF backend. Does not leave the edit mode!\r\n     */\r\n    save: function () {\r\n        console.log('PERFORMED ACTION SAVE PROMOTION');\r\n        var saveObject = this.serializePromotion();\r\n        this.apex_write(this.getIdValue(), JSON.stringify(saveObject)).then(saveResult => {\r\n            // TODO: Use correct event bus here! This is just dummy code\r\n            if (saveResult.__Status) {\r\n                // Send event to UI that save has succeeded and appropriate action can be done\r\n                console.log('Save of data succeeded!');\r\n                UI_EVENT_BUS.put(EVENTS.BO_SAVE_SUCCEEDED);\r\n            } else {\r\n                // Error during saving. Edit mode should not be closed and user needs to be informed!\r\n                console.log('Save of data failed!', saveResult.ExceptionType, saveResult.ExceptionMessage, saveResult.ExceptionWhere);\r\n                UI_EVENT_BUS.put(EVENTS.BO_SAVE_FAILED, saveResult);\r\n            }\r\n        });\r\n    },\r\n     /**\r\n     * Save the promotion to SF calling writeBOPromotion. The BO will then be reloaded and the UI newly rendered with the loaded content.\r\n     * The edit mode is NOT left by this function\r\n     */\r\n  saveAndRefresh: function () {\r\n        console.log('PERFORMED ACTION SAVE PROMOTION');\r\n        var saveObject = this.serializePromotion();\r\n        var promoId = this.getId();\r\n        saveObject.target=\"Salesforce\";\r\n        this.apex_write(this.getIdValue(), JSON.stringify(saveObject)).then(saveResult => {\r\n            // TODO: Use correct event bus here! This is just dummy code\r\n            if (saveResult.__Status) {\r\n                // Send event to UI that save has succeeded and appropriate action can be done\r\n                console.log('Save of data succeeded!');\r\n                //trigger save to heroku\r\n                saveObject.target=\"WebService\";\r\n                this.apex_write(this.getIdValue(), JSON.stringify(saveObject));\r\n                this.refreshPromotion();\r\n\r\n                UI_EVENT_BUS.put(EVENTS.BO_SAVE_SUCCEEDED);\r\n            } else {\r\n                // Error during saving. Edit mode should not be closed and user needs to be informed!\r\n                console.log('Save of data failed!', saveResult.ExceptionType, saveResult.ExceptionMessage, saveResult.ExceptionWhere);\r\n               // this.refreshPromotion(); //refresh anyway\r\n               //don't refresh promotion stay in edit mode'\r\n                UI_EVENT_BUS.put(EVENTS.UI_BINDING, {enableToolbar: true, editMode: true});\r\n                UI_EVENT_BUS.put(EVENTS.BO_SAVE_FAILED, saveResult);\r\n            }\r\n        });\r\n    },\r\n   /**\r\n     * Returns all products for a given tactic \r\n     */\r\n    getProductsForTacticID: function (tacticID, relation) {\r\n        return _.filter(this.LOExtProduct.getAllItems(), function (product) {\r\n            if (relation != null) {\r\n                return _.find(product.Tactics, {tacticId: tacticID, relationship: relation})\r\n            } else\r\n                return _.find(product.Tactics, {tacticId: tacticID})\r\n        });\r\n    },\r\n\r\n    addTactic: function (tacticTemplate) {\r\n        this.logger.info('PERFORMED ADD TACTIC WITH TACTIC TEMPLATE ' + tacticTemplate);\r\n\r\n        var saveObject = {'BOPromotion': this.serialize(), 'Tactic_Template_Id__c': tacticTemplate.Id};\r\n         saveObject = Utils.callCustomFunction(this, 'addTactic', 'beforeAPEX', saveObject);\r\n\r\n        var me = this;\r\n        this.LOTactic.apex_create(JSON.stringify(saveObject)).then(createResult => {\r\n            if (createResult.__Status) {\r\n                 createResult.data = Utils.callCustomFunction(this, 'addTactic', 'afterAPEX', createResult.data);\r\n                createResult.data.objectStatus = STATE.NEW;\r\n                me.LOTactic.addItem(createResult.data);\r\n                //addtactic to LOTacticProductFilter\r\n                var tacticFilter = {\r\n                    tacticId: createResult.data.Id,\r\n                    productfilter: {criteria: {}, manualproducts: null}\r\n                };\r\n                me.LOTacticProductFilter.addItem(tacticFilter);\r\n                me.LOTactic.onLoad(); //added for tacticId handling\r\n                // this.LOTacticProductFilter.addItem({tacticId:createResult.data.Id, productfilter={}});\r\n                var loExtProductFilters = [];\r\n                //load filters again\r\n                loExtProductFilters = this.getMergedProductFilterForTactic(createResult.data, this.LOExtPrdFilters, loExtProductFilters);\r\n\r\n                this.LOExtProductFilter.addItems(loExtProductFilters);\r\n\r\n                this.setFilter(tacticFilter.tacticId);\r\n                var tacticItem = this.serializeSelectedTactic();\r\n                UI_EVENT_BUS.put(EVENTS.UI_BINDING, {selectedItem: tacticItem});\r\n                UI_EVENT_BUS.put(EVENTS.UI_BINDING, {selectedNode: tacticItem});\r\n                 Utils.callCustomFunction(this, 'addTactic', 'post', saveObject);\r\n                this.changeHandler();\r\n\r\n            } else {\r\n                // Error during tactic creation. The user needs to be informed!\r\n                console.log('Create of a new tactic failed!', saveResult.ExceptionType, saveResult.ExceptionMessage, saveResult.ExceptionWhere);\r\n                UI_EVENT_BUS.put(EVENTS.BO_TACTIC_CREATE_FAILED, saveResult);\r\n            }\r\n        });\r\n    },\r\n /**\r\n     * Logically deletes a selected tactic from LOTactic. The actual deletion only happens when the BO is saved\r\n     * @param {string} tacticID - Id of the tactic to be deleted\r\n     */\r\n    deleteTactic: function (tacticID) {\r\n        console.log(\"PERFORMED ACTION DELETE TACTIC FOR TACTIC ID:\" + tacticID);\r\n        // Current tactic is selected. GetItems() only returns one record!\r\n        this.LOTactic.getItems()[0].setObjectStatus(STATE.DELETED);\r\n\r\n        this.resetAllFilters();\r\n        this.changeHandler();\r\n    },\r\n\r\n    duplicateTactic: function (tacticID) {\r\n        var promoObject = this.serializePromotion();\r\n        var me = this;\r\n        promoObject.Tactic__c = tacticID;\r\n        this.LOTactic.apex_copy(JSON.stringify(promoObject)).then(copyResult => {\r\n            if (copyResult.__Status) {\r\n                copyResult.data.objectStatus = STATE.NEW;\r\n\r\n                //addtactic to LOTacticProductFilter\r\n                var tacticFilter = {\r\n                    tacticId: copyResult.data.Id,\r\n                    productfilter: _.clone(this.LOTacticProductFilter.getItems()[0].productfilter)\r\n\r\n                };\r\n                 copyResult.data.productfilter = tacticFilter.productfilter;\r\n                 this.LOTactic.addItem(copyResult.data);\r\n                this.LOTacticProductFilter.addItem(tacticFilter);\r\n\r\n                this.LOTactic.onLoad(); //added for tacticId handling\r\n                // this.LOTacticProductFilter.addItem({tacticId:createResult.data.Id, productfilter={}});\r\n                var loExtProductFilters = [];\r\n                //load filters again\r\n                loExtProductFilters = this.getMergedProductFilterForTactic(copyResult.data, this.LOExtPrdFilters, loExtProductFilters);\r\n\r\n                this.LOExtProductFilter.addItems(loExtProductFilters);\r\n\r\n                this.setFilter(tacticFilter.tacticId);\r\n                var tacticItem = this.serializeSelectedTactic();\r\n                UI_EVENT_BUS.put(EVENTS.UI_BINDING, {selectedItem: tacticItem});\r\n                UI_EVENT_BUS.put(EVENTS.UI_BINDING, {selectedNode: tacticItem});\r\n                this.changeHandler();\r\n\r\n                console.log('PERFORMED ACTION DUPLICATE TACTIC FOR TACTIC ID:', tacticID);\r\n            }\r\n                 else {\r\n                console.log('Duplicate tactic', tacticID, 'failed. APEX RemoteAction returned no data.');\r\n            }\r\n        });\r\n    },\r\n  /**\r\n     * Helper function to reset the LO filters possibly set by user actions\r\n     */\r\n    resetAllFilters: function () {\r\n        this.LOTactic.resetAllFilters();\r\n        this.LOExtProductFilter.resetAllFilters();\r\n        this.LOExtProduct.resetAllFilters();\r\n        this.LOFund.resetAllFilters();\r\n        this.LOTacticProductFilter.resetAllFilters();\r\n    },\r\n /**\r\n     * Helper function called when the user selects a tactic in the drilldown control.\r\n     * The system sets filters on all relevant LOs to ensure that the right data is displayed\r\n     *  @param {string} id - Id of the tactic to be filtered on\r\n     */\r\n    setFilter: function (id) {\r\n        this.LOTactic.setFilter('Id', id, 'EQ');\r\n        this.LOExtProductFilter.setFilter('tacticId', id, 'EQ');\r\n        this.LOExtProduct.setFilter('Tactics', '{\"Field\": \"tacticId\", \"Value\":\"' + id + '\"}', 'CONTAINS');\r\n        this.LOFund.setFilter('Tactics', '{\"Field\": \"tacticId\", \"Value\":\"' + id + '\"}', 'CONTAINS');\r\n        this.LOTacticProductFilter.setFilter('tacticId', id, 'EQ');\r\n    },\r\n  /**\r\n     * Helper function called when the user applies a product filter in the manage products dialog.\r\n     * The system makes a callout to SF to get the corresponding list of products from the backend\r\n     * @param {string} tacticID - Id of the active tactic\r\n     * @param {string} productFilter - Product filter selected by the user\r\n     */\r\n    applyProductFilter: function (tacticID, productFilter) {\r\n        this.updateTacticProductFilter(tacticID, productFilter);\r\n        var promoObject = this.serializePromotion();\r\n        _.remove(promoObject.LOTactic, item => item.__ObjectStatus & STATE.DELETED);\r\n        var tacticIdMap = this.LOTactic._hidden.idMapping;\r\n        this.LOExtProduct.apex_read(JSON.stringify(promoObject)).then(prods => {\r\n            this.LOExtProduct.removeAllItems();\r\n            if (prods.data) {\r\n                _.each(prods.data, function (p) {\r\n                    if (p.Tactics != undefined) {\r\n                        _.each(p.Tactics, function (t) {\r\n                            t.tacticId = tacticIdMap[t.tacticId];\r\n                        });\r\n                    }\r\n                });\r\n                this.LOExtProduct.addItems(prods.data);\r\n                this.LOExtProduct.onLoad();\r\n                UI_EVENT_BUS.put(EVENTS.UI_BINDING, {productFilters: this.serializeProductFilters()});\r\n                console.log('PERFORMED ACTION APPLY FILTER TACTIC FOR TACTIC ID:', tacticID);\r\n\r\n            }\r\n        });\r\n    },\r\n\r\n    toggleTacticProductFilter: function (filterID, filterValueID, tactic, selected) {\r\n        console.log(\"PERFORMED ACTION Toggle FILTER TACTIC FOR TACTIC ID:\" + tactic.Id);\r\n        _.find(this.LOExtProductFilter.getItems(), {\r\n            tacticId: tactic.Id,\r\n            filterId: filterID,\r\n            filterValueId: filterValueID\r\n        }).selected = selected;\r\n    },\r\n  /**\r\n     * Refreshes the content of the bo WITHOUT saving any possibly changed content\r\n     * @param {any} context - Decision on which context the UI recides on\r\n     */\r\n    refreshPromotion: function (context) {\r\n        var refreshGrid = false;\r\n        if (context && context===\"tree\") refreshGrid = true;\r\n         var me = this;\r\n                this._hidden.lists.forEach(id=> {\r\n                    me[id].removeAllItems();\r\n                });\r\n                var promises = this.preLoad();\r\n                when.all(promises).then(function (dataArray) {\r\n                    if (me.onLoad) me.onLoad(); // Internal callback\r\n                    me.postLoad();     //post laod\r\n                    me.loadGrid(JSON.parse(me.getManual_Calculation_Input__c()));\r\n                    //reset all filters and get back to promotion\r\n                    me.resetAllFilters();\r\n                    //enable toolbar.\r\n                    UI_EVENT_BUS.put(EVENTS.UI_BINDING, {enableToolbar: true});\r\n                });\r\n    },\r\n\r\n    addProductsFilter: function (tacticID, products) {\r\n        console.log('ADD_PRODUCTS');\r\n\r\n        //Let's update the tactic productFilter\r\n        if (tacticID == this.LOTacticProductFilter.getItems()[0].tacticId) {\r\n            //Let's update the tactic productFilter\r\n              _.find(this.LOTactic.getItems(), {Id: tacticID}).objectStatus |= STATE.DIRTY;\r\n            var productfilter = this.LOTacticProductFilter.getItems()[0].productfilter;\r\n            if (!productfilter.manualproducts) productfilter.manualproducts = [];\r\n            products.map((prod)=> {\r\n                var manualProd = _.find(productfilter.manualproducts, {productid: prod.Id});\r\n                if (manualProd) {\r\n                    manualProd.included = true;\r\n                } else {\r\n                    productfilter.manualproducts.push({productid: prod.Id, included: true});\r\n                }\r\n            });\r\n        }\r\n\r\n        //Now let's update the LOExtProduct\r\n        products.map((prod)=> {\r\n            var existingProduct = this.LOExtProduct.getItemById(prod.Id);\r\n            if (existingProduct) {\r\n                //Update relationship\r\n                var tacticRelation = _.find(existingProduct.Tactics, {tacticId: tacticID})\r\n                if (tacticRelation) {\r\n                    tacticRelation.relationship = 'INCLUDED';\r\n                } else {\r\n                    existingProduct.Tactics.push({\r\n                        tacticId: tacticID,\r\n                        relationship: 'INCLUDED'\r\n                    });\r\n                }\r\n            } else {\r\n                //Add new LOExtProduct\r\n                var prodData = {\r\n                    Category: prod.Category__c,\r\n                    Container_Size_Unit: prod.Container_Size_Unit__c,\r\n                    Container_Size: prod.Container_Size__c,\r\n                    Container_Type: prod.Container_Type__c,\r\n                    Criterion_3_Product_Code: prod.Criterion_3_Product_Code__c,\r\n                    Criterion_3_Product_Description: prod.Criterion_3_Product_Description__c,\r\n                    Description_1: prod.Description_1__c,\r\n                    Id: prod.Id,\r\n                    Name: prod.Name,\r\n                    Pack_Size_Unit: prod.Pack_Size_Unit__c,\r\n                    Pack_Size: prod.Pack_Size__c,\r\n                    Short_Description: prod.Short_Description__c,\r\n                    ProductGroupId: 'TO BE DONE',\r\n                    ProductGroupDescription: 'TO BE DONE',\r\n                    Tactics: [\r\n                        {\r\n                            tacticId: tacticID,\r\n                            relationship: 'INCLUDED'\r\n                        }\r\n                    ]\r\n                };\r\n                this.LOExtProduct.addItems([prodData]);\r\n            }\r\n        });\r\n        this.changeHandler();\r\n    },\r\n\r\n    searchForProducts: function (productSample) {\r\n        console.log('searchForProducts'); //TODO Call APEX Controller\r\n\r\n        if (productSample === null)\r\n            productSample = {};\r\n        var promoContent = this.serializePromotion();\r\n        promoContent.filterExpressions = productSample;\r\n\r\n        this.LOFilteredProducts.apex_read(JSON.stringify(promoContent)).then(productList => {\r\n            UI_EVENT_BUS.put(EVENTS.UI_BINDING, {productSearch: productList.data});\r\n            this.LOFilteredProducts.removeAllItems();\r\n            this.LOFilteredProducts.addItems(productList.data);\r\n        });\r\n    },\r\n /**\r\n     * Add a fund to the LO. The system checks if there is already a relation to this fund.\r\n     * If yes, then it will be added, otherwise it is updated\r\n     * @param {Array} funds - List of fund to be added\r\n     * @param {string} tacticId - Id of the tactic to which the funds should be added\r\n     */\r\n    addFunds: function (funds, tacticId) {\r\n        funds.map((fund) => {\r\n            var existingFund = this.LOFund.getItemById(fund.Id);\r\n            if (existingFund) {\r\n                if (existingFund.objectStatus === STATE.DELETED) {\r\n                    existingFund.objectStatus = STATE.PERSISTED;\r\n                    existingFund.Tactics = [{\r\n                        'tacticId': tacticId\r\n                    }];\r\n                }\r\n                else {\r\n                    existingFund.Tactics.push({'tacticId': tacticId});\r\n                }\r\n                this.LOFund.applyFilters();\r\n            }\r\n            else {\r\n                fund.Tactics = [{\r\n                    'tacticId': tacticId\r\n                }];\r\n                this.LOFund.addItem(fund);\r\n            }\r\n        });\r\n    },\r\n\r\n    deleteFunds: function (fundsId, tacticId) {\r\n        fundsId.forEach((fundId) => {\r\n            var loFund = _.filter(this.LOFund.getItems(), fund => fund.Id === fundId)[0]; //  this.LOFund.getItemById(fundId);\r\n            _.remove(loFund.Tactics, {'tacticId': tacticId});\r\n            if (loFund.Tactics.length > 0) {\r\n                this.LOFund.applyFilters();\r\n            } else {\r\n                loFund.setObjectStatus(STATE.DELETED);\r\n            }\r\n        });\r\n    },\r\n\r\n    getProductGroupsForTacticID: function (tacticID) {\r\n        var productsForTactic = this.getProductsForTacticID(tacticID);\r\n        return _.uniqBy(productsForTactic, 'ProductGroupDescription');\r\n    },\r\n\r\n\r\n     serializeTree: function () {\r\n        var me = this;\r\n        var promotionJSON = {\r\n            _meta: this.getSfMeta(),\r\n           _acl: this.getACL(),\r\n            type: 'PROMOTION',\r\n            desc: AppManager.getLabel('PP_TIT_PROMO_SUMMARY') || 'Promotion Summary',//TODO:TRANSLATE\r\n            Date_From__c: new Date(this.Date_From__c),\r\n            Date_Thru__c: new Date(this.Date_Thru__c),\r\n            Placement_Date_From__c: new Date(this.Placement_Date_From__c),\r\n            Placement_Date_Thru__c: new Date(this.Placement_Date_Thru__c),\r\n            Order_Date_From__c: new Date(this.Order_Date_From__c),\r\n            Order_Date_Thru__c: new Date(this.Order_Date_Thru__c),\r\n            Delivery_Date_From__c: new Date(this.Delivery_Date_From__c),\r\n            Delivery_Date_Thru__c: new Date(this.Delivery_Date_Thru__c),\r\n            Commit_Date__c: new Date(this.Commit_Date__c),\r\n            duration: this.getDurationInWeeks(),\r\n            Active__c: this.Active__c,\r\n            tacticTemplates: this.LOTactic_Template.getAllItems(),\r\n            Id: this.Id,\r\n            Phase__c: this.Phase__c,\r\n            Slogan__c: this.Slogan__c,\r\n            Manual_Calculation_Input__c: JSON.parse(this.Manual_Calculation_Input__c),\r\n            AggregatedKPIs: {\r\n                roi_actual: 0,\r\n                roi_planned: 0,\r\n                costs_actual: 0,\r\n                costs_planned: 0\r\n            },\r\n            isKPIInvalid: this.isKPIInvalid,//How to map it??\r\n            children: []\r\n        };\r\n        //Editable function\r\n        promotionJSON.isEditable = this.getACL().isEditable(0, \"Promotion__c\");\r\n        //promotionJSON.isEditable = this.isEditable;\r\n        //Adding the promotion Template\r\n        var template = _.find(this.LOPromotion_Template.getAllItems(), {Id: this.Promotion_Template__c});\r\n        promotionJSON.Promotion_Template__c = (template) ? template.Description__c : '';\r\n        //Adding the promotion Account\r\n        var account = _.find(this.LOAccount.getAllItems(), {Id: this.Anchor_Account__c});\r\n        promotionJSON.Anchor_Account__c = (account) ? account.Name : '';\r\n        var accountSet = _.find(this.LOAccountSet.getAllItems(), { Id: this.Anchor_Account_Set__c });\r\n        promotionJSON.Anchor_Account_Set__c = (accountSet) ? accountSet.Description__c : '';\r\n        //Adding the KPIs\r\n        _.filter(this.LOExtChartValues.getAllItems(), {'id': promotionJSON.Id, 'level': 'measures'}).map((KPI)=> {\r\n            promotionJSON.AggregatedKPIs[KPI.kpiId] = KPI.value;\r\n        });\r\n        this.LOTactic.getAllItems().map((tactic)=> {\r\n            if (tactic.getObjectStatus() !== STATE.DELETED) {\r\n                var tacticJSON = {\r\n                    _meta: tactic.getSfMeta(),\r\n                    type: 'TACTIC',\r\n                    Amount__c: tactic.getAmount__c(),\r\n                    Date_From__c: tactic.getDate_From__c(),\r\n                    Date_Thru__c: tactic.getDate_Thru__c(),\r\n                    Shipment_Date_From__c: tactic.getShipment_Date_From__c(),\r\n                    Shipment_Date_Thru__c: tactic.getShipment_Date_Thru__c(),\r\n                    Compensation_Model__c: tactic.getCompensation_Model__c(),\r\n                    Tactic_Template__r: '',\r\n                    Id: tactic.getId(),\r\n                    Lift__c: tactic.getLift__c(),\r\n                    Name: tactic.getName(),\r\n                    Pct_of_Stores__c: tactic.getPct_of_Stores__c(),\r\n                    Payment_Method__c: tactic.getPayment_Method__c(),\r\n                    children: []\r\n                };\r\n                var ttemplate = _.find(this.LOTactic_Template.getAllItems(), {Id: tactic.Tactic_Template__c});\r\n                tacticJSON.Tactic_Template = (ttemplate) ? ttemplate.Description__c : '';\r\n\r\n                var products = me.getProductsForTacticID(tactic.Id, 'MATCH').concat(me.getProductsForTacticID(tactic.Id, 'INCLUDED'));\r\n\r\n                var productGroups = _.uniqBy(products, 'ProductGroupDescription');\r\n                productGroups.map((pg)=> {\r\n                    var productGroup = {\r\n                        Name: pg.ProductGroupDescription,\r\n                        Id: pg.ProductGroupId,\r\n                        type: 'CATEGORY',\r\n                        children: []\r\n                    };\r\n                    var productsPerPG = _.filter(products, {ProductGroupDescription: pg.ProductGroupDescription});\r\n                    productsPerPG.map((prod)=> {\r\n                        var product = {\r\n                            Id: prod.Id,\r\n                            Name: prod.Description_1,\r\n                            type: 'PRODUCT'\r\n                        };\r\n                        productGroup.children.push(product);\r\n                    });\r\n                    tacticJSON.children.push(productGroup);\r\n                });\r\n                promotionJSON.children.push(tacticJSON);\r\n            }\r\n        });\r\n        return Utils.callCustomFunction(this, 'serializeToUI', null, promotionJSON);\r\n    },\r\n\r\n    serializeSelectedTactic: function () {\r\n        if (this.LOTactic._filters.length > 0 && this.LOTactic.getItems().length > 0) {\r\n            var tactic = this.LOTactic.getItems()[0];\r\n            var tacticJSON = {\r\n                _meta: tactic.getSfMeta(),\r\n                type: 'TACTIC',\r\n                Amount__c: tactic.getAmount__c(),\r\n                Date_From__c: tactic.getDate_From__c(),\r\n                Date_Thru__c: tactic.getDate_Thru__c(),\r\n                Shipment_Date_From__c: tactic.getShipment_Date_From__c(),\r\n                Shipment_Date_Thru__c: tactic.getShipment_Date_Thru__c(),\r\n                Instore_Date_From__c: tactic.getInstore_Date_From__c(),\r\n                Instore_Date_Thru__c: tactic.getInstore_Date_Thru__c(),\r\n                Compensation_Model__c: tactic.getCompensation_Model__c(),\r\n                Payment_Method__c: tactic.getPayment_Method__c(),\r\n                Tactic_Template__r: '',\r\n                Id: tactic.getId(),\r\n                Lift__c: tactic.getLift__c(),\r\n                Name: tactic.getName(),\r\n                Pct_of_Stores__c: tactic.getPct_of_Stores__c(),\r\n                AggregatedKPIs: {\r\n                    roi_actual: 0,\r\n                    roi_planned: 0,\r\n                    costs_actual: 0,\r\n                    costs_planned: 0\r\n                },\r\n                //isKPIInvalid: promotionJSON.isKPIInvalid,//How to map it??\r\n                children: []\r\n            };\r\n            var ttemplate = _.find(this.LOTactic_Template.getAllItems(), {Id: tactic.Tactic_Template__c});\r\n            tacticJSON.Tactic_Template__c = (ttemplate) ? ttemplate.Description__c : '';\r\n\r\n            tacticJSON.funds = this.LOFund.getItems();\r\n            tacticJSON.availableFunds = _.differenceBy(this.LOFilteredFunds.getAllItems(), this.LOFund.getItems(), 'Id');\r\n            tacticJSON._acl = this.LOTactic.getACL();\r\n            //Adding the KPIs\r\n            _.filter(this.LOExtChartValues.getAllItems(), {'id': tacticJSON.Id, 'level': 'Tactic'}).map((KPI)=> {\r\n                tacticJSON.AggregatedKPIs[KPI.kpiId] = KPI.value;\r\n            });\r\n            return  Utils.callCustomFunction(this, 'serializeSelectedTacticToUI', null, tacticJSON);\r\n        } else {\r\n            return null;\r\n        }\r\n    },\r\nloadGrid: function(Manual_Calculation_Input){\r\nvar me = this;\r\n me.LOExtPromotionGrid.apex_getMeta(JSON.stringify( this.serializePromotion())).then(metaData => {\r\n\r\n                    if (metaData.data) {\r\n                        APEXAbstraction.readCustomLabels(metaData.data.measures.reduce((result, v) => { \r\n                            \r\n                            if (v.display && v.display.enabled) { \r\n                                var prefix = '';\r\n                             //   if (ACSFNamespace) prefix = ACSFNamespace+'.';\r\n                               // if (v.customized) prefix = '';\r\n                                    \r\n                                result.push(prefix+v.name);\r\n                                 \r\n                            } \r\n                                return result; \r\n                        }, [])).then(function(readCustomLabelsResult) {\r\n                            if (readCustomLabelsResult.__Status && readCustomLabelsResult.data) {\r\n                                var kpiLabels = readCustomLabelsResult.data;\r\n                                me.LOExtProduct.addLabels(kpiLabels);\r\n                            }\r\n\r\n                        });\r\n                    }\r\n\r\n                    var errorHappened = false;\r\n                    try {\r\n                        if(metaData.__Status){\r\n                            metaData = metaData.data;\r\n                            me.LOExtPromotionGrid.apex_getData(JSON.stringify( me.serializePromotion())).then(data => {\r\n                                if (data.__Status){\r\n                                    data=data.data;\r\n                                    /**CAUTION: We are sending a functional object instead of only data. In a multithread environment this won't work*/\r\n                                    var tree = Tree.instantiate((\"string\" == typeof data)? JSON.parse(data):data, metaData, metaData.variables, Manual_Calculation_Input);\r\n                                    UI_EVENT_BUS.put(EVENTS.UI_BINDING, {tree: tree , idToLabelMapping: this.LOExtProduct._hidden.idToLabelMapping});\r\n                                }\r\n                                \r\n                            });\r\n                        } else {\r\n                            errorHappened = true;\r\n                            LogManager.getLogger('PromotionPlanning').error('Status of the metaData JSON is false');\r\n                    }\r\n\r\n                    } catch (e) {\r\n                        errorHappened = true;\r\n                        LogManager.getLogger('PromotionPlanning').error(e.message);\r\n                    }\r\n                    if(errorHappened) {\r\n                        UI_EVENT_BUS.put(EVENTS.UI_ERROR, {title: 'Error loading grid',\r\n                            message:'Error occurred, please contact the administrator.',\r\n                            type:'E'});\r\n                        \r\n                    }\r\n                });\r\n        \r\n\r\n\r\n},\r\n    serializeProductFilters: function () {\r\n        //Hardcoded for the moment\r\n        var tacticID = null\r\n        if (this.LOTactic._filters.length > 0 && this.LOTactic.getItems().length > 0) {\r\n            tacticID = this.LOTactic.getItems()[0].Id;\r\n        } else {\r\n            return null;\r\n        }\r\n        var productFilters = [];\r\n        this.LOExtProductFilter.getItems().map((prodFilter)=> {\r\n            productFilters.push({\r\n                filterId: prodFilter.filterId,\r\n                filterLabel: prodFilter.filterLabel,\r\n                filterValueId: prodFilter.filterValueId,\r\n                filterValueLabel: prodFilter.filterValueLabel,\r\n                selected: prodFilter.selected,\r\n                tacticId: prodFilter.tacticId\r\n            })\r\n        });\r\n\r\n        var products = this.LOExtProduct.getItems();\r\n        products.map((pd)=> {\r\n            pd.relationship = _.find(pd.Tactics, {tacticId: tacticID}).relationship\r\n        });\r\n        products = _.orderBy(products, 'relationship', 'desc');\r\n        return {\r\n            productMetadata: this.LOFilteredProducts.itemType.prototype.getSfMeta(),\r\n            filters: productFilters,\r\n            products: products\r\n        };\r\n    },\r\nonUIError: function (message) {\r\n        this.modalMessages.push(message);\r\n        AppManager.init().then(() => UI_EVENT_BUS.put(EVENTS.UI_BINDING, {modalMessages: this.modalMessages}));\r\n    },\r\n    onDispatcher: function (payload) {\r\n        var action = payload;\r\n        var me=this;\r\n        switch (action.actionType) {\r\n            case PromotionActionConstants.PROMOTION_LOAD:\r\n                this.load(this.Id);\r\n                break;\r\n            case PromotionActionConstants.PROMOTION_LOAD_GRID:\r\n                this.loadGrid(action.payload.Manual_Calculation_Input);\r\n                break;\r\n            case  PromotionActionConstants.PROMOTION_SAVE:\r\n                this.editMode = false;\r\n                this.saveAndRefresh();\r\n                break;\r\n\r\n            case  PromotionActionConstants.PROMOTION_SAVE_AND_REFRESH :\r\n                this.saveAndRefresh();\r\n                break;\r\n            case PromotionActionConstants.PROMOTION_EDIT:\r\n                this.editMode = true;\r\n                break;          \r\n            case  PromotionActionConstants.PROMOTION_CANCEL:\r\n                this.editMode = false;\r\n                this.refreshPromotion(payload.Context);\r\n                break;\r\n\r\n            case  PromotionActionConstants.PROMOTION_SET_FIELD:\r\n                if (action.payload.Id == this.Id) {\r\n                    var setter = this['set' + action.payload.fieldName];\r\n                    if (setter) {\r\n                        setter.call(this, action.payload.fieldValue);\r\n                        if (this.editMode) this.isKPIInvalid = true;\r\n                        this.changeHandler();\r\n                    } else {\r\n                        Log.error('No setter for field ' + action.payload.fieldName)\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case PromotionActionConstants.TACTIC_SELECTED:\r\n                if (action.payload == null) {\r\n                    //PROMOTION SELECTED. Clear all filters\r\n                    this.resetAllFilters();\r\n                }\r\n                else {\r\n                    //TACTIC SELECTED. Filter related collections\r\n                    this.setFilter(action.payload.Id);\r\n                }\r\n                this.changeHandler();\r\n                break;\r\n\r\n            case  PromotionActionConstants.TACTIC_SET_FIELD:\r\n                if (action.payload.Id == this.LOTactic.getItems()[0].Id) {\r\n                    var tactic = this.LOTactic.getItems()[0];\r\n                    var setter = tactic['set' + action.payload.fieldName];\r\n                    if (setter) {\r\n                        setter.call(tactic, action.payload.fieldValue);\r\n                        this.changeHandler();\r\n                    } else {\r\n                        Log.error('No setter for tactic field ' + action.payload.fieldName)\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case  PromotionActionConstants.TACTIC_ADD:\r\n                this.addTactic(action.payload);\r\n                break;\r\n\r\n            case  PromotionActionConstants.TACTIC_DUPLICATE :\r\n                this.duplicateTactic(action.payload);\r\n                break;\r\n\r\n            case  PromotionActionConstants.TACTIC_DELETE :\r\n                this.deleteTactic(action.payload);\r\n                break;\r\n\r\n            case  PromotionActionConstants.APPLY_PRODUCT_FILTER :\r\n                this.applyProductFilter(action.payload.tacticId, action.payload.productFilter);\r\n                 \r\n                break;\r\n\r\n            case  PromotionActionConstants.SEARCH_FOR_PRODUCTS :\r\n                this.searchForProducts(action.payload);\r\n                break;\r\n\r\n            case  PromotionActionConstants.CLEAR_SEARCH_FOR_PRODUCTS:\r\n                this.LOFilteredProducts.removeAllItems();\r\n                UI_EVENT_BUS.put(EVENTS.UI_BINDING, {productSearch: []});\r\n                break;\r\n\r\n            case  PromotionActionConstants.ADD_PRODUCTS :\r\n                this.addProductsFilter(action.payload.tacticId, action.payload.products);\r\n                break;\r\n\r\n            case  PromotionActionConstants.SEARCH_FOR_FUNDS :\r\n                if (this.LOFilteredFunds.getCount() == 0) { //Just load funds once\r\n                    //this.LOFilteredFunds.load(this.serializePromotion());\r\n                    this.LOFilteredFunds.apex_read(JSON.stringify(this.serializePromotion())).then(fundList => {\r\n                        // UI_EVENT_BUS.put(EVENTS.UI_BINDING, {productSearch: productList.data});\r\n                        this.LOFilteredFunds.removeAllItems();\r\n                        this.LOFilteredFunds.addItems(fundList.data);\r\n                         UI_EVENT_BUS.put(EVENTS.UI_BINDING, {selectedTactic: this.serializeSelectedTactic()});\r\n                    });\r\n                }\r\n                 UI_EVENT_BUS.put(EVENTS.UI_BINDING, {selectedTactic: this.serializeSelectedTactic()});\r\n               \r\n                break;\r\n\r\n            case  PromotionActionConstants.ADD_FUNDS :\r\n                this.addFunds(action.payload.funds, action.payload.tacticId);\r\n                this.changeHandler();\r\n                break;\r\n\r\n            case  PromotionActionConstants.DELETE_FUNDS :\r\n                this.deleteFunds(action.payload.fundsId, action.payload.tacticId);\r\n                this.changeHandler();\r\n                break;\r\n\r\n            case  PromotionActionConstants.TOGGLE_TACTIC_PRODUCT_FILTER :\r\n                this.toggleTacticProductFilter(action.payload.filterId, action.payload.filterValueId, action.payload.tactic, action.payload.selected);\r\n                UI_EVENT_BUS.put(EVENTS.UI_BINDING, {productFilters: this.serializeProductFilters()});\r\n                break;\r\n\r\n            case  PromotionActionConstants.CHANGE_TACTIC_PRODUCT_RELATIONSHIP :\r\n                if (action.payload.tacticId == this.LOTacticProductFilter.getItems()[0].tacticId) {\r\n                    //Let's update the tactic productFilter\r\n                    _.find(this.LOTactic.getItems(), {Id: action.payload.tacticId}).objectStatus |= STATE.DIRTY;\r\n                    var productfilter = this.LOTacticProductFilter.getItems()[0].productfilter;\r\n                    if (!productfilter['manualproducts'])\r\n                        productfilter.manualproducts = [];\r\n                    if (action.payload.relationship == 'MATCH') {\r\n                        productfilter.manualproducts.push({productid: action.payload.productId, included: false});\r\n                    } else if (action.payload.relationship == 'EXCLUDED' || action.payload.relationship == 'INCLUDED') {\r\n                        //Remove from collection\r\n                        _.remove(productfilter.manualproducts, {productid: action.payload.productId});\r\n                    }\r\n\r\n                    //Now let's update the LOExtProduct\r\n                    var product = _.find(this.LOExtProduct.getItems(), {Id: action.payload.productId});\r\n                    var tactic_relationship = _.find(product.Tactics, {tacticId: action.payload.tacticId});\r\n                    if (action.payload.relationship == 'MATCH') {\r\n                        tactic_relationship.relationship = 'EXCLUDED'\r\n                    } else if (action.payload.relationship == 'EXCLUDED') {\r\n                        tactic_relationship.relationship = 'MATCH'\r\n                    } else if (action.payload.relationship == 'INCLUDED') {\r\n                        tactic_relationship.relationship = 'DELETED'\r\n                    }\r\n                }\r\n                console.log('CHANGE_TACTIC_PRODUCT_RELATIONSHIP');\r\n                UI_EVENT_BUS.put(EVENTS.UI_BINDING, {\r\n                    promotion: this.serializeTree(),\r\n                    selectedTactic: this.serializeSelectedTactic(),\r\n                    productFilters: this.serializeProductFilters()\r\n                });\r\n                break;\r\n             default: \r\n                Utils.callCustomFunction(this, 'onDispatcher', null, action);\r\n                break;\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = Promotion;\r\n\n\n\n// WEBPACK FOOTER //\n// baseClasses/Promotion.js","var Tactic = {\r\n    getProducts: function () {},\r\n\r\n    getProductGroups: function () {},\r\n\r\n    onLoad: function () {\r\n        var tacticmap = {};\r\n\r\n        _.each(this.getAllItems(), function (item) {\r\n            tacticmap[item.Id] = item.Id;\r\n            tacticmap[item.Id.substring(0, 15)] = item.Id;\r\n        });\r\n\r\n        this._hidden.idMapping = tacticmap;\r\n    }\r\n};\r\n\r\nmodule.exports = Tactic;\r\n\n\n\n// WEBPACK FOOTER //\n// baseClasses/Tactic.js","var DSTacticProductFilter = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSTacticProductFilter',\r\n    'IsExternal': true,\r\n    'SFObject': null,\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'write', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSTacticProductFilter;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSTacticProductFilter.js","var ExtProduct = {\r\n    addLabels: function (gridLabels) {\r\n        _.merge(this._hidden.idToLabelMapping, gridLabels);\r\n    },\r\n\r\n    getLabel: function (labelId) {\r\n        return this._hidden.idToLabelMapping[labelId];\r\n    },\r\n\r\n    onLoad: function () {\r\n        var labels = {\r\n            /* \"BaselineVolume\":\"Baseline\",\r\n             \"PhasedBaseVolume\":\"Phased Base Volume\",\r\n             \"incrVolume\":\"Incremental Volume\",\r\n             \"incrVolumeOverride\":\"Incremental Volume  Override\",\r\n             \"incrVolumeEffective\":\"Incremental Volume  Effective\",\r\n             \"TotalVolume\":\"Total Plan Volume\",\r\n             \"TacticBaseline\":\"Tactic Baseline needed for Lift Calculation\",\r\n             \"TotalTacticCosts\":\"Total Cost\",\r\n             \"GSV\":\"GSV\",\r\n             \"Start or end week\":\"Start or end week\",\r\n             \"Tax\":\"Tax\",\r\n             \"Revenue\":\"Revenue\",\r\n             \"IncRevenue\":\"Incremental Revenue\",\r\n             \"ROI\":\"ROI\",\r\n             \"ActualizedVSPlannedCost\":\"Actualized VS Planned Costs\",\r\n             \"ShipmentCY\":\"Actual ShipmentsCurrent Year\",\r\n             \"FixedActualizedCost\":\"Fixed Actualized Cost\",\r\n             \"AcutalizedCost\":\"Actualized Cost\"*/\r\n        };\r\n\r\n        _.each(this.getAllItems(), function (item) {\r\n            if (item.Short_Description != undefined)\r\n                labels[item.Id] = item.Short_Description;\r\n            else\r\n                labels[item.Id] = item.description;\r\n\r\n            if (item.ProductGroupDescription != null && item.ProductGroupDescription.trim().length > 0)\r\n                labels[item.ProductGroupId] = item.ProductGroupDescription;\r\n            else\r\n                labels[item.ProductGroupId] = \"Default\";\r\n        });\r\n\r\n        var me = this;\r\n        _.each(this._parent.LOTactic.getAllItems(), function (item) {\r\n            var tacticTemplate = _.find(me._parent.LOTactic_Template.getAllItems(), {Id: item.Tactic_Template__c});\r\n            var name = (tacticTemplate != undefined) ? tacticTemplate.Name : \"\";\r\n            labels[item.Id] = name;\r\n        });\r\n\r\n        this._hidden.idToLabelMapping = labels;\r\n    }\r\n};\r\n\r\nmodule.exports = ExtProduct;\r\n\n\n\n// WEBPACK FOOTER //\n// baseClasses/ExtProduct.js","module.exports = {\r\n    'Type': 'BusinessObject',\r\n    'Name': 'BOCalendarPromotion',\r\n    'SFObject': null,\r\n    'DataSource': 'DSCalendarPromotion',\r\n    'BaseClass': 'CalendarPromotion',\r\n    'IdAttribute': 'Id',\r\n    'Properties': [], // Properties are not explitely defined in release 3\r\n    'ListObjects': [{'Name': 'LOAccount'}],\r\n    'Methods': [\r\n        {'Name': 'onInstantiate'},\r\n        {'Name': 'afterInstantiate'},\r\n        {'Name': 'onDispatcher'},\r\n        {'Name': 'preLoad'},\r\n        {'Name': 'postLoad'},\r\n        {'Name': 'serializeCalendar'}\r\n    ]\r\n};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/BOCalendarPromotion.js","module.exports = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSCalendarPromotion',\r\n    'IsExternal': true,\r\n    'SFObject': null,\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Available': true},\r\n        {'Type': 'write', 'Available': false},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false},\r\n        {'Type': 'getEARights', 'Available': false}\r\n    ]\r\n};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSCalendarPromotion.js","var Localization = {\r\n    'labels': {\r\n        \"PP_BTN_SEARCH\": \"Search\",\r\n        \"PP_BTN_EDIT\": \"Edit\",\r\n        \"PP_LBL_TACTIC\": \"Tactic\",\r\n        \"PP_BTN_DUPLICATE\": \"Duplicate\",\r\n        \"PP_BTN_DELETE\": \"Delete\",\r\n        \"PP_BTN_SAVE_REFRESH\": \"Save & Refresh\",\r\n        \"PP_BTN_DONE\": \"Done\",\r\n        \"PP_BTN_CANCEL\": \"Cancel\",\r\n        \"PP_BTN_OK\": \"Ok\",\r\n        \"PP_BTN_ADD\": \"Add\",\r\n        \"PP_TIT_PROD_LOOKUP\": \"Product Lookup\",\r\n        //\"PP_LBL_TACTIC_NAME\": \"Tactic Name\",\r\n        //\"PP_LBL_PCT_STORES\": \"% Stores\",\r\n        //\"PP_LBL_LIFT\": \"Lift %\",\r\n        //\"PP_LBL_AMOUNT\": \"Amount\",\r\n        //\"PP_LBL_COST_METHOD\": \"Costing Method\",\r\n        \"PP_LBL_NODATA\": \"No data\",\r\n        \"PP_TIT_KPI\": \"KPIs\",\r\n        \"PP_TIT_MEASURE\": \"Measure\",\r\n        \"PP_LBL_PLANNED\": \"Planned\",\r\n        \"PP_TIT_CHART_VOLUME_VS_BASELINE\": \"Planned Tactic Volume vs. Baseline\",\r\n        \"PP_TIT_CHART_INCREMENTAL_COSTS\": \"Incremental Costs (Tactic)\",\r\n        \"PP_TIT_CHART_INCREMENTAL_SALES\": \"Incremental Sales (Tactic)\",\r\n        \"PP_TIT_CHART_ROI\": \"ROI\",\r\n        \"PP_TIT_CHART_COSTS\": \"COSTS\",\r\n        \"PP_TIT_NOCONTENT\": \"NO CONTENT\",\r\n        \"PP_LBL_MAIN_INFO\": \"Main Information\",\r\n        \"PP_LBL_DATES\": \"Dates\",\r\n        \"PP_LBL_DURATION\": \"Duration\",\r\n        \"PP_LBL_STATUS\": \"Status\",\r\n        \"PP_BTN_APPLY_FILTER\": \"Apply Filter\",\r\n        \"PP_TIT_TACTIC_INFO\": \"Tactic Information\",\r\n        \"PP_BTN_MANAGE_PRODS\": \"Manage Products\",\r\n        \"PP_TIT_PROMO_SUMMARY\": \"Promotion Summary\",\r\n        \"PP_LBL_NO_FUNDS\": \"No Funds associated to this tactic\",\r\n        \"PP_TIT_FUND_LOOKUP\": \"Fund Lookup\",\r\n        //\"PP_LBL_TACTICS\": \"Tactics\", //Missing\r\n        \"PP_LBL_PRODUCT_GROUPS\": \"Product Groups\",\r\n        \"PP_LBL_PRODUCTS\": \"Products\",\r\n        \"PP_LBL_SELECT\": \"Select\",\r\n        \"PP_LBL_INCLUDED\": \"Included\"\r\n        /*,\r\n        \"PP_LBL_MODAL_MSG\": \"Sit nulla est ex deserunt exercitation anim occaecat. Nostrud ullamco deserunt aute id consequat veniam incididunt duis in sint irure nisi.\",\r\n        \"PC_TIT_EDIT_SETTINGS\": \"Edit your Settings\",\r\n        \"PC_BTN_CONTINUE\": \"Continue anyways\",\r\n        \"PC_BTN_SAVE\": \"Save\",\r\n        \"PC_TIT_TRADE_CALENDAR\": \"Trade calendar\",\r\n        \"PC_LBL_INIT_CALENDAR_MSG_1\": \"Hi, your user settings haven\\\"t completed yet. \",\r\n        \"PC_LBL_INIT_CALENDAR_MSG_2\": \" To avoid longer loading times, please fill them in before you continue.\",\r\n        \"PC_LBL_CUSTOMER\": \"Customer\",\r\n        \"PC_LBL_CUSTOMER_NAME\": \"Customer name\",\r\n        \"PC_LBL_ANCHOR_CUSTOMER\": \"Anchor Customer\",\r\n        \"PC_LBL_ANCHOR_CUSTOMER_SET\": \"Anchor Customer Set\",\r\n        \"PC_LBL_PROMOTION_TYPE\": \"Promotion type\",\r\n        \"PC_LBL_PROMOTION_TEMPLATE\": \"Promotion Template\",\r\n        \"PC_LBL_PRODUCT_CATEGORY\": \"Product category\",\r\n        \"PC_LBL_TACTIC_TYPE\": \"Tactic type\",\r\n        \"PC_LBL_NEW\": \"New \",\r\n        \"PC_LBL_LOADING_CONTENT\": \"Loading content...\",\r\n        \"PC_LBL_FROM_THRU\": \"FROM/THRU\",\r\n        \"PC_LBL_STATUS\": \"STATUS\",\r\n        \"PC_LBL_ANCHOR\": \"ANCHOR\",\r\n        \"PC_LBL_TACTICS_FROM_THRU\": \"TACTICS FROM/THRU\",\r\n        \"PC_BTN_OPEN\": \"Open\",\r\n        \"PC_BTN_DERIVE\": \"Derive\",\r\n        \"PC_BTN_DELETE\": \"Delete\",\r\n        \"PC_LBL_JANUARY\": \"January\",\r\n        \"PC_LBL_FEBRUARY\": \"February\",\r\n        \"PC_LBL_MARCH\": \"March\",\r\n        \"PC_LBL_APRIL\": \"April\",\r\n        \"PC_LBL_MAY\": \"May\",\r\n        \"PC_LBL_JUNE\": \"June\",\r\n        \"PC_LBL_JULY\": \"July\",\r\n        \"PC_LBL_AUGUST\": \"August\",\r\n        \"PC_LBL_SEPTEMBER\": \"September\",\r\n        \"PC_LBL_OCTOBER\": \"October\",\r\n        \"PC_LBL_NOVEMBER\": \"November\",\r\n        \"PC_LBL_DECEMBER\": \"December\",\r\n        \"PC_TIT_ACCOUNTS\": \"Accounts\",\r\n        \"PC_TIT_PROMOTIONS\": \"Promotions\",\r\n        \"PC_TIT_PRODUCTS\": \"Products\",\r\n        \"PC_BTN_ADD_FILTER\": \"Add Filter\",\r\n        \"PC_LBL_FIELD\": \"Field\",\r\n        \"PC_LBL_VALUE\": \"Value\",\r\n        \"PC_LBL_VALUES_SELECTED\": \"values selected\",\r\n        \"PC_LBL_FILTERS\": \"Filters\",\r\n        \"PC_LBL_DAYS\": \"Days\",\r\n        \"PC_LBL_WEEKS\": \"Weeks\",\r\n        \"PC_LBL_MONTHS\": \"Months\",\r\n        \"PC_LBL_SLOGAN\": \"Slogan\",\r\n        \"PC_LBL_START\": \"Start\",\r\n        \"PC_LBL_TEMPLATE\": \"Template\",\r\n        \"PC_LBL_SELECT\": \"Select\"*/\r\n    },\r\n    'dateformats': {\r\n        \"ar-SA\": \"DD/MM/yy\",\r\n        \"bg-BG\": \"DD.M.YYYY\",\r\n        \"ca-ES\": \"DD/MM/YYYY\",\r\n        \"zh-TW\": \"YYYY/M/d\",\r\n        \"cs-CZ\": \"DD.M.YYYY\",\r\n        \"da-DK\": \"DD-MM-YYYY\",\r\n        \"de-DE\": \"DD.MM.YYYY\",\r\n        \"el-GR\": \"DD/M/YYYY\",\r\n        \"en-US\": \"MM/DD/YYYY\",\r\n        \"fi-FI\": \"DD.M.YYYY\",\r\n        \"fr-FR\": \"DD/MM/YYYY\",\r\n        \"he-IL\": \"DD/MM/YYYY\",\r\n        \"hu-HU\": \"YYYY. MM. DD.\",\r\n        \"is-IS\": \"DD.M.YYYY\",\r\n        \"it-IT\": \"DD/MM/YYYY\",\r\n        \"ja-JP\": \"YYYY/MM/DD\",\r\n        \"ko-KR\": \"YYYY-MM-DD\",\r\n        \"nl-NL\": \"d-M-YYYY\",\r\n        \"nb-NO\": \"DD.MM.YYYY\",\r\n        \"pl-PL\": \"YYYY-MM-DD\",\r\n        \"pt-BR\": \"DD/M/YYYY\",\r\n        \"ro-RO\": \"DD.MM.YYYY\",\r\n        \"ru-RU\": \"DD.MM.YYYY\",\r\n        \"hr-HR\": \"DD.M.YYYY\",\r\n        \"sk-SK\": \"DD. M. YYYY\",\r\n        \"sq-AL\": \"YYYY-MM-DD\",\r\n        \"sv-SE\": \"YYYY-MM-DD\",\r\n        \"th-TH\": \"DD/M/YYYY\",\r\n        \"tr-TR\": \"DD.MM.YYYY\",\r\n        \"ur-PK\": \"DD/MM/YYYY\",\r\n        \"id-ID\": \"DD/MM/YYYY\",\r\n        \"uk-UA\": \"DD.MM.YYYY\",\r\n        \"be-BY\": \"DD.MM.YYYY\",\r\n        \"sl-SI\": \"DD.M.YYYY\",\r\n        \"et-EE\": \"DD.MM.YYYY\",\r\n        \"lv-LV\": \"YYYY.MM.DD.\",\r\n        \"lt-LT\": \"YYYY.MM.DD\",\r\n        \"fa-IR\": \"MM/DD/YYYY\",\r\n        \"vi-VN\": \"DD/MM/YYYY\",\r\n        \"hy-AM\": \"DD.MM.YYYY\",\r\n        \"az-Latn-AZ\": \"DD.MM.YYYY\",\r\n        \"eu-ES\": \"YYYY/MM/DD\",\r\n        \"mk-MK\": \"DD.MM.YYYY\",\r\n        \"af-ZA\": \"YYYY/MM/DD\",\r\n        \"ka-GE\": \"DD.MM.YYYY\",\r\n        \"fo-FO\": \"DD-MM-YYYY\",\r\n        \"hi-IN\": \"DD-MM-YYYY\",\r\n        \"ms-MY\": \"DD/MM/YYYY\",\r\n        \"kk-KZ\": \"DD.MM.YYYY\",\r\n        \"ky-KG\": \"DD.MM.yy\",\r\n        \"sw-KE\": \"MM/DD/YYYY\",\r\n        \"uz-Latn-UZ\": \"DD/MM YYYY\",\r\n        \"tt-RU\": \"DD.MM.YYYY\",\r\n        \"pa-IN\": \"DD-MM-yy\",\r\n        \"gu-IN\": \"DD-MM-yy\",\r\n        \"ta-IN\": \"DD-MM-YYYY\",\r\n        \"te-IN\": \"DD-MM-yy\",\r\n        \"kn-IN\": \"DD-MM-yy\",\r\n        \"mr-IN\": \"DD-MM-YYYY\",\r\n        \"sa-IN\": \"DD-MM-YYYY\",\r\n        \"mn-MN\": \"yy.MM.DD\",\r\n        \"gl-ES\": \"DD/MM/yy\",\r\n        \"kok-IN\": \"DD-MM-YYYY\",\r\n        \"syr-SY\": \"DD/MM/YYYY\",\r\n        \"dv-MV\": \"DD/MM/yy\",\r\n        \"ar-IQ\": \"DD/MM/YYYY\",\r\n        \"zh-CN\": \"YYYY/M/d\",\r\n        \"de-CH\": \"DD.MM.YYYY\",\r\n        \"en-GB\": \"DD/MM/YYYY\",\r\n        \"es-MX\": \"DD/MM/YYYY\",\r\n        \"fr-BE\": \"DD/MM/YYYY\",\r\n        \"it-CH\": \"DD.MM.YYYY\",\r\n        \"nl-BE\": \"DD/MM/YYYY\",\r\n        \"nn-NO\": \"DD.MM.YYYY\",\r\n        \"pt-PT\": \"DD-MM-YYYY\",\r\n        \"sr-Latn-CS\": \"DD.M.YYYY\",\r\n        \"sv-FI\": \"DD.M.YYYY\",\r\n        \"az-Cyrl-AZ\": \"DD.MM.YYYY\",\r\n        \"ms-BN\": \"DD/MM/YYYY\",\r\n        \"uz-Cyrl-UZ\": \"DD.MM.YYYY\",\r\n        \"ar-EG\": \"DD/MM/YYYY\",\r\n        \"zh-HK\": \"DD/M/YYYY\",\r\n        \"de-AT\": \"DD.MM.YYYY\",\r\n        \"en-AU\": \"DD/MM/YYYY\",\r\n        \"es-ES\": \"DD/MM/YYYY\",\r\n        \"fr-CA\": \"YYYY-MM-DD\",\r\n        \"sr-Cyrl-CS\": \"DD.M.YYYY\",\r\n        \"ar-LY\": \"DD/MM/YYYY\",\r\n        \"zh-SG\": \"DD/M/YYYY\",\r\n        \"de-LU\": \"DD.MM.YYYY\",\r\n        \"en-CA\": \"DD/MM/YYYY\",\r\n        \"es-GT\": \"DD/MM/YYYY\",\r\n        \"fr-CH\": \"DD.MM.YYYY\",\r\n        \"ar-DZ\": \"DD-MM-YYYY\",\r\n        \"zh-MO\": \"DD/M/YYYY\",\r\n        \"de-LI\": \"DD.MM.YYYY\",\r\n        \"en-NZ\": \"DD/MM/YYYY\",\r\n        \"es-CR\": \"DD/MM/YYYY\",\r\n        \"fr-LU\": \"DD/MM/YYYY\",\r\n        \"ar-MA\": \"DD-MM-YYYY\",\r\n        \"en-IE\": \"DD/MM/YYYY\",\r\n        \"es-PA\": \"MM/DD/YYYY\",\r\n        \"fr-MC\": \"DD/MM/YYYY\",\r\n        \"ar-TN\": \"DD-MM-YYYY\",\r\n        \"en-ZA\": \"YYYY/MM/DD\",\r\n        \"es-DO\": \"DD/MM/YYYY\",\r\n        \"ar-OM\": \"DD/MM/YYYY\",\r\n        \"en-JM\": \"DD/MM/YYYY\",\r\n        \"es-VE\": \"DD/MM/YYYY\",\r\n        \"ar-YE\": \"DD/MM/YYYY\",\r\n        \"en-029\": \"MM/DD/YYYY\",\r\n        \"es-CO\": \"DD/MM/YYYY\",\r\n        \"ar-SY\": \"DD/MM/YYYY\",\r\n        \"en-BZ\": \"DD/MM/YYYY\",\r\n        \"es-PE\": \"DD/MM/YYYY\",\r\n        \"ar-JO\": \"DD/MM/YYYY\",\r\n        \"en-TT\": \"DD/MM/YYYY\",\r\n        \"es-AR\": \"DD/MM/YYYY\",\r\n        \"ar-LB\": \"DD/MM/YYYY\",\r\n        \"en-ZW\": \"MM/DD/YYYY\",\r\n        \"es-EC\": \"DD/MM/YYYY\",\r\n        \"ar-KW\": \"DD/MM/YYYY\",\r\n        \"en-PH\": \"MM/DD/YYYY\",\r\n        \"es-CL\": \"DD-MM-YYYY\",\r\n        \"ar-AE\": \"DD/MM/YYYY\",\r\n        \"es-UY\": \"DD/MM/YYYY\",\r\n        \"ar-BH\": \"DD/MM/YYYY\",\r\n        \"es-PY\": \"DD/MM/YYYY\",\r\n        \"ar-QA\": \"DD/MM/YYYY\",\r\n        \"es-BO\": \"DD/MM/YYYY\",\r\n        \"es-SV\": \"DD/MM/YYYY\",\r\n        \"es-HN\": \"DD/MM/YYYY\",\r\n        \"es-NI\": \"DD/MM/YYYY\",\r\n        \"es-PR\": \"DD/MM/YYYY\",\r\n        \"am-ET\": \"DD/M/YYYY\",\r\n        \"tzm-Latn-DZ\": \"DD-MM-YYYY\",\r\n        \"iu-Latn-CA\": \"DD/MM/YYYY\",\r\n        \"sma-NO\": \"DD.MM.YYYY\",\r\n        \"mn-Mong-CN\": \"YYYY/M/d\",\r\n        \"gd-GB\": \"DD/MM/YYYY\",\r\n        \"en-MY\": \"DD/M/YYYY\",\r\n        \"prs-AF\": \"DD/MM/yy\",\r\n        \"bn-BD\": \"DD-MM-yy\",\r\n        \"wo-SN\": \"DD/MM/YYYY\",\r\n        \"rw-RW\": \"MM/DD/YYYY\",\r\n        \"qut-GT\": \"DD/MM/YYYY\",\r\n        \"sah-RU\": \"MM.DD.YYYY\",\r\n        \"gsw-FR\": \"DD/MM/YYYY\",\r\n        \"co-FR\": \"DD/MM/YYYY\",\r\n        \"oc-FR\": \"DD/MM/YYYY\",\r\n        \"mi-NZ\": \"DD/MM/YYYY\",\r\n        \"ga-IE\": \"DD/MM/YYYY\",\r\n        \"se-SE\": \"YYYY-MM-DD\",\r\n        \"br-FR\": \"DD/MM/YYYY\",\r\n        \"smn-FI\": \"DD.M.YYYY\",\r\n        \"moh-CA\": \"MM/DD/YYYY\",\r\n        \"arn-CL\": \"DD-MM-YYYY\",\r\n        \"ii-CN\": \"YYYY/M/d\",\r\n        \"dsb-DE\": \"DD. M. YYYY\",\r\n        \"ig-NG\": \"DD/M/YYYY\",\r\n        \"kl-GL\": \"DD-MM-YYYY\",\r\n        \"lb-LU\": \"DD/MM/YYYY\",\r\n        \"ba-RU\": \"DD.MM.yy\",\r\n        \"nso-ZA\": \"YYYY/MM/DD\",\r\n        \"quz-BO\": \"DD/MM/YYYY\",\r\n        \"yo-NG\": \"DD/M/YYYY\",\r\n        \"ha-Latn-NG\": \"DD/M/YYYY\",\r\n        \"fil-PH\": \"MM/DD/YYYY\",\r\n        \"ps-AF\": \"DD/MM/yy\",\r\n        \"fy-NL\": \"d-M-YYYY\",\r\n        \"ne-NP\": \"MM/DD/YYYY\",\r\n        \"se-NO\": \"DD.MM.YYYY\",\r\n        \"iu-Cans-CA\": \"DD/M/YYYY\",\r\n        \"sr-Latn-RS\": \"DD.M.YYYY\",\r\n        \"si-LK\": \"YYYY-MM-DD\",\r\n        \"sr-Cyrl-RS\": \"DD.M.YYYY\",\r\n        \"lo-LA\": \"DD/MM/YYYY\",\r\n        \"km-KH\": \"YYYY-MM-DD\",\r\n        \"cy-GB\": \"DD/MM/YYYY\",\r\n        \"bo-CN\": \"YYYY/M/d\",\r\n        \"sms-FI\": \"DD.M.YYYY\",\r\n        \"as-IN\": \"DD-MM-YYYY\",\r\n        \"ml-IN\": \"DD-MM-yy\",\r\n        \"en-IN\": \"DD-MM-YYYY\",\r\n        \"or-IN\": \"DD-MM-yy\",\r\n        \"bn-IN\": \"DD-MM-yy\",\r\n        \"tk-TM\": \"DD.MM.yy\",\r\n        \"bs-Latn-BA\": \"DD.M.YYYY\",\r\n        \"mt-MT\": \"DD/MM/YYYY\",\r\n        \"sr-Cyrl-ME\": \"DD.M.YYYY\",\r\n        \"se-FI\": \"DD.M.YYYY\",\r\n        \"zu-ZA\": \"YYYY/MM/DD\",\r\n        \"xh-ZA\": \"YYYY/MM/DD\",\r\n        \"tn-ZA\": \"YYYY/MM/DD\",\r\n        \"hsb-DE\": \"DD. M. YYYY\",\r\n        \"bs-Cyrl-BA\": \"DD.M.YYYY\",\r\n        \"tg-Cyrl-TJ\": \"DD.MM.yy\",\r\n        \"sr-Latn-BA\": \"DD.M.YYYY\",\r\n        \"smj-NO\": \"DD.MM.YYYY\",\r\n        \"rm-CH\": \"DD/MM/YYYY\",\r\n        \"smj-SE\": \"YYYY-MM-DD\",\r\n        \"quz-EC\": \"DD/MM/YYYY\",\r\n        \"quz-PE\": \"DD/MM/YYYY\",\r\n        \"hr-BA\": \"DD.M.YYYY.\",\r\n        \"sr-Latn-ME\": \"DD.M.YYYY\",\r\n        \"sma-SE\": \"YYYY-MM-DD\",\r\n        \"en-SG\": \"DD/M/YYYY\",\r\n        \"ug-CN\": \"YYYY-M-d\",\r\n        \"sr-Cyrl-BA\": \"DD.M.YYYY\",\r\n        \"es-US\": \"MM/DD/YYYY\"\r\n    }\r\n};\r\n\r\nmodule.exports = Localization;\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/Localization.js","var moment = require('moment');\r\nvar ExtPromotionCalendar = {\r\n    /**\r\n     * The onInstantiate function is call once when the BO is ready for user\r\n     * @returns {Promise[]} Array of promises created by asynchronous load of data\r\n     */\r\n    // Core functionality - DO NOT CHANGE THE CONTENT OF THIS FUNCTION DURING CUSTOMIZING!\r\n    onInstantiate: function () {\r\n        var me = this;\r\n        var instantiatePromises = []; // when.defer();\r\n        this.fluxHandler=UI_EVENT_BUS.subscribe(EVENTS.FLUX, this.onDispatcher.bind(this));\r\n        UI_EVENT_BUS.subscribe(EVENTS.UI_ERROR, this.onUIError.bind(this));\r\n\r\n        instantiatePromises = this.preLoad();\r\n\r\n        return instantiatePromises;\r\n    },\r\n    /**\r\n     * Load all data which must be available before the UI is rendered. \r\n     * The promises as returned by this function are handled in a synchronous way. Only once all of them are resolved the system continues.\r\n     * Customization points:\r\n     *  - Before the array of promises is returned. The project can use that to add additonal LOs\r\n     * @returns {Promise[]} Array of promises created by asynchronous load of data\r\n     */\r\n    preLoad: function () {\r\n        var me = this;\r\n        var instantiatePromises = []; // when.defer();\r\n        var loadParams = { 'readAll': true };\r\n\r\n        this.modalMessages = [];\r\n\r\n        instantiatePromises.push(this.LOTactic_Template.load(null, loadParams));\r\n        instantiatePromises.push(this.LOPromotion_Template.load(null, loadParams));\r\n        instantiatePromises.push(this.LOAccount.load(null, loadParams));\r\n        instantiatePromises.push(this.LOExtPrdFilters.load());\r\n        instantiatePromises.push(this.LOCalendarView.load());\r\n\r\n        var fiscalYearLoadParams = { \"Reference_Date\": new Date().getTime() };\r\n\r\n        instantiatePromises.push(this.LOExtFiscalYear.load(null, fiscalYearLoadParams));\r\n\r\n        return Utils.callCustomFunction(this, 'preLoad', null, instantiatePromises);\r\n    },\r\n    /**\r\n     * Loads all data which is not needed immediately for rendering the UI.\r\n     * The returned promises will be resolved asynchronously while the UI is already usable.\r\n     * Customization points:\r\n     *  - Before the processing is done. The project can use that to make adaptions based on the loaded data or to load additional LOs\r\n     * @returns {Promise[]} Array of promises created by asynchronous load of data\r\n     */\r\n    postLoad: function () {\r\n        var me = this;\r\n        var instantiatePromises = [];\r\n        //apply active filter and Creation_Platform__c<>Mobility \r\n        this.LOPromotion_Template.setFilterArray([{\"Active__c\":true,\"op\":\"EQ\"},{\"Creation_Platform__c\":\"Mobility\",\"op\":\"NE\"}]);\r\n        this.initDate = new Date(this.LOExtFiscalYear.getItems()[0].Date_From);\r\n        this.endDate = new Date(this.LOExtFiscalYear.getItems()[0].Date_Thru);\r\n        var loadParams = { 'readAll': true };\r\n        this.LOAccountSet.load(null, loadParams);\r\n        me.refreshCalendarView();\r\n        /*var calendarView = _.find(this.LOCalendarView.getAllItems(), 'IsDefault');\r\n         var loadParams = {\"Date_From\": this.initDate.getTime(), \"Date_Thru\": this.endDate.getTime()};\r\n         loadParams.CalendarView = (calendarView!=null)?calendarView.serialize():'';\r\n         instantiatePromises.push(this.LOCalPromotions.load(null, loadParams));\r\n         instantiatePromises.push(this.LOAccountSet.load(null, {'readAll': true}));\r\n\r\n         when.all(instantiatePromises).then(x=> {\r\n         me.refreshCalLegend();\r\n         me.serializeCalendar();\r\n         });*/\r\n\r\n         Utils.callCustomFunction(this, 'postLoad', null);\r\n    },\r\n    /**\r\n     * Anchor for the postLoad function\r\n     * Content is moved to postLoad since it may be called several times which would not match the purpose of this function\r\n     */\r\n    afterInstantiate: function () {\r\n        this.postLoad();\r\n    },\r\n\r\n     refreshCalLegend: function () {\r\n        this.LOExtCalLegend.removeAllItems();\r\n        var uniqueTemplates = _.uniq(this.LOCalPromotions.getAllItems().map(item => item.Promotion_Template));\r\n        var legendItems = [];\r\n        uniqueTemplates.forEach(promoTemplateId => {\r\n            var promoTemplate = _.find(this.LOPromotion_Template.getAllItems(), {Id: promoTemplateId});\r\n            var promoSample = _.find(this.LOCalPromotions.getAllItems(), {Promotion_Template: promoTemplateId});\r\n            var liCallLegend = {\r\n                'Id': promoTemplate.getId(),\r\n                'Name': promoTemplate.Description__c,\r\n                'Commit_Color': promoSample.Commit_Color\r\n            };\r\n            \r\n            legendItems.push(liCallLegend);\r\n            \r\n          //  this.LOExtCalLegend.addItem(liCallLegend);\r\n        });\r\n        legendItems = _.sortBy(legendItems,'Name');\r\n        this.LOExtCalLegend.addItems(legendItems);\r\n    },\r\n\r\n    refreshCalendarView: function () {\r\n        var me = this;\r\n       // var calendarView = this.LOCalendarView.getItems()[0];\r\n       var calendarView = _.find(this.LOCalendarView.getAllItems(), 'IsDefault');\r\n       if (calendarView != null) {\r\n\r\n\r\n           var loadParams = { \"Date_From\": this.initDate.getTime(), \"Date_Thru\": this.endDate.getTime() };\r\n           loadParams.CalendarView = (calendarView != null) ? calendarView.serialize() : '';\r\n           this.LOCalPromotions.removeAllItems();\r\n\r\n           this.LOCalPromotions.load(null, loadParams).then(x => {\r\n               this.refreshCalLegend();\r\n               this.serializeCalendar();\r\n           });\r\n       }\r\n       else\r\n        this.serializeCalendar();\r\n    },\r\n\r\n    updateCalendarView: function (uiView) {\r\n        var me = this;\r\n        //var calendarView = this.LOCalendarView.getItems()[0];\r\n        var calendarView = _.find(this.LOCalendarView.getAllItems(), 'IsDefault');\r\n        if (!calendarView){\r\n            //There is no calendar view so we have to create an empty one\r\n            var LICalendarView={\r\n                    'Id': '',\r\n                    'Name': 'Default View',\r\n                    'Description': 'Default View',\r\n                    'IsDefault': true,\r\n                    'FilterCriteria': {\r\n                        \"accountfilter\": {\r\n                            \"criteria\": {\r\n                                \"account_id__c\": []\r\n                            }\r\n                        },\r\n                        \"promotionfilter\": {\r\n                            \"criteria\": {\r\n                                \"promotion_template__c\": [],\r\n                                \"tactic_template__c\": [],\r\n\r\n                            }\r\n                        },\r\n                        \"productfilter\": {\r\n                            \"criteria\": {\r\n                                \"category__c\": []\r\n                            }\r\n                        }\r\n\r\n                    }\r\n            };\r\n\r\n            this.LOCalendarView.addItem(LICalendarView);\r\n            calendarView = _.find(this.LOCalendarView.getAllItems(), 'IsDefault');\r\n\r\n        }\r\n\r\n        calendarView.objectStatus |= STATE.DIRTY;\r\n        var filterCriteria = calendarView.FilterCriteria;\r\n        if (uiView!=null){ //If it is null we maintain an empty initial view (user clicked the Continue Anyways button)\r\n             Object.keys(filterCriteria).forEach(c => {\r\n            var uiCriteria = uiView[c];\r\n            var viewCriteria = filterCriteria[c].criteria;\r\n            uiCriteria.forEach(field => {\r\n                viewCriteria[field.fieldId] = _.filter(field.values, {Selected: true}).reduce((r, v)=> {\r\n                    r.push(v.Id);\r\n                    return r;\r\n                }, []);\r\n            });\r\n        });\r\n        }\r\n       \r\n    \r\n        this.refreshCalendarView();\r\n        this.LOCalendarView.apex_write(calendarView.Id, JSON.stringify(calendarView.serialize())).then(result => {\r\n            if (result.__Status) {\r\n                var viewId = result.data.Id;\r\n                var calendarView = _.find(this.LOCalendarView.getAllItems(), 'IsDefault');\r\n                calendarView.Id = viewId;\r\n            }\r\n\r\n        });\r\n    },\r\n\r\n    /**\r\n     * This method is called after the user creates a new promotion through the UI wizard.\r\n     * It creates a valid promotion object by calling the APEX backend. The result will be added to LOCalPromotions.\r\n     * Customization points:\r\n     *  - beforeAPEX - Parameter for APEX call is assembled and can be adapted\r\n     *  - afterAPEX - Data for new promotion was received from APEX. Can be adapted before it is applied\r\n     * @param {JSON} promotion - Promotion content as created by the UI through the wizard\r\n     */\r\n    addPromotion: function (promotion) {\r\n        this.logger.info('Adding Promotion');\r\n        var Date_Thru__c = new Date(promotion.Date_From__c);\r\n        var Date_From__c = new Date(promotion.Date_From__c);\r\n        switch (promotion.period) {\r\n            case \"day\":\r\n                Date_Thru__c = moment.utc(Date_From__c.getTime()).add(promotion.duration,'Day').add(-1,'Day').toDate();\r\n                break;\r\n            case \"week\":\r\n                Date_Thru__c= moment.utc(Date_From__c.getTime()).add(promotion.duration,'Week').add(-1,'Day').toDate();\r\n                break;\r\n\r\n            case \"month\":\r\n                Date_Thru__c= moment.utc(Date_From__c.getTime()).add(promotion.duration,'Month').add(-1,'Day').toDate();\r\n                break;\r\n        }\r\n        var promoObject = {\r\n            \"Phase__c\": \"Planning\",\r\n            \"Anchor_Account__c\": promotion.account,\r\n            \"Anchor_Account_Set__c\": promotion.accountSet,\r\n            \"Promotion_Template__c\": promotion.promotion_template.Id,\r\n            \"Slogan_Language_1__c\": promotion.Slogan__c,\r\n            \"Date_From__c\": Date_From__c.getTime(),\r\n            \"Date_Thru__c\": Date_Thru__c.getTime()\r\n        };\r\n\r\n        promoObject = Utils.callCustomFunction(this, 'addPromotion', 'beforeAPEX', promoObject);\r\n        var win = self.open('');\r\n        this.LOCalPromotions.apex_create(JSON.stringify(promoObject)).then(result => {\r\n            if (result.__Status) {\r\n                //     this.LOCalPromotions.addItem(result.data);\r\n                result.data = Utils.callCustomFunction(this, 'addPromotion', 'afterAPEX', result.data);\r\n                this.refreshCalendarView();\r\n                Utils.HTTP.navigateTo(this.getPromotionPlanningPageReference(),{id:result.data},{newTab:true},win)\r\n                //self.open(promotionPath + '?id=' + result.data);\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Serialize the BO content into a JSON object and send it through the event bus to the UI.\r\n     * The UI will then refresh the components depending on this data.\r\n     * Customization points:\r\n     *  - before the UI is refreshed, the serialized object can be adapted\r\n     */\r\n    serializeCalendar: function () {\r\n        var me = this;\r\n        var calendarView = _.find(this.LOCalendarView.getAllItems(), 'IsDefault');\r\n\r\n        var serialzeProductFilter = function (fieldId) {\r\n            return {\r\n                fieldId: fieldId,\r\n                label: _.find(me.LOExtPrdFilters.getAllItems(), {filterId: fieldId}).filterLabel,\r\n                values: _.filter(me.LOExtPrdFilters.getAllItems(), {filterId: fieldId}).reduce((result, item) => {\r\n                    result.push({\r\n                        Label: item.filterValueLabel,\r\n                        Id: item.filterValueId,\r\n                        Selected: (calendarView!=null && calendarView.FilterCriteria.productfilter.criteria[fieldId] &&\r\n                        calendarView.FilterCriteria.productfilter.criteria[fieldId].indexOf(item.filterValueId) != -1)\r\n                    });\r\n                    return result;\r\n                }, [])\r\n            }\r\n        };\r\n\r\n        var calendar = {\r\n            initDate: this.initDate,\r\n            endDate: this.endDate,\r\n            showInitialSettings: (calendarView == null),\r\n            isFilterSet: true,//TODO\r\n            FilterCriteria: {\r\n                accountfilter: [\r\n                    {\r\n                        fieldId: 'account_id__c',\r\n                        label: AppManager.getLabel(\"PC_LBL_CUSTOMER_NAME\") || 'Customer name',\r\n                        values: this.LOAccount.getAllItems().reduce((result, acc) => {\r\n                            result.push({\r\n                                Label: acc.Name,\r\n                                Id: acc.Id,\r\n                                Selected: (calendarView!=null && calendarView.FilterCriteria.accountfilter.criteria.account_id__c.indexOf(acc.Id) != -1)\r\n                            });\r\n                            return result;\r\n                        }, [])\r\n                    }\r\n                ],\r\n                promotionfilter: [\r\n                    {\r\n                        fieldId: 'promotion_template__c',\r\n                        label: AppManager.getLabel(\"PC_LBL_PROMOTION_TYPE\") || 'Promotion type',\r\n                        values: this.LOPromotion_Template.getAllItems().reduce((result, promo) => {\r\n                            result.push({\r\n                                Label: promo.Description__c,\r\n                                Id: promo.Id,\r\n                                Selected: (calendarView!=null && calendarView.FilterCriteria.promotionfilter.criteria.promotion_template__c.indexOf(promo.Id) != -1)\r\n                            });\r\n                            return result;\r\n                        }, [])\r\n                    },\r\n                    {\r\n                        fieldId: 'tactic_template__c',\r\n                        label: AppManager.getLabel(\"PC_LBL_TACTIC_TYPE\") || 'Tactic type',\r\n                        values: this.LOTactic_Template.getAllItems().reduce((result, tactic) => {\r\n                            result.push({\r\n                                Label: tactic.Description__c,\r\n                                Id: tactic.Id,\r\n                                Selected: (calendarView!=null && calendarView.FilterCriteria.promotionfilter.criteria.tactic_template__c.indexOf(tactic.Id) != -1)\r\n                            });\r\n                            return result;\r\n                        }, [])\r\n                    }\r\n                ],\r\n                productfilter: []\r\n            },\r\n\r\n            accounts: this.LOAccount.getAllItems().reduce((result, acc) => {\r\n                result.push({\r\n                    Label: acc.Name,\r\n                    Id: acc.Id\r\n                });\r\n                return result;\r\n            }, []),\r\n\r\n            accountSet: this.LOAccountSet.getAllItems().reduce((result, acc) => {\r\n                result.push({\r\n                    Label: acc.Description__c,\r\n                    Id: acc.Id\r\n                });\r\n                return result;\r\n            }, []),\r\n\r\n            promotion_templates: this.LOPromotion_Template.getAllItems().reduce((result, promo) => {\r\n                result.push({\r\n                    Label: promo.Description__c,\r\n                    Id: promo.Id,\r\n                    Anchor_Type: promo.Anchor_Type__c\r\n                });\r\n                return result;\r\n            }, []),\r\n            \r\n             active_promotion_templates: this.LOPromotion_Template.getItems().reduce((result, promo) => {\r\n                result.push({\r\n                    Label: promo.Description__c,\r\n                    Id: promo.Id,\r\n                    Anchor_Type: promo.Anchor_Type__c\r\n                });\r\n                return result;\r\n            }, []),\r\n\r\n            legend: this.LOExtCalLegend.getAllItems().reduce((result, legend) => {\r\n                result.push({Name: legend.Name, Commit_Color: legend.Commit_Color});\r\n                return result;\r\n            }, []),\r\n\r\n            periods: this.LOExtFiscalYear.getAllItems()[0].Periods,// TODO\r\n\r\n            promotions: this.LOCalPromotions.getAllItems().reduce((result, promo) => {\r\n                result.push(\r\n                    {\r\n                        'slogan': promo.Slogan,\r\n                        'Account_Name': promo.Account_Name || promo.Account_Set_Description ,\r\n                        'Commit_Color': promo.Commit_Color,\r\n                        'Promotion_Template_Id': promo.Promotion_Template,\r\n                        'dates': promo.Promotions.reduce((r, v)=> {\r\n                            r.push({\r\n                                'Id': v.Id,\r\n                                'from': new Date(v.Date_From),\r\n                                'to': new Date(v.Date_Thru),\r\n                                'phase': v.Phase,\r\n                                'isReady': (v.Phase == 'Committed')\r\n                            });\r\n\r\n                            return r;\r\n                        }, [])\r\n                    });\r\n                return result;\r\n            }, [])\r\n        };\r\n\r\n        calendar.FilterCriteria.productfilter.push(serialzeProductFilter('category__c'));\r\n\r\n        calendar.isFilterSet = _.some(calendar.FilterCriteria.accountfilter[0].values, { Selected: true }) ||\r\n            _.some(calendar.FilterCriteria.promotionfilter[0].values, { Selected: true }) ||\r\n            _.some(calendar.FilterCriteria.promotionfilter[0].values, { Selected: true }) ||\r\n            _.some(calendar.FilterCriteria.productfilter[0].values, { Selected: true });\r\n\r\n        calendar = Utils.callCustomFunction(this, 'serializeToUI', null, calendar);\r\n\r\n        UI_EVENT_BUS.put(EVENTS.UI_BINDING, {calendar: calendar});\r\n    },\r\n\r\n    /**\r\n     * Get the visual force page reference to PromotionPlanning page. \r\n     */\r\n    getPromotionPlanningPageReference: function(){\r\n        return 'PromotionPlanning';\r\n    },\r\n    /**\r\n     * Serialize the content of the calendar to be sent as state to the React UI\r\n     */\r\n    serializeToUI: function () {\r\n        return this.serializeCalendar();\r\n    },\r\n\r\n    onUIError: function (message) {\r\n        this.modalMessages.push(message);\r\n        AppManager.init().then(() => UI_EVENT_BUS.put(EVENTS.UI_BINDING, { modalMessages: this.modalMessages }));\r\n    },\r\n    onDispatcher: function (payload) {\r\n        var action = payload;\r\n        var self=this;\r\n\r\n        switch (action.actionType) {\r\n            case PromCalendarActionConstants.CALENDAR_LOAD:\r\n                this.load();\r\n                break;\r\n\r\n            case  PromCalendarActionConstants.ADD_PROMOTION :\r\n                console.log('Add Promotion');\r\n                this.addPromotion(action.payload);\r\n                break;\r\n\r\n            case  PromCalendarActionConstants.PREVIOUS_PERIOD :\r\n                console.log('PREVIOUS_PERIOD Promotion');\r\n                var date_from = new Date(this.initDate);\r\n\r\n                date_from.setFullYear(this.initDate.getFullYear() - 1);\r\n\r\n                var loadParams = {\"Reference_Date\": date_from.getTime()};\r\n                this.LOExtFiscalYear.apex_read(loadParams).then(fiscalYear => {\r\n                    if (fiscalYear.__Status) {\r\n                        this.LOExtFiscalYear.removeAllItems();\r\n                        this.LOExtFiscalYear.addItem(fiscalYear.data[0]);\r\n                        this.initDate = new Date(fiscalYear.data[0].Date_From);\r\n                        this.endDate = new Date(fiscalYear.data[0].Date_Thru);\r\n                        this.refreshCalendarView();\r\n                    }\r\n                    else {\r\n                        alert('error moving to next period');\r\n                        this.refreshCalendarView();\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case  PromCalendarActionConstants.NEXT_PERIOD :\r\n                console.log('NEXT_PERIOD Promotion');\r\n\r\n                var date_from = new Date(this.initDate);\r\n\r\n                date_from.setFullYear(this.initDate.getFullYear() + 1);\r\n\r\n                var loadParams = {\"Reference_Date\": date_from.getTime()};\r\n                this.LOExtFiscalYear.apex_read(loadParams).then(fiscalYear => {\r\n                    if (fiscalYear.__Status) {\r\n                        this.LOExtFiscalYear.removeAllItems();\r\n                        this.LOExtFiscalYear.addItem(fiscalYear.data[0]);\r\n                        this.initDate = new Date(fiscalYear.data[0].Date_From);\r\n                        this.endDate = new Date(fiscalYear.data[0].Date_Thru);\r\n                        this.refreshCalendarView();\r\n                    }\r\n                    else {\r\n                        alert('error moving to next period');\r\n                        this.refreshCalendarView();\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case  PromCalendarActionConstants.CHANGE_FILTER :\r\n                console.log('CHANGE_FILTER Promotion');\r\n                this.updateCalendarView(action.payload);\r\n                _.assign(this, action.payload);\r\n\r\n                this.serializeCalendar();\r\n                break;\r\n            case PromCalendarActionConstants.CANCEL_CHANGE_FILTER:\r\n                console.log('Cancel CHANGE_FILTER Promotion');\r\n                this.serializeCalendar();\r\n                break;\r\n\r\n            case  PromCalendarActionConstants.GET_PROMOTION_DETAIL :\r\n                console.log('GET_PROMOTION_DETAIL Promotion for promotion : ' + action.payload);\r\n                var promoDetail = _.find(this.LOExtHoverContent.getAllItems(), {promotionId: action.payload});\r\n                if (promoDetail) {\r\n\r\n                    var promotionDetail = {\r\n                        Id: promoDetail.promotionId,\r\n                        Tactics: promoDetail.content.Tactics.reduce((result, tactic) => {\r\n                            result.push({\r\n                                'Id': tactic.Id,\r\n                                'Date_From': new Date(tactic.Date_From),\r\n                                'Date_Thru': new Date(tactic.Date_Thru),\r\n                                'Description': tactic.Description\r\n                            });\r\n                            return result;\r\n                        }, [])\r\n                    };\r\n\r\n                    UI_EVENT_BUS.put(EVENTS.UI_BINDING, {promotionDetailData: promotionDetail});\r\n                }\r\n                else {\r\n                    this.LOExtHoverContent.apex_read({\"promotionId\": action.payload}).then(detail=> {\r\n                        this.LOExtHoverContent.addItem(detail.data[0]);\r\n                        var promotionDetail = {\r\n                            Id: detail.data[0].promotionId,\r\n                            Tactics: detail.data[0].content.Tactics.reduce((result, tactic) => {\r\n                                result.push({\r\n                                    'Id': tactic.Id,\r\n                                    'Date_From': new Date(tactic.Date_From),\r\n                                    'Date_Thru': new Date(tactic.Date_Thru),\r\n                                    'Description': tactic.Description\r\n                                });\r\n                                return result;\r\n                            }, [])\r\n                        };\r\n\r\n                        UI_EVENT_BUS.put(EVENTS.UI_BINDING, {promotionDetailData: promotionDetail});\r\n                    });\r\n                }\r\n                break;\r\n\r\n            case  PromCalendarActionConstants.OPEN_PROMOTION_DETAIL:\r\n                console.log('OPEN_PROMOTION_DETAIL Promotion for promotion : ' + action.payload);\r\n                //window.open(promotionPath + '?id=' + action.payload);\r\n                 Utils.HTTP.navigateTo(this.getPromotionPlanningPageReference(),{id:action.payload})\r\n                break;\r\n\r\n            case  PromCalendarActionConstants.DERIVE_PROMOTION_DETAIL:\r\n\r\n                console.log('DERIVE_PROMOTION_DETAIL Promotion for promotion : ' + action.payload);\r\n\r\n                this.LOCalPromotions.apex_derive(action.payload).then(result => {\r\n                    if (result.__Status) {\r\n                         Utils.HTTP.navigateTo(this.getPromotionPlanningPageReference(),{id:result.data.Promotions[0].Id},{newTab:true})\r\n                       // self.open(promotionPath + '?id=' + result.data.Promotions[0].Id);\r\n                    }\r\n                });\r\n                /*UI_EVENT_BUS.put(EVENTS.UI_ERROR, {\r\n                 title: 'Unavailable Functionality',\r\n                 message: 'Sorry, derive promotion functionality is not available yet.',\r\n                 type: 'E'\r\n                 });*/\r\n                break;\r\n\r\n            case PromCalendarActionConstants.COPY_PROMOTION_DETAIL:\r\n                this.LOCalPromotions.apex_copy(action.payload).then(result => {\r\n                    if (result.__Status) {\r\n                          Utils.HTTP.navigateTo(this.getPromotionPlanningPageReference(),{id:result.data.Promotions[0].Id})\r\n                       // self.open(promotionPath + '?id=' + result.data.Promotions[0].Id);\r\n\r\n                    }\r\n                });\r\n                console.log('COPY_PROMOTION_DETAIL Promotion for promotion : ' + action.payload);\r\n                break;\r\n\r\n            case  PromCalendarActionConstants.DELETE_PROMOTION_DETAIL:\r\n                this.LOCalPromotions.apex_delete(action.payload).then(result => {\r\n                    if (result) {\r\n                       var promotionGroup=_.find(self.LOCalPromotions.getAllItems(),(item)=>_.find(item.Promotions,{Id:action.payload}) );\r\n                       if (promotionGroup.Promotions.length==1){\r\n                            //remove whole promotion\r\n                            _.remove(self.LOCalPromotions.getAllItems(),promotionGroup);\r\n                       } else {\r\n                            //delete promotion\r\n                             _.remove(promotionGroup.Promotions,{Id:action.payload});\r\n                       }\r\n                       self.serializeCalendar();\r\n\r\n                       //self.refreshCalendarView();\r\n                    }\r\n                });\r\n                console.log('DELETE_PROMOTION_DETAIL Promotion for promotion : ' + action.payload);\r\n                break;\r\n            default: \r\n                Utils.callCustomFunction(this, 'onDispatcher', null, action);\r\n                break;\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = ExtPromotionCalendar;\r\n\n\n\n// WEBPACK FOOTER //\n// baseClasses/ExtPromotionCalendar.js","var DSExtPromotionCalendar = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSExtPromotionCalendar',\r\n    'IsExternal': true,\r\n    'SFObject': null,\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'PromotionPlanningController'}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSExtPromotionCalendar;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSExtPromotionCalendar.js","var LOCalendarView = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOCalendarView',\r\n    'SFObject': null,\r\n    'DataSource': 'DSCalendarView',\r\n    'Properties': [] // Properties are not explitly defined in release 3\r\n};\r\n\r\nmodule.exports = LOCalendarView;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/LOCalendarView.js","var DSCalendarView = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSCalendarView',\r\n    'IsExternal': true,\r\n    'SFObject': null,\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'write', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSCalendarView;\n\n\n// WEBPACK FOOTER //\n// contracts/DSCalendarView.js","var DSCalPromotions = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSCalPromotions',\r\n    'IsExternal': true,\r\n    'SFObject': 'Promotion__c',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'write', 'Available': false},\r\n        {'Type': 'create', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'delete', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'derive', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'copy', 'Extension': 'PromotionRemoteActionExtension'}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSCalPromotions;\n\n\n// WEBPACK FOOTER //\n// contracts/DSCalPromotions.js","var LOCalPromotions = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOCalPromotions',\r\n    'SFObject': 'Promotion__c',\r\n    'DataSource': 'DSCalPromotions',\r\n    'Properties': [] // Properties are not explitly defined in release 3    \r\n};\r\n\r\nmodule.exports = LOCalPromotions;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/LOCalPromotions.js","var DSExtCalLegend = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSExtCalLegend',\r\n    'IsExternal': true,\r\n    'SFObject': null,\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': []\r\n};\r\n\r\nmodule.exports = DSExtCalLegend;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSExtCalLegend.js","var LOExtCalLegend = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOExtCalLegend',\r\n    'SFObject': null,\r\n    'DataSource': 'DSExtCalLegend',\r\n    'Properties': [] // Properties are not explitly defined in release 3    \r\n};\r\n\r\nmodule.exports = LOExtCalLegend;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/LOExtCalLegend.js","var DSExtFiscalYear = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSExtFiscalYear',\r\n    'IsExternal': true,\r\n    'SFObject': '',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'write', 'Available': false},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false},\r\n        {'Type': 'getEARights', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSExtFiscalYear;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSExtFiscalYear.js","var LOExtFiscalYear = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOExtFiscalYear',\r\n    'SFObject': null,\r\n    'DataSource': 'DSExtFiscalYear',\r\n    'Properties': [] // Properties are not explitly defined in release 3    \r\n};\r\n\r\nmodule.exports = LOExtFiscalYear;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/LOExtFiscalYear.js","module.exports = {\r\n    'Type': 'BusinessObject',\r\n    'Name': 'BOExtPromotionCalendar',\r\n    'SFObject': null,\r\n    'DataSource': 'DSExtPromotionCalendar',\r\n    'BaseClass': 'ExtPromotionCalendar',\r\n    'IdAttribute': 'Id',\r\n    'Properties': [], // Properties are not explitely defined in release 3\r\n    'ListObjects': [\r\n        {'Name': 'LOAccount'},\r\n        {'Name': 'LOTactic_Template'},\r\n        {'Name': 'LOExtPrdFilters'},\r\n        {'Name': 'LOPromotion_Template'},\r\n        {'Name': 'LOAccountSet'},\r\n        {'Name': 'LOCalendarView'},\r\n        {'Name': 'LOExtCalLegend'},\r\n        {'Name': 'LOExtFiscalYear'},\r\n        {'Name': 'LOCalPromotions'},\r\n        {'Name': 'LOExtHoverContent'}\r\n    ],\r\n    'Methods': [\r\n        {'Name': 'onInstantiate'},\r\n        {'Name': 'afterInstantiate'},\r\n        {'Name': 'onDispatcher'},\r\n {'Name': 'onUIError'},\r\n        {'Name': 'preLoad'},\r\n        {'Name': 'postLoad'},\r\n        {'Name': 'refreshCalLegend'},\r\n        {'Name': 'serializeCalendar'},\r\n        {'Name': 'refreshCalendarView'},\r\n {'Name': 'addPromotion', 'Customize': ['beforeAPEX', 'afterAPEX']},\r\n        \r\n        {'Name': 'updateCalendarView'},\r\n{'Name': 'serializeToUI'},\r\n        {'Name': 'getPromotionPlanningPageReference'}\r\n    ]\r\n};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/BOExtPromotionCalendar.js","var LOAccount = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOAccountSet',\r\n    'SFObject': 'Account',\r\n    'DataSource': 'DSAccountSet',\r\n    'Properties': [] // Properties are not explitly defined in release 3   \r\n};\r\n\r\nmodule.exports = LOAccount;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/LOAccountSet.js","var DSAccount = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSAccountSet',\r\n    'IsExternal': false,\r\n    'SFObject': 'Account',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'AccountSetRemoteActionExtension'},\r\n        {'Type': 'write', 'Available': false},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false},\r\n        {'Type': 'getEARights', 'Available': false},\r\n        {'Type': 'copy', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSAccount;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSAccountSet.js","var LOExtHoverContent = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOExtHoverContent',\r\n    'SFObject': null,\r\n    'DataSource': 'DSExtHoverContent',\r\n    'Properties': [] // Properties are not explitly defined in release 3    \r\n};\r\n\r\nmodule.exports = LOExtHoverContent;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/LOExtHoverContent.js","var DSExtHoverContent = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSExtHoverContent',\r\n    'IsExternal': true,\r\n    'SFObject': '',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'write', 'Available': false},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false},\r\n        {'Type': 'getEARights', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSExtHoverContent;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSExtHoverContent.js","var DSMetaData = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSMetaData',\r\n    'APEX': [\r\n        //Define metadata remote extension here\r\n        {\r\n            'Type': 'getMetaData',\r\n            'Extension': 'MetaDataRemoteActionExtension',\r\n            'Managed': true,\r\n            'Compressed': false,\r\n            'Buffer': false,\r\n            'Aggregation': true,\r\n            'CheckLayout': false\r\n        },\r\n        {\r\n            'Type': 'getMetaDataList',\r\n            'Extension': 'MetaDataRemoteActionExtension',\r\n            'Managed': true,\r\n            'Compressed': false,\r\n            'Buffer': false\r\n        }\r\n    ]\r\n};\r\n\r\nmodule.exports = DSMetaData;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSMetaData.js","var DSCustomLabels = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSCustomLabels',\r\n    'APEX': [\r\n        //Define custom labels remote extension here\r\n        {\r\n            'Type': 'readCustomLabelsById',\r\n            'Extension': 'ContractRemoteActionExtension',\r\n            'Managed': true,\r\n            'Compressed': false,\r\n            'Buffer': true\r\n        }\r\n    ]\r\n};\r\n\r\nmodule.exports = DSCustomLabels;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSCustomLabels.js","var DSCustomLabels = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSLocale',\r\n    'APEX': [\r\n        //Define locale remote extension here\r\n        {\r\n            'Type': 'getUserSettings',\r\n            'Extension': 'MetaDataRemoteActionExtension',\r\n            'Managed': true,\r\n            'Compressed': false,\r\n            'Buffer': true\r\n        }\r\n    ]\r\n};\r\n\r\nmodule.exports = DSCustomLabels;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts/DSLocale.js","//DO NOT REMOVE BELOW LINE\r\nglobal.LocalizationCust = require('./Localization_cust');\r\n\r\nglobal.bopromotion_cust = require('./BOPromotion_cust');\r\nglobal.dscustomlabels_cust = require('./DSCustomLabels_cust');\r\nglobal.dsextchildaccounts = require('./DSExtChildAccounts');\r\nglobal.dspromotion_cust = require('./DSPromotion_cust');\r\nglobal.dstactic_cust = require('./DSTactic_cust');\r\nglobal.dsextpromotionattachment = require('./DSExtPromotionAttachment');\r\nglobal.loextpromotionattachment_cust = require('./LOExtPromotionAttachment');\r\nglobal.dsextpromotionattachment_cust = require('./DSExtPromotionAttachment_cust');\r\nglobal.dsmetadata_cust = require('./DSMetaData_cust');\r\nglobal.loextchildaccounts = require('./LOExtChildAccounts');\r\nglobal.loexttactictiers = require('./LOExtTacticTiers');\r\nglobal.dsexttactictiers = require('./DSExtTacticTiers');\r\nglobal.lofilteredfunds_cust = require('./LOFilteredFunds_cust');\r\nglobal.dsfilteredfunds_cust = require('./DSFilteredFunds_cust');\r\nglobal.lofund_cust = require('./LOFund_cust');\r\nglobal.dsfund_cust = require('./DSFund_cust');\r\n\r\nglobal.boextpromotioncalendar_cust = require('./BOExtPromotionCalendar_cust');\r\nglobal.extpromotioncalendar_cust = require('../baseClasses/ExtPromotionCalendar_Cust');\r\nglobal.promotion_cust = require('../baseClasses/Promotion_Cust');\r\n\n\n\n// WEBPACK FOOTER //\n// contracts_cust/contracts_cust.js","var Localization = {\r\n\r\n    'labels': {\r\n        //'TEST': 'TEST'\r\n        \"PP_TIT_CONFIRMATION\": \"Confirmation\",\r\n        \"PP_LBL_CONFIRMATION_DELETE_ATTACHMENT\": \"Do you want to delete selected attachment?\",\r\n        \"PP_LBL_CONFIRMATION_EXCLUDE_PRODUCT\": \"Do you want to exclude the product?\",\r\n        \"PP_LBL_CONFIRMATION_REMOVE_EXCLUSION_PRODUCT\": \"Do you want to remove the exclusion for the product?\",\r\n        \"PP_LBL_CONFIRMATION_REMOVE_INCLUDED_PRODUCT\": \"Do you want to remove the manually included product?\",\r\n        \"PP_TIT_INFORMATION\": \"Information\",\r\n        \"PP_LBL_INFORMATION_FUNDS\": \"There are no funds selected.\",\r\n        \"PP_LBL_CONFIRMATION_DELETE_FUNDS\": \"Do you want to delete selected funds?\",\r\n        \"PP_LBL_FUND_NAME\": \"Fund Name\",\r\n        \"PP_LBL_FUND_DESCRIPTION\": \"Description\",\r\n        \"PP_LBL_FUND_ANCHOR_CUSTOMER\": \"Anchor Customer\",\r\n        \"PP_LBL_FUND_ANCHOR_PRODUCT\": \"Anchor Product\",\r\n        \"PP_LBL_FUND_TYPE\": \"Fund Type\",\r\n        \"PP_LBL_FUND_AMOUNT\": \"Amount\",\r\n        \"PP_TIT_FUNDS\": \"Funds\",\r\n        \"PP_TIT_CHILD_PROMOTION_ACCOUNTS\": \"Child Promotion Accounts\",\r\n        \"PP_TIT_ACCOUNT\": \"Account\",\r\n        \"PP_LBL_CUSTOMER_UNIQUE\": \"Costumer Unique\",\r\n        \"PP_LBL_PROMOTION_ID\": \"Promotion Id\",\r\n        \"PP_TIT_PUSH_PROMOTION\": \"Push Promotion\",\r\n        \"PP_LBL_PUSH_FINALIZED\": \"Push child promotion accounts finalized\",\r\n        \"PP_LBL_PUSH_PROCESS_PROGRESS\": \"Push process progress.\",\r\n        \"PP_LBL_PROMOTIONS_DONE\": \"Promotions done\",\r\n        \"PP_TIT_PROMOTION_SLOGAN\": \"Promotion slogan\",\r\n        \"PP_TIT_PUSH_ERROR\": \"Error pushing child promotion\",\r\n        \"PP_LBL_PUSH_ERROR\": \"An error occurred while trying to push the child promotion account\",\r\n        \"PP_TIT_CLEAN_PUSH_ERROR\": \"Error cleaning child promotions\",\r\n        \"PP_LBL_CLEAN_PUSH_ERROR\": \"An error occurred while trying to clean the child promotions account\",\r\n        \"PP_TIT_INCLUDE_EXCLUDE_ALL\": \"Include/Exclude All\",\r\n        \"PP_TIT_ATTACHMENTS\": \"Attachments\",\r\n        \"PP_LBL_IMAGE_DESCRIPTION\": \"Description\",\r\n        \"PP_LBL_IMAGE_CREATION_DATE\": \"Creation Date\",\r\n        \"PP_LBL_IMAGE_LAST_UPDATE\": \"Last Update\",\r\n        \"PP_TIT_UPLOAD_ERROR\": \"Error Uploading\",\r\n        \"PP_LBL_UPLOAD_ERROR\": \"An error occurred while trying to upload the file\",\r\n        \"PP_LBL_DESCRIPTION\": \"Description\",\r\n        \"PP_LBL_ANCHOR_CUSTOMER\": \"Anchor Customer\",\r\n        \"PP_LBL_ANCHOR_PRODUCT\": \"Anchor Product\",\r\n        \"PP_LBL_AMOUNT\": \"Amount\",\r\n        \"PP_LBL_NAME_ATTACHMENT\": \"Name\",\r\n        \"PP_LBL_SIZE_ATTACHMENT\": \"Size\",\r\n        \"PP_LBL_DESCRIPTION_ATTACHMENT\": \"Description\",\r\n        \"PP_LBL_CREATION_DATE_ATTACHMENT\": \"Creation Date\",\r\n        \"PP_LBL_LAST_UPDATE_DATE_ATTACHMENT\": \"Last Update Date\",\r\n        \"PP_LBL_DRAG_ATTACHMENTS\": \"Drag attachments here or\",\r\n        \"PP_LBL_UPLOAD_ATTACHMENTS\": \"Upload Files\",\r\n        \"PP_LBL_UPLOADING_ATTACHMENTS\": \"Uploading...\",\r\n        \"PP_LBL_IMAGES_ATTACHMENTS\": \"Images\",\r\n        \"PP_LBL_VIDEOS_ATTACHMENTS\": \"Videos\",\r\n        \"PP_LBL_FILES_ATTACHMENTS\": \"Files\",\r\n        \"PP_LBL_NO_ATTACHMENTS_UPLOADED_1\": \"No Attachments uploaded, yet. Switch to the\",\r\n        \"PP_LBL_NO_ATTACHMENTS_UPLOADED_2\": \"to Upload some Files. \",\r\n        \"PP_LBL_EDIT_MODE_ATTACHMENTS\": \"Edit Mode\",\r\n        \"PP_TIT_UPLOAD_ATTACHMENT_ERROR\": \"Upload Error\",\r\n        \"PP_LBL_UPLOAD_ATTACHMENT_SIZE_ERROR\": \"File incorrect size. The attachment has to be less than 25MB.\",\r\n        \"PP_LBL_UPLOAD_ATTACHMENT_FILENAME_SIZE_ERROR\": \"The filename is too long (max. 80 chars)\",\r\n        \"PP_LBL_UPLOAD_ATTACHMENT_NUMBER_OF_FILES_ERROR\": \"Only one file allowed per upload\",\r\n        \"PP_BTN_APPROVE\": \"Approve\",\r\n        \"PP_BTN_REJECT\": \"Reject\",\r\n        \"PP_BTN_SUBMIT\": \"Submit\",\r\n        \"PP_BTN_SAVE\": \"Save\",\r\n        \"PP_BTN_PUSH\": \"Push\",\r\n        //PMA - START CODE - 2017-01-13 - Threshold button\r\n        \"PP_BTN_INVOKETHRESHOLD\": \"Threshold\",\r\n        //PMA - END CODE - 2017-01-13 - Threshold button\r\n        \"PP_BTN_RELEASE\": \"Release\",\r\n        \"PP_BTN_MANAGE_TIERS\": \"Manage Tiers\",\r\n        \"PP_BTN_APPLY_TIERS\": \"Apply Tiers\",\r\n        \"PP_BTN_NEW\": \"New\",\r\n        \"PP_TIT_RELEASE_ERROR\": \"Error updating child promotions\",\r\n        \"PP_LBL_RELEASE_ERROR\": \"An error occurred while trying to release the child promotions account\",\r\n        \"PP_TIT_TIERED_INFORMATION\": \"Tiered Information\",\r\n        \"PP_TIT_VOLUME_MIN\": \"Volume Min\",\r\n        \"PP_TIT_VOLUME_MAX\": \"Volume Max\",\r\n        \"PP_TIT_AMOUNT\": \"Amount\",\r\n        \"PP_TIT_SELECT\": \"SELECT\",\r\n        \"PP_LBL_NO_TIERS\": \"No Tiers associated to this tactic\",\r\n        //PMA - START CODE - 2017-01-16 - New UK Button\r\n        \"PP_BTN_SIMULATION\": \"Simulation\",\r\n        \"PP_BTN_MODEL\": \"Model\",\r\n        \"PP_BTN_PLANNED\": \"Planned\",\r\n        \"PP_BTN_SUBMITTEDFORAPPROVAL\": \"Sumitted for Approval\",\r\n        \"PP_BTN_REJECTED\": \"Rejected\",\r\n        \"PP_BTN_FINALISED\": \"Finalised\",\r\n        \"PP_BTN_CANCELLED\": \"Cancelled\",\r\n        \"PP_BTN_STOPPED\": \"Stopped\",\r\n        //PMA - END CODE - 2017-01-16 - New UK Button\r\n        \"PP_BTN_AUDITTRAIL\": \"Audit Trail\",\r\n        \"PP_LBL_TACTICS\": \"Tactics\", //Missing\r\n        'PP_BTN_MANAGE_FUND': 'Manage Funds',\r\n        'PP_BTN_APPLY_FUND' : 'Apply Fund',\r\n        'PP_BTN_ENDDATE' : 'End Date'\r\n    }\r\n};\r\n\r\nmodule.exports = Localization;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts_cust/Localization_cust.js","var BO_Promotion = {\r\n\r\n    'ListObjects': [\r\n        {'Name': 'LOExtPromotionAttachment'},\r\n        {'Name': 'LOExtChildAccounts'},\r\n        {'Name': 'LOExtTacticTiers'},\r\n        {'Name': 'LOFund'},\r\n        {'Name': 'LOFilteredFunds'}\r\n    ],\r\n    'Methods': []\r\n};\r\n\r\nmodule.exports = BO_Promotion;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts_cust/BOPromotion_cust.js","var DSCustomLabels = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSCustomLabels',\r\n    'APEX': [\r\n        //Define custom labels remote extension here\r\n        {\r\n            'Type': 'readCustomLabelsById',\r\n            'Extension': 'MyContractRemoteActionExtension',\r\n            'Managed': false,\r\n            'Compressed': false,\r\n            'Buffer': true\r\n        }\r\n    ]\r\n};\r\n\r\nmodule.exports = DSCustomLabels;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts_cust/DSCustomLabels_cust.js","var DSExtChildAccounts = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSExtChildAccounts',\r\n    'IsExternal': true,\r\n    'IsManaged': false,\r\n    'SFObject': 'Promotion_Acc_Rel__c',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'MyPromotionRemoteActionExtension', 'Managed': false},\r\n        {'Type': 'write', 'Available': false},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false},\r\n        {'Type': 'getEARights', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSExtChildAccounts;\n\n\n// WEBPACK FOOTER //\n// contracts_cust/DSExtChildAccounts.js","var DSPromotion = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSPromotion',\r\n    'IsExternal': false,\r\n    'SFObject': 'Promotion__c',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Available': true, 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'write', 'Available': true, 'Managed': false, 'Extension': 'MyPromotionRemoteActionExtension'},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false},\r\n        {'Type': 'getEARights', 'Available': true, 'Managed': false, 'Extension': 'MyPromotionRemoteActionExtension'},\r\n        {'Type': 'invokeWF', 'Available': true, 'Managed': false, 'Extension': 'MyPromotionRemoteActionExtension'},\r\n        {'Type': 'CreatePush', 'Available': true, 'Managed': false, 'Extension': 'MyPromotionRemoteActionExtension'},\r\n        {'Type': 'cleanUpPush', 'Available': true, 'Managed': false, 'Extension': 'MyPromotionRemoteActionExtension'},\r\n        {'Type': 'finalizePush', 'Available': true, 'Managed': false, 'Extension': 'MyPromotionRemoteActionExtension'},\r\n        //PMA - START CODE - 2017-01-13 - Threshold button\r\n        {'Type': 'invokePromotionThresholdCheck', 'Available': true, 'Managed':false, 'Extension': 'MyPromotionRemoteActionExtension'},\r\n        {'Type': 'invokeAuditTrail', 'Available': true, 'Managed':false, 'Extension': 'MyPromotionRemoteActionExtension'},\r\n        //PMA - END CODE - 2017-01-13 - Threshold button\r\n        {'Type': 'UpdateEnablePush', 'Available': true, 'Managed': false, 'Extension': 'MyPromotionRemoteActionExtension'}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSPromotion;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts_cust/DSPromotion_cust.js","var DSTactic = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSTactic',\r\n    'IsExternal': false,\r\n    'SFObject': 'Tactic__c',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'write', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'create', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'delete', 'Available': false},\r\n        {'Type': 'getEARights', 'Available': true, 'Managed': false, 'Extension': 'MyPromotionRemoteActionExtension'},\r\n        {'Type': 'copy', 'Extension': 'PromotionRemoteActionExtension'}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSTactic;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts_cust/DSTactic_cust.js","var DSExtPromotionAttachment = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSExtPromotionAttachment',\r\n    'IsExternal': true,\r\n    'IsManaged': false,\r\n    'SFObject': 'Promotion_Attachment__c',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'create', 'Extension': 'PromotionRemoteActionExtension'},\r\n        {'Type': 'write', 'Available': false},\r\n        {'Type': 'delete', 'Available': false},\r\n        {'Type': 'getEARights', 'Available': false},\r\n        {'Type': 'copy', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSExtPromotionAttachment;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts_cust/DSExtPromotionAttachment.js","var LOExtPromotionAttachment = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOExtPromotionAttachment',\r\n    'SFObject': 'Promotion_Attachment__c',\r\n    'DataSource': 'DSExtPromotionAttachment',\r\n    'Properties': [] // Properties are not explitly defined in release 3\r\n};\r\n\r\nmodule.exports = LOExtPromotionAttachment;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts_cust/LOExtPromotionAttachment.js","var DSExtPromotionAttachment = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSExtPromotionAttachment',\r\n    'IsExternal': true,\r\n    'IsManaged': false,\r\n    'SFObject': 'Promotion_Attachment__c',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'MyPromotionRemoteActionExtension2', 'Managed': false},\r\n        {'Type': 'create', 'Extension': 'MyPromotionRemoteActionExtension2', 'Managed': false},\r\n        {'Type': 'write', 'Available': false},\r\n        {'Type': 'delete', 'Available': false},\r\n        {'Type': 'getEARights', 'Available': false},\r\n        {'Type': 'copy', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSExtPromotionAttachment;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts_cust/DSExtPromotionAttachment_cust.js","var DSMetaData = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSMetaData',\r\n    'APEX': [\r\n        //Define metadata remote extension here\r\n        {\r\n            'Type': 'getMetaData',\r\n            'Extension': 'MyMetaDataRemoteActionExtension',\r\n            'Managed': false,\r\n            'Compressed': false,\r\n            'Buffer': false,\r\n            'Aggregation': false,\r\n            'CheckLayout': false\r\n        },\r\n        {\r\n            'Type': 'getMetaDataList',\r\n            'Extension': 'MyMetaDataRemoteActionExtension',\r\n            'Managed': false,\r\n            'Compressed': false,\r\n            'Buffer': false\r\n        }\r\n    ]\r\n};\r\n\r\nmodule.exports = DSMetaData;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts_cust/DSMetaData_cust.js","var LOExtChildAccounts = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOExtChildAccounts',\r\n    'SFObject': 'Promotion_Acc_Rel__c',\r\n    'DataSource': 'DSExtChildAccounts',\r\n    'Properties': [] // Properties are not explitly defined in release 3    \r\n};\r\n\r\nmodule.exports = LOExtChildAccounts;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts_cust/LOExtChildAccounts.js","var LOExtTacticTiers = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOExtTacticTiers',\r\n    'SFObject': 'tactic__c',\r\n    'DataSource': 'DSExtTacticTiers',\r\n    'Properties': [] // Properties are not explitly defined in release 3\r\n};\r\n\r\nmodule.exports = LOExtTacticTiers;\n\n\n// WEBPACK FOOTER //\n// contracts_cust/LOExtTacticTiers.js","var DSExtTacticTiers = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSExtTacticTiers',\r\n    'IsExternal': true,\r\n    'SFObject': 'tactic__c',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'MyPromotionRemoteActionExtension', 'Managed': false},\r\n        {'Type': 'write', 'Extension': 'MyPromotionRemoteActionExtension', 'Managed': false},\r\n        {'Type': 'delete', 'Available': false},\r\n        {'Type': 'validate', 'Extension': 'MyPromotionRemoteActionExtension', 'Managed': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSExtTacticTiers;\n\n\n// WEBPACK FOOTER //\n// contracts_cust/DSExtTacticTiers.js","var LOFilteredFunds = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOFilteredFunds',\r\n    'SFObject': 'Fund__c',\r\n    'DataSource': 'DSFilteredFunds',\r\n    'Properties': [] // Properties are not explitly defined in release 3\r\n};\r\n\r\nmodule.exports = LOFilteredFunds;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// contracts_cust/LOFilteredFunds_cust.js","var DSFilteredFunds = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSFilteredFunds',\r\n    'IsExternal': true,\r\n    'SFObject': 'Fund__c',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'MyPromotionRemoteActionExtension','Managed': false},\r\n        {'Type': 'write', 'Available': false},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false},\r\n        {'Type': 'getEARights', 'Available': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSFilteredFunds;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts_cust/DSFilteredFunds_cust.js","var LOFund = {\r\n    'Type': 'ListObject',\r\n    'Name': 'LOFund',\r\n    'SFObject': 'Fund__c',\r\n    'DataSource': 'DSFund',\r\n    'Properties': [] // Properties are not explitly defined in release 3\r\n};\r\n\r\nmodule.exports = LOFund;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// contracts_cust/LOFund_cust.js","var DSFund = {\r\n    'Type': 'DataSource',\r\n    'Name': 'DSFund',\r\n    'IsExternal': false,\r\n    'SFObject': 'Fund__c',\r\n    'Attributes': [], // Attributes are not explictly listed in release 3\r\n    'APEX': [\r\n        {'Type': 'read', 'Extension': 'MyPromotionRemoteActionExtension','Managed': false},\r\n        {'Type': 'write', 'Extension': 'MyPromotionRemoteActionExtension'},\r\n        {'Type': 'create', 'Available': false},\r\n        {'Type': 'delete', 'Available': false},\r\n        {'Type': 'getEARights', 'Available': false},\r\n        {'Type': 'validate', 'Extension': 'MyPromotionRemoteActionExtension', 'Managed': false}\r\n    ]\r\n};\r\n\r\nmodule.exports = DSFund;\r\n\n\n\n// WEBPACK FOOTER //\n// contracts_cust/DSFund_cust.js","module.exports = {\r\n\r\n'ListObjects': [\r\n         {'Name': 'LOCalendarView'}\r\n      \r\n    ],\r\n\r\n\r\n        'Methods': [\r\n        \r\n            { 'Name': 'getPromotionPlanningPageReference', 'Replace': true },\r\n             { 'Name': 'preLoad', 'Replace': true },\r\n            { 'Name': 'serializeCalendar', 'Replace': true },\r\n            { 'Name': 'refreshCalendarView', 'Replace': true },\r\n            { 'Name': 'updateCalendarView', 'Replace': true }\r\n       \r\n\r\n    ]\r\n};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// contracts_cust/BOExtPromotionCalendar_cust.js","var ExtPromotionCalendar_Cust = {\r\n    /**\r\n     * Customize extension to the core preLoad function. Will be called at the end of the core method.\r\n     * Input parameter is a list of promises of LOs which should be loaded. Can be extended or manipulated in this place.\r\n     * @param {promise[]} instantiatePromises - Array of promises created by load actions done in core.\r\n     * @returns {promise[]} Array of promises adapted in customizing\r\n     */\r\n    preLoad: function (instantiatePromises) {\r\n        return instantiatePromises;\r\n    },\r\n    /**\r\n     * Customize extension to the core postLoad function. Will be called at the end of the core method.\r\n     * Input parameter is a list of promises of LOs which should be loaded. Can be extended or manipulated in this place.\r\n     * @param {promise[]} instantiatePromises - Array of promises created by load actions done in core.\r\n     * @returns {promise[]} Array of promises adapted in customizing\r\n     */\r\n    postLoad: function (instantiatePromises) {\r\n        return instantiatePromises;\r\n    },\r\n    /**\r\n     * Customize extension to the core serializeToUI function. Will be called at the end of the core method.\r\n     * Input parameter is the already serialized BO as core would send it to the UI layer.\r\n     * The project can manipulate the JSON to match its requirements. The reponse should again be a promotion state JSON.\r\n     * @param {JSON} serializedObject - Serialized version of the BO to be used as parameter for the UI layer\r\n     * @returns {JSON} Serialized version of the BO adpated for project requirements\r\n     */\r\n    serializeToUI: function(serializedObject) {\r\n        return serializedObject;\r\n    },\r\n    /**\r\n     * Customize extension to the core addPromotion function. Will be called before the APEX request is sent.\r\n     * Input parameter is the already serialized BO as core would send it to the UI layer.\r\n     * The project can manipulate the JSON to match its requirements. The reponse should again be a promotion JSON.\r\n     * @param {JSON} serializedObject - Serialized version of the BO to be used as parameter for the UI layer\r\n     * @returns {JSON} Serialized version of the BO adpated for project requirements     \r\n     */\r\n    addPromotion_beforeAPEX: function(serializedObject) {\r\n        return serializedObject;\r\n    },\r\n    /**\r\n     * Customize extension to the core addPromotion function. Will be called after the APEX call for the new promotion has returned.\r\n     * Input parameter is the data as received from the APEX method. This means an empty promotion JSON in that case\r\n     * The project can make adaptions to the data or execute additional action. The reponse should again be the empty tactic JSON.\r\n     * @param {JSON} payload - Data received from the createLOCalPromotions APEX method\r\n     * @returns {JSON} Data received from the createLOCalPromotions APEX method\r\n     */\r\n    addPromotion_afterAPEX: function(payload) {\r\n        return payload;\r\n    },\r\n    /**\r\n     * Customize extension to the core onDispatcher function. Will be called if an UI event is not found in core code.\r\n     * @param {JSON} action - Payload as provided by the UI event bus\r\n     */\r\n    onDispatcher: function(action) {\r\n        switch (action.actionType) {\r\n            /*\r\n            case PromCalendarActionConstants.MYACTION:\r\n                // Do something here\r\n                break;\r\n            */\r\n            default:\r\n                console.log('Unknown action type ${action.actionType} detected. Cannot call appropriate action.');\r\n                break;\r\n        }\r\n    },\r\n    /**\r\n     * Replace of getPromotionPlanningPageReference to point to the custom promotion planning page. \r\n     */\r\n    getPromotionPlanningPageReference: function () {\r\n        return 'MyPromotionPlanning';\r\n    },\r\n    \r\n    /**\r\n     * Replaced preLoad to support migration to R4\r\n     * Load all data which must be available before the UI is rendered. \r\n     * The promises as returned by this function are handled in a synchronous way. Only once all of them are resolved the system continues.\r\n     * Customization points:\r\n     *  - Before the array of promises is returned. The project can use that to add additonal LOs\r\n     * @returns {Promise[]} Array of promises created by asynchronous load of data\r\n     */\r\n    preLoad: function () {\r\n        var me = this;\r\n        var instantiatePromises = []; // when.defer();\r\n        var loadParams = { 'readAll': true };\r\n\r\n        this.modalMessages = [];\r\n\r\n        instantiatePromises.push(this.LOTactic_Template.load(null, loadParams));\r\n        instantiatePromises.push(this.LOPromotion_Template.load(null, loadParams));\r\n        instantiatePromises.push(this.LOAccount.load(null, loadParams));\r\n        instantiatePromises.push(this.LOExtPrdFilters.load());\r\n        instantiatePromises.push(this.LOCalendarView.load());\r\n\r\n\r\n        var fiscalYearLoadParams = {\"Reference_Date\": new Date().getTime()};\r\n\r\n        instantiatePromises.push(this.LOExtFiscalYear.load(null, fiscalYearLoadParams));\r\n\r\n      return instantiatePromises;\r\n    },\r\n    /**\r\n     * Replaced refreshCalendarView to support migration to R4\r\n     */\r\n    refreshCalendarView: function () {\r\n        var me = this;\r\n       // var calendarView = this.LOCalendarView.getItems()[0];\r\n       var calendarView = _.find(this.LOCalendarView.getAllItems(), 'IsDefault');\r\n       if (calendarView != null) {\r\n\r\n\r\n           var loadParams = { \"Date_From\": this.initDate.getTime(), \"Date_Thru\": this.endDate.getTime() };\r\n           loadParams.CalendarView = (calendarView != null) ? calendarView.serialize() : '';\r\n           this.LOCalPromotions.removeAllItems();\r\n\r\n           this.LOCalPromotions.load(null, loadParams).then(x => {\r\n               this.refreshCalLegend();\r\n               this.serializeCalendar();\r\n           });\r\n       }\r\n       else\r\n        this.serializeCalendar();\r\n    },\r\n    /**\r\n     * Replaced updateCalendarView to support migration to R4\r\n     */\r\n updateCalendarView: function (uiView) {\r\n        var me = this;\r\n        //var calendarView = this.LOCalendarView.getItems()[0];\r\n        var calendarView = _.find(this.LOCalendarView.getAllItems(), 'IsDefault');\r\n        if (!calendarView){\r\n            //There is no calendar view so we have to create an empty one\r\n            var LICalendarView={\r\n                    'Id': '',\r\n                    'Name': 'Default View',\r\n                    'Description': 'Default View',\r\n                    'IsDefault': true,\r\n                    'FilterCriteria': {\r\n                        \"accountfilter\": {\r\n                            \"criteria\": {\r\n                                \"account_id__c\": []\r\n                            }\r\n                        },\r\n                        \"promotionfilter\": {\r\n                            \"criteria\": {\r\n                                \"promotion_template__c\": [],\r\n                                \"tactic_template__c\": [],\r\n\r\n                            }\r\n                        },\r\n                        \"productfilter\": {\r\n                            \"criteria\": {\r\n                                \"category__c\": []\r\n                            }\r\n                        }\r\n\r\n                    }\r\n            };\r\n\r\n            this.LOCalendarView.addItem(LICalendarView);\r\n            calendarView = _.find(this.LOCalendarView.getAllItems(), 'IsDefault');\r\n\r\n        }\r\n\r\n        calendarView.objectStatus |= STATE.DIRTY;\r\n        var filterCriteria = calendarView.FilterCriteria;\r\n        if (uiView!=null){ //If it is null we maintain an empty initial view (user clicked the Continue Anyways button)\r\n             Object.keys(filterCriteria).forEach(c => {\r\n            var uiCriteria = uiView[c];\r\n            var viewCriteria = filterCriteria[c].criteria;\r\n            uiCriteria.forEach(field => {\r\n                viewCriteria[field.fieldId] = _.filter(field.values, {Selected: true}).reduce((r, v)=> {\r\n                    r.push(v.Id);\r\n                    return r;\r\n                }, []);\r\n            });\r\n        });\r\n        }\r\n       \r\n    \r\n        this.refreshCalendarView();\r\n        this.LOCalendarView.apex_write(calendarView.Id, JSON.stringify(calendarView.serialize())).then(result => {\r\n            if (result.__Status) {\r\n                var viewId = result.data.Id;\r\n                var calendarView = _.find(this.LOCalendarView.getAllItems(), 'IsDefault');\r\n                calendarView.Id = viewId;\r\n            }\r\n\r\n        });\r\n    },\r\n     /**\r\n     * Replaced serializeCalendar function to support migration to R4\r\n     * Serialize the BO content into a JSON object and send it through the event bus to the UI.\r\n     * The UI will then refresh the components depending on this data.\r\n     * Customization points:\r\n     *  - before the UI is refreshed, the serialized object can be adapted\r\n     */\r\n    serializeCalendar: function () {\r\n        var me = this;\r\n        var calendarView = _.find(this.LOCalendarView.getAllItems(), 'IsDefault');\r\n\r\n        var serialzeProductFilter = function (fieldId) {\r\n            return {\r\n                fieldId: fieldId,\r\n                label: _.find(me.LOExtPrdFilters.getAllItems(), {filterId: fieldId}).filterLabel,\r\n                values: _.filter(me.LOExtPrdFilters.getAllItems(), {filterId: fieldId}).reduce((result, item) => {\r\n                    result.push({\r\n                        Label: item.filterValueLabel,\r\n                        Id: item.filterValueId,\r\n                        Selected: (calendarView!=null && calendarView.FilterCriteria.productfilter.criteria[fieldId] &&\r\n                        calendarView.FilterCriteria.productfilter.criteria[fieldId].indexOf(item.filterValueId) != -1)\r\n                    });\r\n                    return result;\r\n                }, [])\r\n            }\r\n        };\r\n\r\n        var calendar = {\r\n            initDate: this.initDate,\r\n            endDate: this.endDate,\r\n            showInitialSettings: (calendarView == null),\r\n            isFilterSet: true,//TODO\r\n            FilterCriteria: {\r\n                accountfilter: [\r\n                    {\r\n                        fieldId: 'account_id__c',\r\n                        label: AppManager.getLabel(\"PC_LBL_CUSTOMER_NAME\") || 'Customer name',\r\n                        values: this.LOAccount.getAllItems().reduce((result, acc) => {\r\n                            result.push({\r\n                                Label: acc.Name,\r\n                                Id: acc.Id,\r\n                                Selected: (calendarView!=null && calendarView.FilterCriteria.accountfilter.criteria.account_id__c.indexOf(acc.Id) != -1)\r\n                            });\r\n                            return result;\r\n                        }, [])\r\n                    }\r\n                ],\r\n                promotionfilter: [\r\n                    {\r\n                        fieldId: 'promotion_template__c',\r\n                        label: AppManager.getLabel(\"PC_LBL_PROMOTION_TYPE\") || 'Promotion type',\r\n                        values: this.LOPromotion_Template.getAllItems().reduce((result, promo) => {\r\n                            result.push({\r\n                                Label: promo.Description__c,\r\n                                Id: promo.Id,\r\n                                Selected: (calendarView!=null && calendarView.FilterCriteria.promotionfilter.criteria.promotion_template__c.indexOf(promo.Id) != -1)\r\n                            });\r\n                            return result;\r\n                        }, [])\r\n                    },\r\n                    {\r\n                        fieldId: 'tactic_template__c',\r\n                        label: AppManager.getLabel(\"PC_LBL_TACTIC_TYPE\") || 'Tactic type',\r\n                        values: this.LOTactic_Template.getAllItems().reduce((result, tactic) => {\r\n                            result.push({\r\n                                Label: tactic.Description__c,\r\n                                Id: tactic.Id,\r\n                                Selected: (calendarView!=null && calendarView.FilterCriteria.promotionfilter.criteria.tactic_template__c.indexOf(tactic.Id) != -1)\r\n                            });\r\n                            return result;\r\n                        }, [])\r\n                    }\r\n                ],\r\n                productfilter: []\r\n            },\r\n\r\n            accounts: this.LOAccount.getAllItems().reduce((result, acc) => {\r\n                result.push({\r\n                    Label: acc.Name,\r\n                    Id: acc.Id\r\n                });\r\n                return result;\r\n            }, []),\r\n\r\n            accountSet: this.LOAccountSet.getAllItems().reduce((result, acc) => {\r\n                result.push({\r\n                    Label: acc.Description__c,\r\n                    Id: acc.Id\r\n                });\r\n                return result;\r\n            }, []),\r\n\r\n            promotion_templates: this.LOPromotion_Template.getAllItems().reduce((result, promo) => {\r\n                result.push({\r\n                    Label: promo.Description__c,\r\n                    Id: promo.Id,\r\n                    Anchor_Type: promo.Anchor_Type__c\r\n                });\r\n                return result;\r\n            }, []),\r\n            \r\n             active_promotion_templates: this.LOPromotion_Template.getItems().reduce((result, promo) => {\r\n                result.push({\r\n                    Label: promo.Description__c,\r\n                    Id: promo.Id,\r\n                    Anchor_Type: promo.Anchor_Type__c\r\n                });\r\n                return result;\r\n            }, []),\r\n\r\n            legend: this.LOExtCalLegend.getAllItems().reduce((result, legend) => {\r\n                result.push({Name: legend.Name, Commit_Color: legend.Commit_Color});\r\n                return result;\r\n            }, []),\r\n\r\n            periods: this.LOExtFiscalYear.getAllItems()[0].Periods,// TODO\r\n\r\n            promotions: this.LOCalPromotions.getAllItems().reduce((result, promo) => {\r\n                result.push(\r\n                    {\r\n                        'slogan': promo.Slogan,\r\n                        'Account_Name': promo.Account_Name || promo.Account_Set_Description ,\r\n                        'Commit_Color': promo.Commit_Color,\r\n                        'Promotion_Template_Id': promo.Promotion_Template,\r\n                        'dates': promo.Promotions.reduce((r, v)=> {\r\n                            r.push({\r\n                                'Id': v.Id,\r\n                                'from': new Date(v.Date_From),\r\n                                'to': new Date(v.Date_Thru),\r\n                                'phase': v.Phase,\r\n                                'isReady': (v.Phase == 'Committed')\r\n                            });\r\n\r\n                            return r;\r\n                        }, [])\r\n                    });\r\n                return result;\r\n            }, [])\r\n        };\r\n\r\n        calendar.FilterCriteria.productfilter.push(serialzeProductFilter('category__c'));\r\n\r\n        calendar.isFilterSet = _.some(calendar.FilterCriteria.accountfilter[0].values, { Selected: true }) ||\r\n            _.some(calendar.FilterCriteria.promotionfilter[0].values, { Selected: true }) ||\r\n            _.some(calendar.FilterCriteria.promotionfilter[0].values, { Selected: true }) ||\r\n            _.some(calendar.FilterCriteria.productfilter[0].values, { Selected: true });\r\n\r\n       \r\n\r\n        UI_EVENT_BUS.put(EVENTS.UI_BINDING, { calendar: calendar });\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = ExtPromotionCalendar_Cust;\n\n\n// WEBPACK FOOTER //\n// baseClasses/ExtPromotionCalendar_Cust.js","var Promotion_Cust = {\r\n    /**\r\n     * Customize extension to the core preLoad function. Will be called at the end of the core method.\r\n     * Input parameter is a list of promises of LOs which should be loaded. Can be extended or manipulated in this place.\r\n     * @param {promise[]} instantiatePromises - Array of promises created by load actions done in core.\r\n     * @returns {promise[]} Array of promises adapted in customizing\r\n     */\r\n    preLoad: function (instantiatePromises) {\r\n        this.uploads = {};\r\n        this.modalMessages = [];\r\n\r\n        return instantiatePromises;\r\n    },\r\n    /**\r\n     * Customize extension to the core postLoad function. Will be called at the end of the core method.\r\n     * Input parameter is a list of promises of LOs which should be loaded. Can be extended or manipulated in this place.\r\n     * @param {promise[]} instantiatePromises - Array of promises created by load actions done in core.\r\n     * @returns {promise[]} Array of promises adapted in customizing\r\n     */\r\n    postLoad: function (instantiatePromises) {\r\n        var promoObject = this.serializePromotion();\r\n        for (let key of Object.keys(promoObject.BOPromotion)) if (key.match(/Promotion_ID__c$/)) delete promoObject.BOPromotion[key];\r\n        for (let tactic of promoObject.BOPromotion.LOTactic) for (let key of Object.keys(tactic)) if (key.match(/Record_Link__c$/)) delete tactic[key];\r\n\r\n        this.LOExtChildAccounts.apex_read(JSON.stringify(\r\n            AppManager.addACSFNamespace(promoObject)\r\n        )).then(children => {\r\n            this.LOExtChildAccounts.removeAllItems();\r\n            this.LOExtChildAccounts.addItems(children.data || []);\r\n            this.changeHandler();\r\n        });\r\n\r\n        this.LOExtPromotionAttachment.apex_read(this.getId())\r\n            .then(attachments => {\r\n                this.LOExtPromotionAttachment.addItems(\r\n                    attachments.data.map(att => {\r\n                        var attachment = att.PromotionAttachment;\r\n                        attachment.previewUrl = att.previewUrl;\r\n                        attachment.attachmentUrl = att.attachmentUrl;\r\n                        attachment.Type__c = attachment.Type__c || 'application/octet-stream';\r\n                        return attachment;\r\n                    })\r\n                );\r\n                this.changeHandler();\r\n            });\r\n\r\n        this.LOExtTacticTiers.load().then(() => this.changeHandler());\r\n\r\n        this.LOFilteredFunds.load().then(() => this.changeHandler());\r\n\r\n        return instantiatePromises;\r\n    },\r\n    /**\r\n     * Customize extension to the core serializeToAPEX function. Will be called at the end of the core method.\r\n     * Input parameter is the already serialized BO as core would send it to the APEX layer.\r\n     * The project and manipulate the JSON to match its requirements. The reponse should again be a promotion JSON.\r\n     * @param {JSON} serializedObject - Serialized version of the BO to be used as parameter for the APEX layer\r\n     * @returns {JSON} Serialized version of the BO adpated for project requirements\r\n     */\r\n    serializeToAPEX: function (serializedObject) {\r\n        /**\r\n         * Don't use below code. Once the metadata for ExtChildAccount is available, below can be replaced by only\r\n         * serializedObject.LOExtChildAccounts = SerializationHelper.serializeWithStatus(this.LOExtChildAccounts);\r\n         */\r\n        serializedObject.LOExtChildAccounts = this.LOExtChildAccounts.getAllItems();\r\n        if (serializedObject.LOExtChildAccounts)\r\n            serializedObject.LOExtChildAccounts = serializedObject.LOExtChildAccounts.map(account => {\r\n                account.__ObjectStatus = account.getObjectStatus();\r\n                return _.pick(account, ['ChildAccountID', 'ChildAccountName', 'Included', 'CustomerUnique', 'PushedPromoID', 'PromotionSlogan', '__ObjectStatus']);\r\n            });\r\n\r\n        serializedObject.LOExtTacticTiers = this.LOExtTacticTiers.getAllItems();\r\n        if (serializedObject.LOExtTacticTiers)\r\n            serializedObject.LOExtTacticTiers = serializedObject.LOExtTacticTiers.map(tacticTiers => {\r\n                return {\r\n                    tacticId: tacticTiers.tacticId,\r\n                    JSONTier: JSON.parse(tacticTiers.JSONTier || '[]'),\r\n                    __ObjectStatus: tacticTiers.getObjectStatus()\r\n                };\r\n            });\r\n\r\n        return serializedObject;\r\n    },\r\n    /**\r\n     * Customize extension to the core serializeToUI function. Will be called at the end of the core method.\r\n     * Input parameter is the already serialized BO as core would send it to the UI layer.\r\n     * The project and manipulate the JSON to match its requirements. The reponse should again be a promotion state JSON.\r\n     * @param {JSON} serializedObject - Serialized version of the BO to be used as parameter for the UI layer\r\n     * @returns {JSON} Serialized version of the BO adpated for project requirements\r\n     */\r\n    serializeToUI: function (serializedObject) {\r\n        var promotionJSON = {\r\n            //Soco\r\n            UL_Lift__c: this.getUL_Lift__c(),\r\n            UL_Front_Margin__c: this.getUL_Front_Margin__c(),\r\n            UL_IIBB_Tax__c: this.getUL_IIBB_Tax__c(),\r\n            UL_Volume_Type__c: this.getUL_Volume_Type__c(),\r\n            UL_Current_Status__c: this.getUL_Current_Status__c(),\r\n            UL_Free_Text__c: this.getUL_Free_Text__c(),\r\n            loadPhase: this.loadPhase,\r\n            //PMA - START CODE - 2017-01-12 - New custom field\r\n            UL_Cannibalisation_Rate__c: this.getUL_Cannibalisation_Rate__c(),\r\n            UL_Market__c: this.getUL_Market__c(),\r\n            //PMA - END CODE - 2017-01-12 - New custom field\r\n            //uki\r\n            UL_Delivery_Profile__c: this.getUL_Delivery_Profile__c(),\r\n            UL_Mechanic__c: this.getUL_Mechanic__c(),\r\n            UL_Sub_Mechanic__c: this.getUL_Sub_Mechanic__c(),\r\n            UL_Pre_Evaluation_Comment__c: this.getUL_Pre_Evaluation_Comment__c(),\r\n            UL_Primary_Objective__c: this.getUL_Primary_Objective__c(),\r\n            UL_Secondary_Objective__c: this.getUL_Secondary_Objective__c(),\r\n            UL_Promotion_Type__c: this.getUL_Promotion_Type__c(),\r\n            UL_Feature__c: this.getUL_Feature__c(),\r\n            UL_Category__c: this.getUL_Category__c(),\r\n            UL_Brand__c: this.getUL_Brand__c(),\r\n            UL_Cannibalisation_Override__c: this.getUL_Cannibalisation_Override__c(),\r\n            UL_Post_Dip_End_Date__c: this.getUL_Post_Dip_End_Date__c(),\r\n            UL_Account__c: this.getUL_Account__c(),\r\n        };\r\n        //Adding child accounts\r\n        //WARNING: Remove get all items below and use the serialize method once the metadata for ExtChildAccount is implemented.\r\n        promotionJSON.ChildAccounts = this.LOExtChildAccounts.getAllItems();\r\n        promotionJSON.attachments = this.LOExtPromotionAttachment.getItems();\r\n        Object.assign(serializedObject, promotionJSON);\r\n\r\n        return serializedObject;\r\n    },\r\n    /**\r\n     * Customize extension to the core serializeSelectedTacticToUI function. Will be called at the end of the core method.\r\n     * Input parameter is the already serialized BO as core would send it to the UI layer.\r\n     * The project and manipulate the JSON to match its requirements. The response should again be a promotion state JSON.\r\n     * @param {JSON} serializedObject - Serialized version of the BO to be used as parameter for the UI layer\r\n     * @returns {JSON} Serialized version of the BO adapted for project requirements\r\n     */\r\n    serializeSelectedTacticToUI: function (serializedObject) {\r\n        var tactic = this.LOTactic.getItems()[0];\r\n        var tacticJSON = {\r\n            UL_Off_On_Invoice__c: tactic.getUL_Off_On_Invoice__c(),\r\n            UL_Take_Up_Rate__c: tactic.getUL_Take_Up_Rate__c(),\r\n            UL_Order_Date_From__c: tactic.getUL_Order_Date_From__c(),\r\n            UL_Order_Date_Thru__c: tactic.getUL_Order_Date_Thru__c(),\r\n            UL_Payment_Method__c: tactic.getUL_Payment_Method__c(),\r\n            UL_Condition_Type__c: tactic.getUL_Condition_Type__c(),\r\n            UL_Investment_Method__c: tactic.getUL_Investment_Method__c(),\r\n            UL_Redemption__c: tactic.getUL_Redemption__c(),\r\n            RecordTypeId: tactic.getRecordTypeId(),\r\n            InvalidTacticTiers: tactic.InvalidTacticTiers || false,\r\n            InvalidFunds: tactic.InvalidFunds || false\r\n        };\r\n        var currentTacticTiers = _.find(this.LOExtTacticTiers.getAllItems(), (tacticTiers) => {\r\n            return tacticTiers.tacticId == tactic.Id;\r\n        });\r\n        tacticJSON.TacticTiers = currentTacticTiers ? JSON.parse(currentTacticTiers.JSONTier || '[]') : [];\r\n\r\n        tacticJSON.availableFunds = [];\r\n        tacticJSON.availableFunds = _.unionBy(this.LOFund.getAllItems().filter(\r\n            fund => !!_.find(fund.Tactics, item => item.tacticId == tactic.Id)\r\n        ).map(\r\n            fund => Object.assign(fund, _.find(fund.Tactics, item => item.tacticId == tactic.Id))\r\n        ), this.LOFilteredFunds.getItems(), 'Id');\r\n\r\n        Object.assign(serializedObject, tacticJSON);\r\n\r\n        return serializedObject;\r\n    },\r\n    /**\r\n     *\r\n     */\r\n    addTactic_beforeAPEX: function (payload) {\r\n        return payload;\r\n    },\r\n    /**\r\n     *\r\n     */\r\n    addTactic_afterAPEX: function (payload) {\r\n        return payload;\r\n    },\r\n    /**\r\n     *\r\n     */\r\n    addTactic_post: function () {\r\n        //PMA - START CODE - 2017-01-17 - Copy Lift from Promotion to Tactic\r\n        this.LOTactic.current.Lift__c = this.UL_Lift__c\r\n        //PMA - END CODE - 2017-01-17 - Copy Lift from Promotion to Tactic\r\n        return null;\r\n    },\r\n    /**\r\n     * Customize extension to the core onDispatcher function. Will be called if an UI event is not found in core code.\r\n     * @param {JSON} payload - Payload as provided by the UI event bus\r\n     */\r\n    onDispatcher: function (action) {\r\n        switch (action.actionType) {\r\n\r\n            case PromotionActionConstants.PUSH_CHILD_ACCOUNT: {\r\n                let promoContent = this.serializePromotion(),\r\n                    totalChildAccounts = _.filter(promoContent.BOPromotion.LOExtChildAccounts, function (childAccount) {\r\n                        return childAccount.Included;\r\n                    }).length,\r\n                    {uploadId} = action.payload,\r\n                    cancelled = false,\r\n                    i = 0;\r\n\r\n                this.uploads[uploadId] = () => {\r\n                    cancelled = true;\r\n                    UI_EVENT_BUS.put(uploadId, {\r\n                        total: totalChildAccounts,\r\n                        done: totalChildAccounts\r\n                    });\r\n                    delete this.uploads[uploadId];\r\n                };\r\n\r\n                let push = () => {\r\n                    UI_EVENT_BUS.put(uploadId, {\r\n                        total: totalChildAccounts,\r\n                        done: i\r\n                    });\r\n\r\n                    if (i < totalChildAccounts) {\r\n                        let temp = promoContent.BOPromotion.LOExtChildAccounts;\r\n                        promoContent.BOPromotion.LOExtChildAccounts = [promoContent.BOPromotion.LOExtChildAccounts[i]];\r\n                        let json = JSON.stringify(promoContent);\r\n                        promoContent.BOPromotion.LOExtChildAccounts = temp;\r\n\r\n                        this.apex_CreatePush(json).then((result) => {\r\n                            if (result) {\r\n                                if (cancelled) return;\r\n                                i++;\r\n                                push();\r\n                            } else {\r\n                                let showError = () => UI_EVENT_BUS.put(EVENTS.UI_ERROR, {\r\n                                    title: AppManager.getLabel('PP_TIT_PUSH_ERROR') || 'Error pushing child promotion',\r\n                                    message: AppManager.getLabel('PP_LBL_PUSH_ERROR') || 'An error occurred while trying to push the child promotion account',\r\n                                    type: 'E'\r\n                                });\r\n                                showError();\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n\r\n                this.apex_cleanUpPush(JSON.stringify(promoContent)).then((result) => {\r\n                    if (result) {\r\n                        push();\r\n                    } else {\r\n                        let showError = () => UI_EVENT_BUS.put(EVENTS.UI_ERROR, {\r\n                            title: AppManager.getLabel('PP_TIT_CLEAN_PUSH_ERROR') || 'Error cleaning child promotions',\r\n                            message: AppManager.getLabel('PP_LBL_CLEAN_PUSH_ERROR') || 'An error occurred while trying to clean the child promotions account',\r\n                            type: 'E'\r\n                        });\r\n                        showError();\r\n                    }\r\n                });\r\n\r\n                //this.refreshPromotion();\r\n                break;\r\n            }\r\n\r\n            case PromotionActionConstants.FINALIZE_PUSH_CHILD_ACCOUNTS: {\r\n                let promoContent = this.serializePromotion();\r\n                this.apex_finalizePush(JSON.stringify(promoContent));\r\n                console.log('FINALIZE_PUSH for promotion : ' + action.payload);\r\n                break;\r\n            }\r\n\r\n            case PromotionActionConstants.TOGGLE_CHILD_ACCOUNT : {\r\n                console.log(\"PERFORMED ACTION Toggle Child Account for ID:\" + action.payload.ChildAccountID);\r\n                _.forEach(this.LOExtChildAccounts.getAllItems(), function (childAccount) {\r\n                    if (childAccount.ChildAccountID == action.payload.ChildAccountID)\r\n                        childAccount.Included = !action.payload.Included;\r\n                });\r\n                UI_EVENT_BUS.put(EVENTS.UI_BINDING, {promotion: this.serializeTree()});\r\n                break;\r\n            }\r\n\r\n            case PromotionActionConstants.TOGGLE_ALL_CHILD_ACCOUNTS : {\r\n                console.log(\"PERFORMED ACTION Toggle All Child Accounts for Promotion ID:\" + this.Id);\r\n                _.forEach(this.LOExtChildAccounts.getAllItems(), function (childAccount) {\r\n                    childAccount.Included = !action.payload.Included;\r\n                });\r\n                UI_EVENT_BUS.put(EVENTS.UI_BINDING, {promotion: this.serializeTree()});\r\n                break;\r\n            }\r\n\r\n            case PromotionActionConstants.OPEN_PROMOTION: {\r\n                var path = (location.hostname == 'localhost') ? 'index.html' : 'MyPromotionPlanning';\r\n                console.log('OPEN_PROMOTION for promotion : ' + action.payload);\r\n                window.open(path + '?id=' + action.payload);\r\n                break;\r\n            }\r\n\r\n            /** Pull Forward attachment */\r\n            case PromotionActionConstants.CANCEL_UPLOAD:\r\n                let {uploadId} = action.payload;\r\n                if (this.uploads[uploadId]) this.uploads[uploadId]();\r\n                break;\r\n\r\n            case PromotionActionConstants.UPLOAD_ATTACHMENT: {\r\n                var me = this;\r\n                let {attachment, uploadId} = action.payload,\r\n                    promotionAttachment;\r\n\r\n                let showError = () => this.onUIError({\r\n                    title: AppManager.getLabel('PP_TIT_UPLOAD_ERROR') || 'Error uploading',\r\n                    message: AppManager.getLabel('PP_LBL_UPLOAD_ERROR') || 'An error occurred while trying to upload the file',\r\n                    type: 'E'\r\n                });\r\n\r\n                this.LOExtPromotionAttachment.apex_create(JSON.stringify(\r\n                    _.omit(attachment, ['file', 'previewUrl', 'attachmentUrl', 'LastModifiedDate', 'CreatedDate'])\r\n                )).then(att => {\r\n\r\n                    if (!att.__Status) throw new Error();\r\n                    promotionAttachment = att.data;\r\n\r\n                    return Utils.getThumbnail({\r\n                        file: attachment.file,\r\n                        width: 280,\r\n                        height: 210\r\n                    });\r\n\r\n                }).then(\r\n                    dataURI => [attachment.file, {\r\n                        name: attachment.file.name,\r\n                        description: '#Preview#',\r\n                        data: dataURI\r\n                    }],\r\n                    error => {\r\n                        if (promotionAttachment) return [attachment.file];\r\n                        throw error;\r\n                    }\r\n                ).then(files =>\r\n                    Attachment.upload(files, promotionAttachment.Id, progress => {\r\n                        UI_EVENT_BUS.put(uploadId, Math.min(progress, 1 - 1e-7));\r\n                    }, cancel => this.uploads[uploadId] = cancel)\r\n                ).then(\r\n                    result => {\r\n                        delete this.uploads[uploadId];\r\n                        UI_EVENT_BUS.put(uploadId, 1);\r\n                        if (!result.length) return;\r\n                        if (result[0].getBoolean(\"success\") && (!result[1] || result[1].getBoolean(\"success\"))) {\r\n\r\n                            promotionAttachment.objectStatus = STATE.NEW;\r\n                            promotionAttachment.attachmentUrl = '/servlet/servlet.FileDownload?file=' + result[0].get('id');\r\n                            if (result[1]) {\r\n                                promotionAttachment.previewUrl = '/servlet/servlet.FileDownload?file=' + result[1].get('id');\r\n                            }\r\n\r\n                            me.LOExtPromotionAttachment.addItem(promotionAttachment);\r\n                            this.changeHandler();\r\n                        } else {\r\n                            showError();\r\n                        }\r\n                    },\r\n                    error => {\r\n                        delete this.uploads[uploadId];\r\n                        UI_EVENT_BUS.put(uploadId, 1);\r\n                        showError();\r\n                    }\r\n                );\r\n                break;\r\n            }\r\n\r\n            case PromotionActionConstants.ATTACHMENT_DELETE: {\r\n                let attachmentId = action.payload,\r\n                    attachment = _.find(me.LOExtPromotionAttachment.getAllItems(), {Id: attachmentId});\r\n\r\n                attachment.setObjectStatus(STATE.DELETED);\r\n                this.changeHandler();\r\n                break;\r\n            }\r\n\r\n            case PromotionActionConstants.CHANGE_WF_STATE: {\r\n                var saveObject = this.serializePromotion();\r\n                saveObject.target=\"Salesforce\";\r\n                this.apex_invokeWF(this.getId(), action.payload.wfstate, JSON.stringify(saveObject)).then(result => {\r\n                    if (result.__Status) {\r\n                        this.refreshPromotion();\r\n                        console.log('wfstate changed');\r\n                    }\r\n                });\r\n                break;\r\n            }\r\n\r\n            //PMA - START CODE - 2017-01-12 - Copy date from Promotion to Tactic\r\n            case PromotionActionConstants.COPY_PROMOTION_DATEFROM_TO_TACTICS: {\r\n                this.LOTactic.getAllItems().map(tactic => {\r\n                    if (tactic.getObjectStatus() !== STATE.DELETED)\r\n                        tactic.setDate_From__c(action.payload.date);\r\n                });\r\n                this.changeHandler();\r\n                break;\r\n            }\r\n\r\n            case PromotionActionConstants.COPY_PROMOTION_DATETHRU_TO_TACTICS: {\r\n                this.LOTactic.getAllItems().map(tactic => {\r\n                    if (tactic.getObjectStatus() !== STATE.DELETED)\r\n                        tactic.setDate_Thru__c(action.payload.date);\r\n                });\r\n                this.changeHandler();\r\n                break;\r\n            }\r\n\r\n            case PromotionActionConstants.COPY_PROMOTION_SHIPMENTDATEFROM_TO_TACTICS: {\r\n                this.LOTactic.getAllItems().map(tactic => {\r\n                    if (tactic.getObjectStatus() !== STATE.DELETED)\r\n                        tactic.setShipment_Date_From__c(action.payload.date);\r\n                });\r\n                this.changeHandler();\r\n                break;\r\n            }\r\n\r\n            case PromotionActionConstants.COPY_PROMOTION_SHIPMENTDATETHRU_TO_TACTICS: {\r\n                this.LOTactic.getAllItems().map(tactic => {\r\n                    if (tactic.getObjectStatus() !== STATE.DELETED)\r\n                        tactic.setShipment_Date_Thru__c(action.payload.date);\r\n                });\r\n                this.changeHandler();\r\n                break;\r\n            }\r\n\r\n            case PromotionActionConstants.COPY_PROMOTION_INSTOREDATEFROM_TO_TACTICS: {\r\n                this.LOTactic.getAllItems().map(tactic => {\r\n                    if (tactic.getObjectStatus() !== STATE.DELETED)\r\n                        tactic.setInstore_Date_From__c(action.payload.date);\r\n                });\r\n                this.changeHandler();\r\n                break;\r\n            }\r\n\r\n            case PromotionActionConstants.COPY_PROMOTION_INSTOREDATETHRU_TO_TACTICS: {\r\n                this.LOTactic.getAllItems().map(tactic => {\r\n                    if (tactic.getObjectStatus() !== STATE.DELETED)\r\n                        tactic.setInstore_Date_Thru__c(action.payload.date);\r\n                });\r\n                this.changeHandler();\r\n                break;\r\n            }\r\n            //PMA - START CODE - 2017-01-12 - Copy date from Promotion to Tactic\r\n\r\n            //PMA - START CODE - 2017-01-17 - Copy Lift from Promotion to Tactic\r\n            case PromotionActionConstants.COPY_PROMOTION_LIFT_TO_TACTICS: {\r\n                this.LOTactic.getAllItems().map(tactic => {\r\n                    if (tactic.getObjectStatus() !== STATE.DELETED)\r\n                        tactic.setLift__c(action.payload.lift);\r\n                });\r\n                this.changeHandler();\r\n                break;\r\n            }\r\n            //PMA - END CODE - 2017-01-17 - Copy Lift from Promotion to Tactic\r\n\r\n            //PMA - START CODE - 2017-01-13 - Threshold button\r\n            case  PromotionActionConstants.BTN_INVOKETHRESHOLD: {\r\n                console.log('action.payload', action.payload);\r\n                var me = this;\r\n                this.apex_invokePromotionThresholdCheck(this.getId()).then(result => {\r\n                    if (result.__Status) {\r\n                        console.log('BTN_INVOKETHRESHOLD : OK' + result.data);\r\n                        var prmobj = action.payload.prmobj;\r\n                        var message = {\r\n                            title: 'Threshold Check Result',\r\n                            message: (result.data != '') ? '' : 'No thresholds',\r\n                            messagejson: (result.data != '') ? result.data : '',\r\n                            cancelHandler: function () {\r\n                                prmobj.setState({message: null});\r\n                            }\r\n                        };\r\n                        prmobj.setState({message: message});\r\n                    }\r\n                });\r\n                /* Code for local testing\r\n                 var prmobj = action.payload.prmobj;\r\n                 var message = {\r\n                 title: 'Threshold Check Result',\r\n                 message: 'No thresholds',\r\n                 messagejson: '',\r\n                 cancelHandler: function () {\r\n                 prmobj.setState({message: null});\r\n                 }\r\n                 };\r\n                 prmobj.setState({message: message});\r\n                 */\r\n                break;\r\n            }\r\n            //PMA - START CODE - 2017-01-13 - Threshold button\r\n\r\n            case  PromotionActionConstants.BTN_INVOKEAUDITTRAIL: {\r\n                console.log('BTN_INVOKEAUDITTRAIL - START');\r\n                this.apex_invokeAuditTrail(this.getId()).then(result => {\r\n                    console.log('BTN_INVOKEAUDITTRAIL - RESULT ' + result.__Status);\r\n                    if (result.__Status) {\r\n                        console.log('BTN_INVOKEAUDITTRAIL - DATA ' + result.data);\r\n                        let showError = () => UI_EVENT_BUS.put(EVENTS.UI_ERROR, {\r\n                            title: 'TEST',\r\n                            message: result.data.toString(),\r\n                            type: 'W'\r\n                        });\r\n                        showError();\r\n                    }\r\n                });\r\n                break;\r\n            }\r\n\r\n            case PromotionActionConstants.UPDATE_ENABLE_PUSH: {\r\n                let promoContent = this.serializePromotion();\r\n                console.log(\"PERFORMED ACTION Release Child Accounts for Promotion ID:\" + this.Id);\r\n                this.apex_UpdateEnablePush(JSON.stringify(promoContent)).then((response) => {\r\n                    if (response.__Status) {\r\n                        this.changeHandler();\r\n                    } else {\r\n                        let showError = () => UI_EVENT_BUS.put(EVENTS.UI_ERROR, {\r\n                            title: AppManager.getLabel('PP_TIT_RELEASE_ERROR') || 'Error updating child promotions',\r\n                            message: AppManager.getLabel('PP_LBL_RELEASE_ERROR') || 'An error occurred while trying to release the child promotions account',\r\n                            type: 'E'\r\n                        });\r\n                        showError();\r\n                    }\r\n                });\r\n                break;\r\n            }\r\n\r\n            case PromotionActionConstants.VALIDATE_TACTIC_TIERS: {\r\n                let newTacticTiers = action.payload.TacticTiers;\r\n                console.log(\"PERFORMED ACTION Validate Tactic Tiers for Tactic ID:\" + action.payload.TacticId);\r\n                this.LOExtTacticTiers.apex_validate(JSON.stringify(newTacticTiers)).then((response) => {\r\n                    if (response.__Status) {\r\n\r\n                        let tacticTiers = _.find(this.LOExtTacticTiers.getAllItems(), (item) => {\r\n                            return item.tacticId == action.payload.TacticId;\r\n                        });\r\n                        if (tacticTiers) {\r\n                            if (!tacticTiers.setJSONTier)\r\n                                tacticTiers.setJSONTier = function (value) {\r\n                                    tacticTiers.JSONTier = value;\r\n                                    tacticTiers.objectStatus |= STATE.DIRTY;\r\n                                };\r\n                            tacticTiers.setJSONTier(JSON.stringify(newTacticTiers));\r\n                        } else {\r\n                            this.LOExtTacticTiers.addItem({\r\n                                tacticId: action.payload.TacticId,\r\n                                JSONTier: JSON.stringify(newTacticTiers)\r\n                            });\r\n                        }\r\n\r\n                        this.LOTactic.getAllItems().map(tactic => {\r\n                            if (tactic.Id === action.payload.TacticId)\r\n                                tactic.InvalidTacticTiers = false;\r\n                        });\r\n\r\n                        this.changeHandler();\r\n                    } else {\r\n\r\n                        this.LOTactic.getAllItems().map(tactic => {\r\n                            if (tactic.Id === action.payload.TacticId)\r\n                                tactic.InvalidTacticTiers = true;\r\n                        });\r\n\r\n                        this.changeHandler();\r\n                    }\r\n                });\r\n                break;\r\n            }\r\n\r\n            case PromotionActionConstants.VALIDATE_FUNDS: {\r\n                let newFunds = action.payload.funds;\r\n                console.log(\"PERFORMED ACTION Validate Funds for Tactic ID:\" + action.payload.tacticId);\r\n                this.LOFund.apex_validate(JSON.stringify(newFunds)).then((response) => {\r\n                    if (response.__Status) {\r\n\r\n                        //TODO Prepare data into BOPromotion object (For writeBOPromotion)\r\n\r\n                        this.LOTactic.getAllItems().map(tactic => {\r\n                            if (tactic.Id === action.payload.tacticId)\r\n                                tactic.InvalidFunds = false;\r\n                        });\r\n\r\n                        this.changeHandler();\r\n                    } else {\r\n\r\n                        this.LOTactic.getAllItems().map(tactic => {\r\n                            if (tactic.Id === action.payload.tacticId)\r\n                                tactic.InvalidFunds = true;\r\n                        });\r\n\r\n                        this.changeHandler();\r\n                    }\r\n                });\r\n                break;\r\n            }\r\n\r\n            /*\r\n             case PromotionActionConstants.MYACTION:\r\n             // Do something here\r\n             break;\r\n             */\r\n            default:\r\n                console.log('Unknown action type ${payload.actionType} detected. Cannot call appropriate action.');\r\n                break;\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = Promotion_Cust;\n\n\n// WEBPACK FOOTER //\n// baseClasses/Promotion_Cust.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAgBA;AAxBA;AACA;AA+DA;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAaA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAaA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAaA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAcA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAcA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAgBA;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAaA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAaA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAaA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAaA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AALA;AAXA;AACA;AAoBA;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAcA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAaA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAeA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAaA;;;;;;;;ACdA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAhBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AA5BA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAxBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AA1JA;AA4JA;AAngCA;AACA;AAqgCA;;;;;;;;ACtgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAgBA;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAaA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AADA;AACA;AAoBA;AACA;AACA;AAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDA;AACA;AAqDA;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA1CA;AA+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlNA;AAhGA;AACA;AAqTA;;;;;;;;ACtTA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAWA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AADA;AADA;AACA;AAdA;AALA;AACA;AA0BA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;AAQA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAVA;AAaA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAVA;AAaA;AAzCA;AACA;AA2CA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AAfA;AAiBA;AACA;AA9GA;AACA;AAgHA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAVA;AACA;AAYA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAVA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlKA;AAoKA;AAzjBA;AACA;AA2jBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7jBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAUA;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAaA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAeA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAcA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AApBA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAeA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAcA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AALA;AAdA;AACA;AAuBA;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AALA;AACA;AAcA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AALA;AACA;AAcA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7FA;AAFA;AACA;AAkGA;;;;;;;;ACnGA;AACA;AACA;AAOA;AATA;AACA;AAWA;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AALA;AACA;AAcA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAeA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AAEA;AACA;AApBA;AACA;AAuBA;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAeA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAgBA;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAgBA;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AALA;AAdA;AACA;AAuBA;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAaA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAcA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAeA;;;;;;;;AChBA;AACA;AACA;AACA;AAKA;AARA;;;;;;;;;;;;ACAA;AACA;;;;;;AAMA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;;;;AAKA;AACA;AACA;AARA;AAUA;AACA;;;AAGA;AACA;AACA;AACA;AAvEA;AAiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AADA;AADA;AACA;AAdA;AALA;AACA;AA0BA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAVA;AAaA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAVA;AAaA;AAzCA;AACA;AA2CA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AAfA;AAiBA;AACA;AA9GA;AACA;AAgHA;AACA;AACA;AACA;AAMA;AACA;AACA;AAGA;;;;;;;;ACvVA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;;;;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AA7DA;AACA;AADA;AA8DA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAKA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAMA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AA/DA;AACA;AADA;AAgxBA;AAyBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAvCA;AACA;AADA;AAwCA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AArZA;AAuZA;AAtlBA;AACA;AAwlBA;;;","sourceRoot":""}