<apex:page showHeader="false" sidebar="false" controller="PQN_UploadNCData"  apiVersion="36.0" docType="html-5.0">
    
    <apex:form id="frm1">
    <head>
        <title>IMPORT EXCEL DATA</title>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <!--<link href="//netdna.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css"/>-->
        
        
        <!--<script src="//netdna.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>-->
        
        <!--<apex:includescript value="https://code.jquery.com/jquery-1.11.1.min.js" / >
        <script src="//code.jquery.com/jquery-1.10.2.min.js"></script>
        <apex:includescript value="https://cdn.datatables.net/1.10.4/js/jquery.dataTables.min.js" />
        <apex:includescript value="https://code.jquery.com/jquery-1.11.1.min.js" / >-->
        <script src="{!URLFOR($Resource.PQN_Bootstrap, 'PQN_Bootstrap_Home/js/jquery-1.11.1.min.js')}"></script>
        <script src="{!URLFOR($Resource.PQN_Bootstrap, 'PQN_Bootstrap_Home/js/jquery.dataTables.min.js')}"></script>
        <!--<apex:stylesheet value="https://cdn.datatables.net/1.10.4/css/jquery.dataTables.css" />
        <script>
            j$ = jQuery.noConflict();
            j$(document).ready( function () {
                var contactTable = j$('[id$="contacttable"]').DataTable({
                    
                });
            });
        </script>-->
        
    </head>
<style>

</style>    
    <body>
        <div id="wrapper">
        
        <c:PQN_Navigation navigationName="multiple_entry"/>
        <!-- /#page-wrapper -->
        <div id="page-wrapper">
            <div class="container-fluid">

            <div class ="row">            
                <div class="col-md-6">
                <h3>Please Upload Nonconformance Data <br/> <small>You can import up to 1000 records at a time.</small></h3>
                </div>
                <div class="col-md-6">
                    <div class="pull-right">

                    </div>
                </div>
            </div>
             <hr/>
           
          <div class="panel panel-default">
            <div class="panel-heading"><strong>Import Data</strong> <small>Excel file upload</small></div>
            <div class="panel-body">
               <h4>Select format to parse the excel </h4>
              <div class = "pull-right">
                  <apex:outputPanel id="ipfile">
                  <apex:selectList value="{!selectedfile}" size="1" styleClass="selectedFile">
                      <apex:selectOptions value="{!filetype}"/>
                  </apex:selectList>
                  </apex:outputPanel>
                  <!--<select name="format">
                    <option value="csv"> CSV</option>
                    <option value="json" selected="selected"> JSON</option>
                  </select>-->
              </div>
              
              <!-- Standar Form -->
              <br/> <br/>
              <h4>Select files from your computer
                <sup style= "font-size:13px;">
                    <a href="#" data-toggle="tooltip" title="Choose the file containing the data you want to import. You can import up to 1000 records at a time."> ? </a>
                </sup>
            </h4>
            
                <div class="form-inline pull-right">
                  <div class="form-group">
                    <input type="file" name="xlfile" id="xlf"/>
                  </div>
                </div>
                
                <br/>
                <br/>
              <!-- Drop Zone -->
         <!--     <h4>Or drag and drop file below <sup ><a href="#" data-toggle="tooltip" title="Choose the file containing the data you want to import. You can import up to 10,000 records at a time."> ? </a></sup></h4>

                <br/>
                <br/>
                  <div class="upload-drop-zone" id="drop">
                    Just drag and drop any excel file here
                  </div>
           -->      
                  <div style="margin:20px;">
                    <!--<button class="btn1" type="button" onclick="tableToExcel('exportTable', 'MD Patient List View');">Export</button>-->
                    <!--<apex:commandButton styleClass="btn1" onclick="initiateInsertion();" value="Start Import" reRender="dummypanel" />-->
                   <!-- <apex:commandButton styleClass="btn1" onclick="initiateInsertion();" value="Start Import" reRender="dummypanel" />-->
                    <!--<button class="btn1" onclick="initiateInsertion();" >Start Import</button>-->
                    <input class="btn" value="Start Import" type="button" onclick="initiateInsertion();"/>

                    </div>
                    <apex:actionStatus id="submitbut" startText="Please Wait...."/>
              <div class = "panel panel-info">
                   <div class = "panel-heading">
                      <h3 class = "panel-title">Output</h3>
                   </div>
                
                 
              
                    <apex:actionFunction name="passStringToUploadDataTosObject" action="{!parseData}" reRender="output123,NCData" status="submitbut">
                        <apex:param name="data" value="" assignTo="{!myString}" />
                    </apex:actionFunction>
                    
                    <apex:actionFunction name="saveexceldatainapex" action="{!savedata}" reRender="NCData" status="savewait">
                        
                    </apex:actionFunction>
               <apex:outputPanel id="dummypanel">
               </apex:outputPanel>
               <!--   <apex:outputPanel id="output123" rendered="{!status}">
                    Status : {!IF(status,'true', 'false')}
                        <div class="alert alert-success fade in">
                    
                            <a href="#" class="close" data-dismiss="alert">Ã—</a>
                    
                                <strong> Success! </strong>  <span class="label label-inverse"> {!size} </span> Rows inserted successfully.
                    
                        </div>
                  </apex:outputPanel>  -->
                    
                 <apex:actionStatus id="savewait" startText="Please Wait...."/>
                   <div class = "panel-body" >
                   
                       <apex:outputPanel id="NCData">
                       <apex:outputtext value="{!message}" styleclass="color:red"/>
                       <apex:commandLink value="Show Inserted Data" rendered="{!Showsuccessdata}" action="{!showsucesstable}" reRender="NCData"/>
                       <apex:commandLink value="Show Error Data" rendered="{!Hidesuccessdata}" action="{!hidesuccesstable}" reRender="NCData"/>
                       <apex:pageBlock title="" rendered="{!showallsuccessmsg && Showsuccessdata}">
                         <p style="color:green">  <strong> Success! </strong> All rows inserted successfully. Please click on show inserted data to view the data.</p>
                       </apex:pageblock>
                       
                       <apex:pageBlock title="Uploaded NC data" rendered="{!if(forInsertWrapper.size>0,true,false) && showerrortable}">
                       
                       <apex:pageBlockButtons >
                           <input class="btn" value="Save" type="button" onclick="saveexceldata();"/>
                          <!-- <apex:commandButton value="Save" action="{!savedata}" rerender="NCData" status="savewait"/>-->
                           <input class="btn" value="Export" type="button" onclick="tableToExcel('Data Collection');"/>
                           
                       </apex:pageBlockButtons>
                        <apex:outputpanel style="overflow:scroll;height:250px;" layout="block">
                        <apex:outputPanel rendered="{!if(forinsertErrors.size>0,true,false)}">
                            <p style="color:red">Error Data</p>
                        </apex:outputPanel>
                        
                        <div id="dvData" style="display:none;">
                            <table id="exportTable">
                                <thead>
                                <tr>
                                    <th>Error Msg</th>
                                    <th>Delivery Note Number</th>
                                    <th>SKU</th>
                                    <th>Supplier</th>
                                    <th>Reason Code</th>
                                    <th>No. Of pallets per SKU NC</th>
                                    <th>Loss Code</th>
                                    <th>MCO</th>
                                    <th>Cluster</th>
                                    <th>Sub Cluster</th>
                                    <th>Description</th>
                                    <th>DC Country</th>
                                    <th>Supplier Type</th>
                                    
                                </tr>
                                </thead>
                                <tbody>
                                <apex:repeat value="{!forInsertWrapper}" var="nc">
                                    <tr>
                                        <td>{!nc.errorMessage}</td>
                                        <td>{!nc.pqn.Delivery_Note_Number__c}</td>
                                        <td>{!nc.pqn.SKU__c}</td>
                                        <td>{!nc.pqn.Supplier__c}</td>
                                        <td>{!nc.pqn.Non_compliance_reason_code__c}</td>
                                        <td>{!nc.pqn.Number_of_Pallets_Per_SKU_Non_Compliant__c}</td>
                                        <td>{!nc.pqn.Losses__c}</td>
                                        <td>{!nc.pqn.MCO__c}</td>
                                        <td>{!nc.pqn.SKU__c}</td>
                                        <td>{!nc.pqn.Cluster__c}</td>
                                        <td>{!nc.pqn.Sub_Cluster__c}</td>
                                        <td>{!nc.pqn.Description__c}</td>
                                        <td>{!nc.pqn.DC_Country__c}</td>
                                        <td>{!nc.pqn.Supplier_type__c}</td>
                                                                              
                                    </tr>
                                </apex:repeat>
                                </tbody>
                          </table>
                        </div>
                       
                       <apex:pageBlockTable value="{!forInsertWrapper}" var="nc">
                       <apex:column headerValue=""  >
                           <apex:outputPanel rendered="{!if(nc.errorMessage!=null,true,false)}">
                            <sup style= "font-size:13px">
                                <a href="#" data-toggle="tooltip" title="{!nc.errorMessage}" style= "color:red"> X </a>
                            </sup>
                            </apex:outputPanel>
                        </apex:column>
                        
                        <apex:column headerValue="Delivery Note Number" >
                            <apex:inputField value="{!nc.pqn.Delivery_Note_Number__c}"/>
                        </apex:column>
                        <apex:column headerValue="SKU" >
                            <apex:inputField value="{!nc.pqn.SKU__c}"/>
                        </apex:column>
                        <apex:column headerValue="Supplier" >
                            <apex:inputField value="{!nc.pqn.Supplier__c}"/>
                        </apex:column>
                           <apex:column headerValue="Reason Code" >
                            <apex:inputField value="{!nc.pqn.Non_compliance_reason_code__c}"/>
                        </apex:column>
                        <apex:column headerValue="No. Of pallets per SKU NC" >
                            <apex:inputField value="{!nc.pqn.Number_of_Pallets_Per_SKU_Non_Compliant__c}"/>
                        </apex:column>
                       <!-- <apex:column headerValue="Date Pallet received" >
                            <apex:inputField value="{!nc.pqn.Date_Pallet_Received__c}"/>
                        </apex:column>-->
                        <apex:column headerValue="Loss Code" >
                            <apex:inputField value="{!nc.pqn.Losses__c}"/>
                        </apex:column>
                        <apex:column headerValue="MCO" >
                            <apex:inputField value="{!nc.pqn.MCO__c}"/>
                        </apex:column>   
                        <apex:column headerValue="Cluster" >
                            <apex:inputField value="{!nc.pqn.Cluster__c}"/>
                        </apex:column>
                        <apex:column headerValue="Sub Cluster" >
                            <apex:inputField value="{!nc.pqn.Sub_Cluster__c}"/>
                        </apex:column>
                           <apex:column headerValue="Description" >
                            <apex:inputField value="{!nc.pqn.Description__c}"/>
                        </apex:column>
                           
                        <apex:column headerValue="DC Country" >
                            <apex:inputField value="{!nc.pqn.DC_Country__c}"/>
                        </apex:column>
                           
                              <apex:column headerValue="Supplier Type" >
                                        <apex:inputField value="{!nc.pqn.Supplier_type__c}"/>
                             </apex:column>

                        </apex:pageBlockTable>
                                             
                       </apex:outputpanel>
                       </apex:pageBlock>
                       
                       <apex:pageBlock title="Inserted Data" rendered="{!if(forinsertsuccess.size>0,true,false) && (!showsuccessdata)}">
                           <apex:pageBlockTable value="{!forinsertsuccess}" var="suc">
                               <apex:column headerValue="Delivery Note Number" >
                                    <apex:outputField value="{!suc.Delivery_Note_Number__c}"/>
                                </apex:column>
                                <apex:column headerValue="SKU" >
                                    <apex:outputField value="{!suc.SKU__c}"/>
                                </apex:column>
                                <apex:column headerValue="Supplier" >
                                    <apex:outputField value="{!suc.Supplier__c}"/>
                                </apex:column>
                                <apex:column headerValue="Reason Code" >
                                    <apex:outputField value="{!suc.Non_compliance_reason_code__c}"/>
                                </apex:column>
                                <apex:column headerValue="No. Of pallets per SKU NC" >
                                    <apex:outputField value="{!suc.Number_of_Pallets_Per_SKU_Non_Compliant__c}"/>
                                </apex:column>
                                <apex:column headerValue="Loss Code" >
                                    <apex:outputField value="{!suc.Losses__c}"/>
                                </apex:column>
                                <apex:column headerValue="MCO" >
                                    <apex:outputField value="{!suc.MCO__c}"/>
                                </apex:column>   
                                <apex:column headerValue="Cluster" >
                                    <apex:outputField value="{!suc.Cluster__c}"/>
                                </apex:column>
                                <apex:column headerValue="Sub Cluster" >
                                    <apex:outputField value="{!suc.Sub_Cluster__c}"/>
                                </apex:column>
                                
                            </apex:pageblockTable>
                       </apex:pageBlock>
                       
                       
                       </apex:outputPanel>
                       <apex:outputPanel id="outjson">
                      <div style="display:none">
                      <pre id="out">
                      </pre>
                      </div>
                      </apex:outputPanel>
                     
                   </div>
                    
                   
                </div>
                
            </div>
          </div>
        <div class="footer">
           <div class="container">

          </div>
        </div>
        
                               

        <!--<script src="https://cdnjs.cloudflare.com/ajax/libs/es5-shim/4.5.7/es5-shim.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.8.0/jszip.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.8.0/xlsx.js"></script>-->
        <script src="{!URLFOR($Resource.PQN_Bootstrap, 'PQN_Bootstrap_Home/xls/es5-shim_4.5.7_es5-shim.js')}"></script>
        <script src="{!URLFOR($Resource.PQN_Bootstrap, 'PQN_Bootstrap_Home/xls/xlsx_0.8_jszip.js')}"></script>
        <script src="{!URLFOR($Resource.PQN_Bootstrap, 'PQN_Bootstrap_Home/xls/xlsx_0.8_xlsx.js')}"></script>
        <script>
            $(document).ready(function(){
                $('[data-toggle="tooltip"]').tooltip();
            });
            </script>
        <script>
            var X = XLSX;
            var fileName ;
            function fixdata(data) {
                var o = "", l = 0, w = 10240;
                for(l=0; l<data.byteLength/w; ++l) o+=String.fromCharCode.apply(null,new Uint8Array(data.slice(l*w,l*w+w)));
                o+=String.fromCharCode.apply(null, new Uint8Array(data.slice(l*w)));
                return o;
            }
            
            function get_radio_value( radioName ) {
                var radios = document.getElementsByName( radioName );
                for( var i = 0; i < radios.length; i++ ) {
                    if( radios[i].checked || radios.length === 1 ) {
                        return radios[i].value;
                    }
                }
            }
            
            function to_json(workbook) {
                var result = {};
                workbook.SheetNames.forEach(function(sheetName) {
                    var a = workbook.Sheets[sheetName]["!ref"];
                    a=a.split(":");
                    var b={};
                    var selectedFile = document.getElementsByClassName('selectedFile')[0].value;
                    if(selectedFile =="Cannock"){
                        b['range'] = "B9:"+a[1];
                    }
                    if(selectedFile =="Unilever"){
                        b['range'] = "A1:"+a[1];
                    }
                    if(selectedFile =="Heilbronn"){
                        b['range'] = "B9:"+a[1];
                    }
                    var roa = X.utils.sheet_to_row_object_array(workbook.Sheets[sheetName],b);
                    console.log(roa);
                    if(roa.length > 0){
                        
                        result[sheetName] = roa;
                    }
                });
                return result;
            }
            
            function to_csv(workbook) {
                var result = [];
                workbook.SheetNames.forEach(function(sheetName) {
                    var csv = X.utils.sheet_to_csv(workbook.Sheets[sheetName]);
                    if(csv.length > 0){
                        result.push("SHEET: " + sheetName);
                        result.push("");
                        result.push(csv);
                    }
                });
                return result.join("\n");
            }
            
            function to_formulae(workbook) {
                var result = [];
                workbook.SheetNames.forEach(function(sheetName) {
                    var formulae = X.utils.get_formulae(workbook.Sheets[sheetName]);
                    if(formulae.length > 0){
                        result.push("SHEET: " + sheetName);
                        result.push("");
                        result.push(formulae.join("\n"));
                    }
                });
                return result.join("\n");
            }
            
            function process_wb(wb) {
            //console.log(wb);
                var output = "";
                switch("json") {
                    case "json":
                        output = JSON.stringify(to_json(wb), 2, 2);
                        break;
                    case "form":
                        output = to_formulae(wb);
                        break;
                    default:
                    output = to_csv(wb);
                }
                
                 
                if(out.innerText === undefined) out.textContent = output;
                  else out.innerText = output;
                
                if(typeof console !== 'undefined') console.log("output", new Date());
            }
            
            function initiateInsertion(){
              
              //  alert(document.getElementById('out').innerText);
              passStringToUploadDataTosObject(document.getElementById('out').innerText);
            
            }
            function saveexceldata(){
                saveexceldatainapex();
            }
     
            var xlf = document.getElementById('xlf');
            function handleFile(e) {
           
                var files = e.target.files;
                var f = files[0];
                {
                    var reader = new FileReader();
                    var name = f.name;
                    fileName = name
                    reader.onload = function(e) {
                        var data = e.target.result;
                            var arr = fixdata(data);
                            var wb =  X.read(btoa(arr), {type: 'base64'});
                            process_wb(wb);
                    };
                    reader.readAsArrayBuffer(f);
                }
                return false;
            }
            
            if(xlf.addEventListener) xlf.addEventListener('change', handleFile, false);
            
                   
    
            </script>
            <script>
                      //var tableToExcel = (function() {
                     
                         /*var uri = 'data:application/vnd.ms-excel;base64,'
                        , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>'
                        , base64 = function(s) { return window.btoa(unescape(encodeURIComponent(s))) }
                        , format = function(s, c) { return s.replace(/{(\w+)}/g, function(m, p) { return c[p]; }) }
                        return function(table, name) {
                        if (!table.nodeType) table = document.getElementById(table)
                        var ctx = {worksheet: name || 'Worksheet', table: table.innerHTML}
                        //window.location.href = uri + base64(format(template, ctx))
                        var ref= uri + base64(format(template, ctx));
                        var save = document.createElement('a');
                        save.href = ref;
                        save.target = '_blank';
                        save.download = 'test.xls';
                        
                        }*/
                  // })()
                function tableToExcel(file_Name){
                       var a = document.createElement('a');
                        //getting data from our div that contains the HTML table
                        var data_type = 'data:application/vnd.ms-excel';
                        var table_div = document.getElementById('dvData');
                        var table_html = table_div.outerHTML.replace(/ /g, '%20');
                        a.href = data_type + ', ' + table_html;
                        //setting the file name
                        if(fileName.length>0){
                            fileName = fileName.substr(0, fileName.lastIndexOf('.'));
                        }else{
                            fileName= '';
                        }
                        a.download = fileName+'_error.xls';
                        //triggering the function
                        a.click();
                   }
                   
                  </script>
            </div>
            </div>
         </div>
     </body>
 </apex:form>

</apex:page>