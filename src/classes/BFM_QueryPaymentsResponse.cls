//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class BFM_QueryPaymentsResponse {
    public static void consumeObject(JSONParser parser) {
        Integer depth = 0;
        do {
            JSONToken curr = parser.getCurrentToken();
            if (curr == JSONToken.START_OBJECT || 
                curr == JSONToken.START_ARRAY) {
                    depth++;
                } else if (curr == JSONToken.END_OBJECT ||
                           curr == JSONToken.END_ARRAY) {
                               depth--;
                           }
        } while (depth > 0 && parser.nextToken() != null);
    }
    
    public class PaidDocuments {
        public String referenceNumber {get;set;} 
        public String date_z {get;set;} 
        public Integer amount {get;set;} 
        public String documentNumber {get;set;} 
        
        public PaidDocuments(JSONParser parser) {
            while (parser.nextToken() != JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != JSONToken.VALUE_NULL) {
                        if (text == 'referenceNumber') {
                            referenceNumber = parser.getText();
                        } else if (text == 'date') {
                            date_z = parser.getText();
                        } else if (text == 'amount') {
                            amount = parser.getIntegerValue();
                        } else if (text == 'documentNumber') {
                            documentNumber = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'PaidDocuments consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public QueryPaymentResponse QueryPaymentResponse {get;set;} 
    
    public BFM_QueryPaymentsResponse(JSONParser parser) {
        while (parser.nextToken() != JSONToken.END_OBJECT) {
            if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                String text = parser.getText();
                if (parser.nextToken() != JSONToken.VALUE_NULL) {
                    if (text == 'QueryPaymentResponse') {
                        QueryPaymentResponse = new QueryPaymentResponse(parser);
                    } else {
                        System.debug(LoggingLevel.WARN, 'Root consuming unrecognized property: '+text);
                        consumeObject(parser);
                    }
                }
            }
        }
    }
    
    public class Payments {
        public String accessKey {get;set;} 
        public String objectType {get;set;} 
        public String miroNumber {get;set;} 
        public String invoiceDocNumberFI {get;set;} 
        public Date postingDate {get;set;} 
        public String paymentBlock {get;set;} 
        public String cancellationDocument {get;set;} 
        public Date cancellationPostingDate {get;set;} 
        public String annulationDocument {get;set;} 
        public String annulationPostingDate {get;set;} 
        public String accessKeyAnnulationInvoice {get;set;} 
        public String nfWriterDocument {get;set;} 
        public String nfWriterPostingDate {get;set;} 
        public String paymentDocument {get;set;} 
        public String paymentDate {get;set;} 
        public String paymentMethod {get;set;} 
        public String netDueDate {get;set;} 
        public Boolean cancellationFlag  {get;set;} 
        public Boolean annulmentFlag {get;set;} 
        public Integer paymentAmount {get;set;} 
        public String logMessage {get;set;} 
        public List<PaidDocuments> paidDocuments {get;set;} 
        
        public Payments(JSONParser parser) {
            while (parser.nextToken() != JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != JSONToken.VALUE_NULL) {
                        if (text == 'accessKey') {
                            accessKey = parser.getText();
                        } else if (text == 'objectType') {
                            objectType = parser.getText();
                        } else if (text == 'miroNumber') {
                            miroNumber = parser.getText();
                        } else if (text == 'invoiceDocNumberFI') {
                            invoiceDocNumberFI = parser.getText();
                        } else if (text == 'postingDate') {
                            postingDate = parser.getDateValue();
                        } else if (text == 'paymentBlock') {
                            paymentBlock = parser.getText();
                        } else if (text == 'cancellationDocument') {
                            cancellationDocument = parser.getText();
                        } else if (text == 'cancellationPostingDate') {
                            cancellationPostingDate = parser.getDateValue();
                        } else if (text == 'annulationDocument') {
                            annulationDocument = parser.getText();
                        } else if (text == 'annulationPostingDate') {
                            annulationPostingDate = parser.getText();
                        } else if (text == 'accessKeyAnnulationInvoice') {
                            accessKeyAnnulationInvoice = parser.getText();
                        } else if (text == 'nfWriterDocument') {
                            nfWriterDocument = parser.getText();
                        } else if (text == 'nfWriterPostingDate') {
                            nfWriterPostingDate = parser.getText();
                        } else if (text == 'paymentDocument') {
                            paymentDocument = parser.getText();
                        } else if (text == 'paymentDate') {
                            paymentDate = parser.getText();
                        } else if (text == 'paymentMethod') {
                            paymentMethod = parser.getText();
                        } else if (text == 'netDueDate') {
                            netDueDate = parser.getText();
                        } else if (text == 'cancellationFlag ') {
                            cancellationFlag  = parser.getBooleanValue();
                        } else if (text == 'annulmentFlag') {
                            annulmentFlag = parser.getBooleanValue();
                        } else if (text == 'paymentAmount') {
                            paymentAmount = parser.getIntegerValue();
                        } else if (text == 'logMessage') {
                            logMessage = parser.getText();
                        } else if (text == 'paidDocuments') {
                            paidDocuments = new List<PaidDocuments>();
                            while (parser.nextToken() != JSONToken.END_ARRAY) {
                                paidDocuments.add(new PaidDocuments(parser));
                            }
                        } else {
                            System.debug(LoggingLevel.WARN, 'Payments consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class QueryPaymentResponse {
        public List<Payments> payments {get;set;} 
        
        public QueryPaymentResponse(JSONParser parser) {
            while (parser.nextToken() != JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != JSONToken.VALUE_NULL) {
                        if (text == 'payments') {
                            payments = new List<Payments>();
                            while (parser.nextToken() != JSONToken.END_ARRAY) {
                                payments.add(new Payments(parser));
                            }
                        } else {
                            System.debug(LoggingLevel.WARN, 'QueryPaymentResponse consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    
    public static BFM_QueryPaymentsResponse parse(String json) {
        return new BFM_QueryPaymentsResponse(System.JSON.createParser(json));
    }
}