<apex:component >

    <script>
        function loadPopUp()
        {
            cp_PlannerController.getNewActionUrl(function(result,event)
            {
                var url = result;
                j$('#record-detail').attr('src',url);
                var myname;
                j$('#detail-iframe-dialog').dialog({
                    modal: true,
                    height: 600,
                    width: 1000,
                    close: function(event, ui)
                    {
                        viewKey = '';
                        j$('#calendar').fullCalendar( 'refetchEvents' );
                    }
                });
           },   {escape:false});
            
           return false;
        }

        function resetAll() 
        {
            j$('input[data-type]').each(function(e) {
                j$(this).prop('checked', false);
            });

            var exdate = new Date();
            var exdays = 10;
            exdate.setDate(exdate.getDate() + exdays);
            var reset_c_value = escape('reset') + ((exdays==null) ? "" : "; expires="+exdate.toUTCString());
            document.cookie = 'resetCookie' + "=" + reset_c_value;
            location.reload();
        }

        function calendarJumpTo (_y, _m)
        {
            j$('#calendar').fullCalendar( 'gotoDate', _y, _m);
            viewKey = '';
            j$('#calendar').fullCalendar( 'refetchEvents' );
        }

        function jumpTo() 
        {
            var _viewYear =  parseInt(j$('.jump_to_year').val());
            var _viewMonth = parseInt(j$('.jump_to_month').val());

            calendarJumpTo(_viewYear, _viewMonth);
        }

        jQuery(document).ready(function($)
        {
            viewKey = ""; // Represents the current view of the Calendar i.e Object, Fields and Filter
            
            // When User Checks or Unchecks global events checkbox, 
            // Refresh the Event list accordingly
            $globalCheckbox.change( function()
            {
                viewKey = '';
                j$('#calendar').fullCalendar( 'refetchEvents' ); 
            });

            // Calendar Setup 
            var date = new Date();
            var d = date.getDate();
            var m = date.getMonth();
            var y = date.getFullYear();

            j$('#calendar').fullCalendar({
                header: {
                    left: 'prev month,basicWeek,basicDay',
                    right: 'title,next'
                },
                dayClick: dayClickHandler,
                editable: true,
                eventClick: eventClickHandler,
                eventMouseover: mouseOverHandler,
                viewDisplay: function(view)
                {
                    currentViewStart = j$.fullCalendar.formatDate( view.visStart, 'yyyy-MM-dd HH:mm:ss');
                    currentViewEnd = j$.fullCalendar.formatDate( view.visEnd, 'yyyy-MM-dd HH:mm:ss');
                },
                eventMouseout: mouseOutHandler,
                eventResize: eventChangeHandler,
                eventDrop: eventChangeHandler,
                columnFormat: {
                    month: 'dddd',     
                   week: 'dddd, MMM dS',
                   day: 'dddd, MMM dS'
                },
                eventAfterRender: function(event, element, view)
                {
                    element.append("<span class='event-code'>" + event.Activity_Code__c + "</span>");
                    // add i icon
                    if (event.isGlobalEventOptional)
                    {
                        element.find(".fc-event-inner").addClass('global-event-info');
                    }
                    else if (element.hasClass("global"))
                    {
                        element.find(".fc-event-inner").addClass('global-event');
                    }
                    
                    if (event.isOptOut)
                    {
                        element.find(".fc-event-inner").addClass('event-optout');
                    }              
                },
                events: function(start, end, callback)
                {
                    // refetchEvents 
                    //If Print Preview
                    if('{!$CurrentPage.Name}' == 'CalendarPrint')
                    {
                        startdate = "{!$CurrentPage.Parameters.start}";
                        endDate = "{!$CurrentPage.Parameters.end}";
                        _conditions = unescape("{!$CurrentPage.Parameters.filter}");
                    }
                    else
                    {
                        //Cache notification div for future Use
                        $notyPop = j$('#notify-pop');
                        var currentViewKey =  startdate + endDate + _conditions;
    
                        if(viewKey != currentViewKey)
                        { 
                            _conditions = findWhereClause();

                            cp_PlannerController.getMyObjectAsJson(
                                _formattedPrevMonth,
                                _formattedNextMonth,
                                _conditions, 
                                $globalCheckbox.is(':checked'),
                                $plannerSelectedOptions.slice(),
                                $uleSelectedOptions.slice(), function(result, event) 
                            {

                                if ($notyPop.children().is("ul"))
                                { 
                                    //remove old notifications
                                    $notyPop.children().remove();
                                }

                                messageUser('success', '<strong>Refreshing Calendar....</strong>' );

                                var parsedEventsObject = JSON.parse(result.eventData);

                                if (!parsedEventsObject.length)
                                {
                                    setDashboard('warn','No <strong>'+objText+'</strong> records to display.');
                                }
                                else
                                {
                                    var recordsFound = parsedEventsObject.length;
                                }
                                if (saveException.length)
                                {
                                    messageUser('alert',saveException);
                                }

                                viewKey = startdate + endDate + _conditions;
                                cachedEvents = parsedEventsObject;

                                hoverGenerator(parsedEventsObject);
                                callback(parsedEventsObject);
                                saveException = '';
                                // Re-enable Actions Panel
                                if('{!$CurrentPage.Name}' != 'CalendarPrint')
                                {
                                    j$('#btn-show-filter').removeClass('disabled');
                                    j$('#btn-print').removeClass('disabled');
                                    j$('#btn-change-colours').removeClass('disabled');
                                    if ( defaultFilterSet )
                                    {
                                        j$('#btn-clear-filter').removeClass('disabled')
                                    }
                             
                                }
                            },  {escape: false});

                            _clearEvents = false;
                        }
                        else
                        {
                            setDashboard('warn','In order to see your data in the calendar please select an object, start and end date fields. Note that if you check "Save as Default" then your data will load automatically.');
                        }
                    }
                },
            
                theme: true,
                color: 'red'
            });
                
            // For the filter form 
            j$('#btn-filter-apply').click(function(e)
            {
                if(!j$('#btn-filter-apply').is('.disabled'))
                {
                    e.preventDefault();
                    j$('[id$=filter-form]').submit();
                    viewKey = '';
                    j$('#calendar').fullCalendar( 'refetchEvents' );
                }
            });

            j$('.fc-button-prev, .fc-button-next').click(function(e)
            {
                viewKey = '';
                j$('#calendar').fullCalendar( 'refetchEvents');
            });

            // Handle the event when a day is clicked 
            function dayClickHandler(date, allDay, jsEvent, view)
            {
                loadPopUp();
                return false;        
            }
                
            // Hack to make the calendar jump to the specified month 
            var viewYear = parseInt({!IF(ISBLANK($CurrentPage.Parameters.year), '0', $CurrentPage.Parameters.year)});
            var viewMonth = parseInt({!IF(ISBLANK($CurrentPage.Parameters.month), '0', $CurrentPage.Parameters.month)});

            if (viewYear > 0)
            {
                calendarJumpTo(viewYear, viewMonth);
            }
             
            // Load the detail page for any calendar event that is clicked. 
            function eventClickHandler(event, jsEvent, view)
            {                
                var url = '{!URLFOR($Page.cp_RecordDetail)}' + '?id=' + event.id + '&isdtp=vw';
                //var url = result + '/id=' + event.Id;
                j$('#record-detail').attr('src',url);
                    
                j$('#detail-iframe-dialog').dialog({
                    modal: true,
                    height: 600,
                    width: 1000,
                    close: function(event, ui)
                    {
                        viewKey = '';
                        j$('#calendar').fullCalendar( 'refetchEvents' );
                    }
                });

                return false;
            }
                
            function hoverGenerator(parsedEventsObject)
            {
                j$('#campaignInfoPopOvr').children().remove();
                var geography = new Array();
                j$(parsedEventsObject).each(function(index, event)
                {
                    geography = [];
                    j$('#campaignInfoPopOvr')
                            .append(j$("<div></div>")
                            .attr('id', event.id)
                            .attr('style', 'display:none'))
                            
                    DIV = j$('#campaignInfoPopOvr').find('div[id=' + event.id + ']');
                    DIV.append("<h2>"+event.eventName+"</h2>" +
                                "<ul>");
                    
                    if(event.Project_Lead__c != "undefined")
                    {
                        DIV.find('ul').append("- Project Lead: " + event.Project_Lead__c + "<br/>");
                    }
                
                    if(event.ActivityDescriptionInternal__c != "undefined")
                    {
                        DIV.find('ul').append("- Activity Description internal: " + event.ActivityDescriptionInternal__c + "<br/>");
                    }

                    if(event.ActivityDescriptionExternal__c != "undefined")
                    {
                        DIV.find('ul').append("- Activity Description external: " + event.ActivityDescriptionExternal__c + "<br/>");
                    }

                    if(event.KeyAudienceInternal__c != "undefined")
                    {
                        DIV.find('ul').append("- Key Audience internal: " + event.KeyAudienceInternal__c + "<br/>");
                    }
                    if(event.KeyAudienceExternal__c != "undefined")
                    {
                        DIV.find('ul').append("- Key Audience external: " + event.KeyAudienceExternal__c + "<br/>");
                    }
                    if(event.Key_Audience_Other__c != "undefined")
                    {
                        DIV.find('ul').append("- Key Audience other: " + event.Key_Audience_Other__c + "<br/>");
                    }
                    DIV.append("</ul>");

                    DIV.append("<br/><h3>Invited Planners</h3>");
                    DIV.append("<div>");
                    DIV.append(event.plannerVisibility);
                    DIV.append("</div>");
                });
            }
                
            // tooltip on hover 
            function mouseOverHandler(event, jsEvent)
            {
                j$('#' + event.id).css({
                    'position' : 'absolute',
                    'z-index' : '9999',
                    'top' : jsEvent.pageY - 90,
                    'left' : jsEvent.pageX - 230
                }).addClass('hover hover-info').show();
                 
            }
            
            function mouseOutHandler(event, jsEvent)
            {
                j$('#' + event.id).hide();
            }
                
            function eventChangeHandler(event, dayDelta, minuteDelta, allDay, revertFunc, jsEvent, ui, view)
            {
                var data = j$('#calendar').fullCalendar('clientEvents');
                var data = [event];
                var ret = [];
                for (var i=0; i<data.length; i++)
                {
                    var s = new Date(data[i].start);
                    var e = new Date(data[i].end);
                  
                    var startDateStr = s.getFullYear() + '-' + (s.getMonth()+1) + '-' + s.getDate() + ' 00:00:00';
                    var endDateStr = e.getFullYear() + '-' + (e.getMonth()+1) + '-' + e.getDate() + ' 00:00:00';                  
                    var datum = {
                        id: data[i].id,
                        title: data[i].title,
                        start: startDateStr,
                        end: (data[i].end == null ? startDateStr : endDateStr),
                        allDay: data[i].allDay
                    }
                    ret[i] = datum;
                }                
                    
                cp_PlannerController.saveEventObject(JSON.stringify(ret), function(result, event)
                {
                    if (result.isSaved == false)
                    {
                        saveException = result.saveException;
                        viewKey = '';
                        j$('#calendar').fullCalendar( 'refetchEvents' );
                    }
                },  {escape:true});
                   
            }

        }); 

        function bindCheckbox()
        {
            j$('.filterCheckbox').change( function()
            {
                if(j$(this).is(':checked'))
                {
                    if(j$(this).attr('data-type') != "ule" && $plannerSelectedOptions.indexOf(j$(this).val()) == -1)
                    {
                        $plannerSelectedOptions.push(j$(this).val());
                    }
                    if(j$(this).attr('data-type') == "ule" && $uleSelectedOptions.indexOf(j$(this).val()) == -1)
                    {
                        $uleSelectedOptions.push(j$(this).val());
                    }
                }
                else
                {
                    if(j$(this).attr('data-type') != "ule")
                    {
                        $plannerSelectedOptions.remove(j$(this).val());
                    }
                    if(j$(this).attr('data-type') == "ule")
                    {
                        $uleSelectedOptions.remove(j$(this).val());
                    }
                }
                setDateFiltersFromCalendar();
                _conditions = findWhereClause();
                viewKey = '';
                j$('#calendar').fullCalendar( 'refetchEvents' );
            });

        }

    </script>

</apex:component>